'From Squeak3.6 of ''6 October 2003'' [latest update: #5429] on 7 February 2004 at 5:48:19 pm'!"Change Set:		FixChgRecDate:			5 February 2004Author:			Andreas RaabFixes the wild sharing of file pointers in change records."!Object subclass: #ChangeRecord	instanceVariableNames: 'file position type class category meta stamp fileName '	classVariableNames: ''	poolDictionaries: ''	category: 'Tools-Changes'!!ChangeRecord methodsFor: 'access' stamp: 'ar 2/5/2004 16:31'!fileName	^fileName ifNil:[file name]! !!ChangeRecord methodsFor: 'access' stamp: 'ar 2/5/2004 16:31'!originalChangeSetForSelector: methodSelector	"Returns the original changeset which contained this method version.  If it is contained in the .sources file, return #sources.  If it is in neither (e.g. its changeset was deleted), return nil.  (The selector is passed in purely as an optimization.)"	| likelyChangeSets originalChangeSet |	(self fileName localName findTokens: '.') last = 'sources'		ifTrue: [^ #sources].	likelyChangeSets _ ChangeSorter allChangeSets select: 		[:cs | (cs atSelector: methodSelector class: self methodClass) ~~ #none].	originalChangeSet _ likelyChangeSets		detect: [:cs | cs containsMethodAtPosition: position]		ifNone: [nil].	^ originalChangeSet  "(still need to check for sources file)"! !!ChangeRecord methodsFor: 'access' stamp: 'ar 2/5/2004 15:36'!readStampFrom: aFile	"Get the time stamp of this method off the file"	| item tokens anIndex |	stamp _ ''.	aFile ifNil: [^ stamp].	aFile position: position.	item _ aFile nextChunk.	tokens _ Scanner new scanTokens: item.	tokens size < 3 ifTrue: [^ stamp].	anIndex _ tokens indexOf: #stamp: ifAbsent: [^ stamp].	^ stamp _ tokens at: (anIndex + 1).! !!ChangeRecord methodsFor: 'access' stamp: 'ar 2/5/2004 15:35'!string 	^self withFileDo:[:aFile|		aFile position: position.		aFile nextChunk].! !!ChangeRecord methodsFor: 'access' stamp: 'ar 2/5/2004 15:40'!text	^[self withFileDo:[:aFile|		aFile position: position.		aFile nextChunkText.	]] on: Error do:[:ex| ex return: ''].! !!ChangeRecord methodsFor: 'initialization' stamp: 'ar 2/7/2004 17:46'!class: clsName category: cat method: method sourceFiles: fileArray	"This should be enough to find all the information for a method, or method deletion"	| aFile |	aFile _ fileArray at: method fileIndex.	self file: aFile position: method filePosition type: #method.	class _ clsName copyUpTo: $ .	"the non-meta part of a class name"	category _ cat.	meta _ clsName endsWith: ' class'.	self readStampFrom: aFile.! !!ChangeRecord methodsFor: 'initialization' stamp: 'ar 2/7/2004 17:47'!file: f position: p type: t	(f isKindOf: FileStream)		ifTrue:[fileName := f fullName]		ifFalse:[file := f].	position _ p.	type _ t! !!ChangeRecord methodsFor: 'private' stamp: 'ar 2/7/2004 17:47'!withFileDo: aBlock	| aFile |	file ifNotNil:[^aBlock value: file].	aFile := FileStream readOnlyFileNamed: self fileName.	^[aBlock value: aFile] ensure:[aFile close].! !ChangeRecord removeSelector: #readStamp!Object subclass: #ChangeRecord	instanceVariableNames: 'file fileName position type class category meta stamp '	classVariableNames: ''	poolDictionaries: ''	category: 'Tools-Changes'!