'From Jasmine-rc1 of 7 October 2004 [latest update: #19] on 7 October 2004 at 10:10:37 pm'!'From Squeak3.6 of ''6 October 2003'' [latest update: #5429] on 4 October 2004 at 8:18:08 pm'!"Change Set:		UpdateMarkerDate:			4 October 2004Author:			Andreas RaabThis is an update marker for making a new build."!----End fileIn of C:\Jasmine\build\[Tweak-1-0]0197UpdateMarker.cs----!'From Squeak3.6 of ''6 October 2003'' [latest update: #5429] on 4 October 2004 at 8:18:08 pm'!"Change Set:		UpdateMarkerDate:			4 October 2004Author:			Andreas RaabThis is an update marker for making a new build."!----End fileIn of C:\Jasmine\build\[Tweak-1-0]0197UpdateMarker.cs----!Project current renameTo: 'Croquet'.!----SNAPSHOT----#(7 October 2004 10:13:48 pm) Jasmine1.0.image priorSource: 0!----STARTUP----#(7 October 2004 10:15:05 pm) as C:\Jasmine\Jasmine1.0.image!TPainter new open!self label!self label:'Welcome!!'!self unlock!self isLocked!^ self extension locked!----SNAPSHOT----#(7 October 2004 10:24:40 pm) Jasmine1.0.image priorSource: 719!Project current setViewSize: 128@96!Project current setViewSize: 128@96!'From Jasmine-rc1 of 5 October 2004 [latest update: #13] on 7 October 2004 at 4:59 pm'!TGroup subclass: #TDemoFish	instanceVariableNames: 'target speed '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Demo'!!TAvatar methodsFor: 'initialize' stamp: 'ar 10/7/2004 16:53' prior: 51505352!initialize	| downMatrix |	super initialize.	sticky _ false.	doRender _ true.	height _ 4.6.	lastDownPosition _ B3DVector3 new.	footFrame _ TGroup new.	footFrame singleParent: true.	gotoCount _ 0.	forwardOnY _ 0.	driving _ false.	controlPitch _ false.	currentSpace _ nil.	laser _ TLaser new.	laser translation:(B3DVector3 x: 0.5 y:-0.3 z:-0.2).	laser length: 0.5.	self addChild: laser.	transparency _ 1.0.	downMatrix _ B3DMatrix4x4 identity rotationAroundX: -90.	downPointer _ TRay new.	downPointer localTransform: downMatrix.	downPointer downRay: true.	self addChild: downPointer.	self fall.	pointer _ TPointer new.	camera _ TCamera new.	camera addChild: pointer.	pointer camera: camera.	pointer avatar: self.	^self! !!TDemoFish methodsFor: 'initialize' stamp: 'ar 10/7/2004 16:57'!initialize	super initialize.	speed := (1 to: 5) atRandom.	visible := false.! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/7/2004 16:31'!chooseTarget	target := self root frameChildren detect:[:any| any name = 'light'].! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/7/2004 16:33'!step	"... fixme ..."	! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/7/2004 16:53' prior: 52785216!chooseAvatar: newAvatar for: oldAvatar	| sp |	oldAvatar == activeCamera avatar ifFalse:[^self].	sp := oldAvatar parent.	newAvatar meta localTransform: oldAvatar localTransform.	sp removeChild: oldAvatar.	sp addChild: newAvatar.	activeCamera meta avatar: newAvatar.	newAvatar waitUntil: #spaceLeave.	sp := newAvatar parent.	oldAvatar meta localTransform: newAvatar localTransform.	sp removeChild: newAvatar.	sp addChild: oldAvatar.	activeCamera meta avatar: oldAvatar.! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/7/2004 16:57' prior: 52827628!makeSomeFish: sp	| mesh pic1 pic2 pic3 rnd fish tMesh mat frame atar |	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea'.	tMesh ifNil:[		mesh _ (FileStream readOnlyFileNamed:(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'fish.mesh'})) fileInObjectAndCode.		mesh reverseFaceDirection.		mesh transformBy: ((B3DRotation angle: 180 axis: 0@1@0) asMatrix4x4 composedWithLocal: (B3DMatrix4x4 withScale: (1@1@1))).		mat _ TMaterial new.		mat ambientColor: #(1 1 1 1) asFloatArray.		mat diffuseColor: #(1 1 1 1) asFloatArray.		tMesh := TMesh new initializeWithVertices: mesh vertices 			alias: nil 			norms: mesh vertexNormals			textureUV: mesh texCoords			faceGroups: {1. mesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary:'http://www.reed.com/TeaLand/spaces/theFish.tea'.	].	pic1 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	pic2 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'RockFish.jpg')) mipmap: true shrinkFit: false.	pic3 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'Seniorita.jpg')) mipmap: true shrinkFit: false.	rnd := Random seed: 123456.	{pic1. pic2. pic3} do:[:tex|		1 to: 4 do:[:i|			fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.			fish scale: 3.			fish solid: false.			fish objectName: 'fish'.			fish material texture: tex.			fish material textureMode: GLModulate.			frame := TDemoFish new.			frame translationX: rnd next * 20 - 10 y: rnd next z: rnd next * 20 - 10.			frame addChild: fish.			sp addChild: frame.		].	].	atar := TAvatar new.	fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.	fish solid: false.	fish scale: 3.	fish objectName: 'fish'.	fish material texture: pic1.	fish material textureMode: GLModulate.	atar addChild: fish.	self startScript: #chooseAvatar:for: 		withArguments: {atar} 		when:{sp. #objectEnter}.! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/7/2004 16:35' prior: 52832578!makeUnderwater3: sp	| sp2 p1 p2 lt mat floorMesh win pic tMesh url cc |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new.	p2 material: mat.	lt _ TLight new.	"lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.5 0.5 0.5 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.0  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt rotationAroundZ: 220.	lt translationX: 0 y: 3 z: -15.	cc := Color r: 0.0 g: 0.45 b: 0.51.	"cc := Color r: 0.1 g: 0.3 b: 0.2."	sp2 _ TCausticSpace new.	"sp2 _ TSpace new."	sp2 url: 'http://www.reed.com/TeaLand/spaces/underwater.tea'."	sp2 ambientSound: (self loadAmbientSound: 'underwater.mp3')."	sp2 addChild: lt.	sp2 color: cc.	sp2 fogOn: true.	sp2 fogDensity: 0.025.	sp2 fogStart: 40.0.	sp2 fogEnd: 200.0.	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	tMesh ifNil:[		floorMesh _ (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'topo.mesh'})) fileInObjectAndCode.		floorMesh faces reverseDirection.		"floorMesh transformBy: (B3DMatrix4x4 withScale: (0.01@0.01@0.01))."		pic := TTexture new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'Waves1.jpg'}).		mat _ TMaterial new.		mat ambientColor: #(0.2 0.4 0.3 1) asFloatArray.		mat diffuseColor: #(0.2 0.4 0.3 1) asFloatArray.		mat texture: pic.		mat textureMode: GLModulate.		tMesh := TMesh new initializeWithVertices: floorMesh vertices 			alias: nil 			norms: floorMesh vertexNormals			textureUV: floorMesh texCoords			faceGroups: {1. floorMesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	].	tMesh solid: true.	tMesh translationX: 0 y: -76 z: 0.	tMesh material ambientColor: #(1 1 1 1) asFloatArray.	tMesh material diffuseColor: #(1 1 1 1) asFloatArray.	sp2 addChild: tMesh.	self makeSomeFish: sp2.	#(		('tutorials/embedded/fishScript/fishScript.html' -10 1 -22 30)		('tutorials/embedded/fishPaint/fishPaint.html' 10 1 -22 -30)	) do:[:spec|		url := spec first. "look locally first"		url := FileDirectory pathFrom: {FileDirectory default pathName}, (spec first findTokens: '/').		(FileStream isAFileNamed: url) 			ifTrue:[url := FileDirectory default url, spec first] "local"			ifFalse:[url := 'http://www.reed.com/TeaLand/', spec first].		pic _ self makeWebPage: url extent: 512@256.		win _ TWindow new.		win translationX: spec second y: spec third z: spec fourth.		win rotationAroundY: spec fifth.		win contents: pic.		sp2 addChild: win.	].	win _ TWindow new.	win translationX: -5 y: 0.0 z: -2.0.	win contents: p1.	pic _ TTexture new initializeWithFileName: 'andreas.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	sp addChild: win.	win _ TWindow new.	win rotationAroundY: 180.	win translationX: 0.0 y:0.0 z: 3.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.! !TeapotMorph removeSelector: #chooseAvatar:andClose:!TeapotMorph removeSelector: #chooseAvatar:andClose:!----End fileIn of a stream----!'From Jasmine-rc1 of 5 October 2004 [latest update: #20] on 7 October 2004 at 5:05:28 pm'!!TOverlayButtons methodsFor: 'popups' stamp: 'ar 10/7/2004 17:05' prior: 52027735!makeExit: ptr	WorldState addDeferredUIMessage:[CroquetGlobals theTeapotMorph delete].! !----End fileIn of a stream----!'From Jasmine-rc1 of 5 October 2004 [latest update: #21] on 7 October 2004 at 7:52:19 pm'!"Change Set:		FixCroquetThumbDate:			7 October 2004Author:			Andreas RaabFix the Croquet thumbnails"!!TeapotMorph class methodsFor: 'as yet unclassified' stamp: 'ar 10/7/2004 19:45' prior: 52886035!descriptionForPartsBin	^ self partName:	(self name copyFrom: 1 to: self name size - 5 "Morph")		categories:		#('Croquet')		documentation:	'Croquet Browser'		sampleImageForm: TForm defaultForm.! !!TeaTest class methodsFor: 'as yet unclassified' stamp: 'ar 10/7/2004 19:46' prior: 52748723!descriptionForPartsBin	^ self partName:	(self name)		categories:		#('Croquet')		documentation:	'Croquet Browser'		sampleImageForm: TForm defaultForm.! !"Postscript:"PartsBin clearThumbnailCache.PartsBin cacheAllThumbnails.!----End fileIn of a stream----!Project current setViewSize: 128@96!----SNAPSHOT----#(7 October 2004 10:34:42 pm) Jasmine1.0.image priorSource: 992!----STARTUP----#(11 October 2004 3:51:54 pm) as C:\Jasmine\Release\Jasmine1.0.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #22] on 7 October 2004 at 11:15:38 pm'!!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/7/2004 23:11' prior: 52798214!makeDungeon: sp	| win win2 sp2 p1 p2 lt mat pic tframe waterTop waterfall waterBottom |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new."	p2 rotationAroundY: 180.	p2 translationX: 0.0 y:0.0 z: 3.0.	p2 material: mat."	lt _ TLight new.	lt ambientColor: #(1 1 1 1) asFloatArray.	lt diffuseColor: #(1 1 1 1) asFloatArray.	lt specularColor: #(0.2 0.15 0.15 1.0) asFloatArray.	lt visible: false.	tframe _ TSpinner new.	tframe translationX: -10 y:0.0 z: 0.0.	tframe matNil.	tframe contents: lt.	lt := tframe.	lt addRotationAroundZ: 120.	lt addRotationAroundY:-10.	lt translationX: -30 y:-32 z: -76."	lt2 _ TLight new.	lt2 ambientColor: #(0.7 0.7 0.7 1.0) asFloatArray.	lt2 diffuseColor: #(0.7 0.7 0.7 1.0) asFloatArray.	lt2 specularColor: #(0.1 0.1 0.2 1.0) asFloatArray.	lt2 visible: false.	tframe _ TSpinner new.	tframe matNil.	tframe contents: lt2.	lt2 := tframe.	lt2 addRotationAroundZ: -120.	lt2 addRotationAroundY:10.	lt2 translationX: -34 y:-32 z: -76."	sp2 _ TSpace new.	sp2 url: 'http://www.reed.com/TeaLand/spaces/dungeon.tea'."	sp2 ambientSound: (self loadAmbientSound: 'flag.mp3')."	sp2 ambientSound: (self loadAmbientSound: 'apollo.mp3').	sp2 addChild: lt. " add the light""	sp2 addChild: lt2." " add the light"	sp2 color:(Color r: 0.5 g: 0.7 b: 0.6).	sp2 fogOn: true.	sp2 fogDensity: 0.0015.	sp2 fogStart: 100.0.	sp2 fogEnd: 6000.0.		pic _ TTexture				new initializeWithFileName: 'smith2.bmp'				mipmap: true				shrinkFit: false.	win _ TWindow new.	win translationX: 12 y: 0.0 z: -1.0.	win contents: p1.	win rectFront: pic.	win closeContents.	sp addChild: win.	win2 _ TWindow new.	win2 translationX: -5 y: -32 z: -78.	win2 contents: p2.	sp2 addChild: win2."	sp2 addChild: p2."	p1 linkPortal: p2.	tframe _ TSkyBox new initializeWithFileName: 'CA'."	glx activeCamera attachment: tframe."	sp2 addChild: tframe.		tframe _ self loadURL: 'http://www.reed.com/TeaLand/spaces/theDungeon.tea'.	tframe ifNil:[		tframe _ (TLoad3DSMax new initializeWithFileName: 			(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'DungeonDemo'. 'space5.ase'}) 			scale: 0.035 shadeAngle: 90.1 textureMode: GLModulate) frame.		tframe translationX: -67 y: -3.0 z:-208.0."		tframe translationX: -63 y: -4.0 z:-163.0.""		tframe rotationAroundX: -90."		tframe boundsDepth: 2.		tframe initBounds.		TExporter export: tframe asBinary:'http://www.reed.com/TeaLand/spaces/theDungeon.tea'.		].	self world doOneCycleNow.	"sp2 addChild: tframe."	waterTop _ (tframe find:[:frm | frm objectName = '$WaterfallTop'])at:1.	waterfall _ self makeWaterfall: waterTop translation.	waterTop parent addChild: waterfall.	waterTop removeSelf.	waterBottom _ (tframe find:[:frm | frm objectName = '$WaterfallBottom'])at:1.	self world doOneCycleNow.	waterfall _ self makeWaterfallBottom: waterBottom translation.	waterBottom parent addChild: waterfall.	waterBottom removeSelf.	self world doOneCycleNow.	TQuadTree new initializeWithSpace: sp2 frame: tframe."This is to test the performance of the ray test code.	100 timesRepeat:[ |swarm |		swarm _ TSwarm new.		swarm translationX: 20 atRandom -10 y: -30 z: 20 atRandom - 170.		sp2 addChild: swarm.].""	self makeCharacters:sp2 at: (-6@-36.5@-71)."	self makeSnapshot: sp2 angle: -11 translation:(B3DVector3 x:16.52985000610352 y:-32.47652435302734 z:-103.7088470458984).! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/7/2004 23:13' prior: 52814417!makeMars: sp	| win sp2 p1 p2 lt tframe pic rover |	p1 _ TPortal new.	lt _ TLight new.	lt rotationAroundZ: 120.	lt translationX: 10 y: 0 z:10.	sp2 _ TSpace new.	sp2 addChild: lt.	sp2 color:(Color r: 0.6 g: 0.5 b: 0.2).	sp2 url: 'http://www.reed.com/TeaLand/spaces/redplanet.tea'.	win _ TWindow new.	win translationX: -20 y: 0.0 z: -2.0.	win contents: p1.	sp addChild: win.	pic _ TTexture new initializeWithFileName: 'mars2.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	p2 _ TPortal new.	win _ TWindow new.	win rotationAroundY: 225.	win translationX: 40.0 y:-17.0 z: 40.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.	self world doOneCycleNow.	rover _ TRover new.	rover translationX:10 y:-19.11 z:0.	sp2 addChild: rover.	self world doOneCycleNow.	tframe _ self loadURL: 'http://www.reed.com/TeaLand/spaces/mars.tea'.	tframe ifNil:[		tframe _ (TLoad3DSMax new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'mars'. 'masterTerrain.ase'}) scale: 0.05) frame."		tframe rotationAroundX: -90."		tframe boundsDepth: 2.		tframe initBounds.		TExporter export: tframe asBinary:'http://www.reed.com/TeaLand/spaces/mars.tea'.		].	tframe translationX: 0.0 y: 22.0 z:0.0.	TQuadTree new initializeWithSpace: sp2 frame: tframe. 	self makeSnapshot: sp2 angle: 15 translation:(B3DVector3 x:21.26738166809082 y:-17.4773292541504 z:38.1824035644531).! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/7/2004 23:11' prior: 33559910!makeUnderwater3: sp	| sp2 p1 p2 lt mat floorMesh win pic tMesh url cc |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new.	p2 material: mat.	lt _ TLight new.	"lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.5 0.5 0.5 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.0  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt rotationAroundZ: 220.	lt translationX: 0 y: 3 z: -15.	cc := Color r: 0.0 g: 0.45 b: 0.51.	"cc := Color r: 0.1 g: 0.3 b: 0.2."	sp2 _ TCausticSpace new.	"sp2 _ TSpace new."	sp2 url: 'http://www.reed.com/TeaLand/spaces/underwater.tea'."	sp2 ambientSound: (self loadAmbientSound: 'underwater.mp3')."	sp2 addChild: lt.	sp2 color: cc.	sp2 fogOn: true.	sp2 fogDensity: 0.025.	sp2 fogStart: 40.0.	sp2 fogEnd: 200.0.	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	tMesh ifNil:[		floorMesh _ (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'topo.mesh'})) fileInObjectAndCode.		floorMesh faces reverseDirection.		"floorMesh transformBy: (B3DMatrix4x4 withScale: (0.01@0.01@0.01))."		pic := TTexture new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'Waves1.jpg'}).		mat _ TMaterial new.		mat ambientColor: #(0.2 0.4 0.3 1) asFloatArray.		mat diffuseColor: #(0.2 0.4 0.3 1) asFloatArray.		mat texture: pic.		mat textureMode: GLModulate.		tMesh := TMesh new initializeWithVertices: floorMesh vertices 			alias: nil 			norms: floorMesh vertexNormals			textureUV: floorMesh texCoords			faceGroups: {1. floorMesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	].	self world doOneCycleNow.	tMesh solid: true.	tMesh translationX: 0 y: -76 z: 0.	tMesh material ambientColor: #(1 1 1 1) asFloatArray.	tMesh material diffuseColor: #(1 1 1 1) asFloatArray.	sp2 addChild: tMesh.	self makeSomeFish: sp2.	self world doOneCycleNow.	#(		('tutorials/embedded/fishScript/fishScript.html' -10 1 -22 30)		('tutorials/embedded/fishPaint/fishPaint.html' 10 1 -22 -30)	) do:[:spec|		url := spec first. "look locally first"		url := FileDirectory pathFrom: {FileDirectory default pathName}, (spec first findTokens: '/').		(FileStream isAFileNamed: url) 			ifTrue:[url := FileDirectory default url, spec first] "local"			ifFalse:[url := 'http://www.reed.com/TeaLand/', spec first].		pic _ self makeWebPage: url extent: 512@256.		win _ TWindow new.		win translationX: spec second y: spec third z: spec fourth.		win rotationAroundY: spec fifth.		win contents: pic.		sp2 addChild: win.	].	win _ TWindow new.	win translationX: -5 y: 0.0 z: -2.0.	win contents: p1.	pic _ TTexture new initializeWithFileName: 'andreas.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	sp addChild: win.	win _ TWindow new.	win rotationAroundY: 180.	win translationX: 0.0 y:0.0 z: 3.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.! !!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/7/2004 23:09' prior: 52861174!initializeDefaultSpace	| space tframe waveDemo |"self initializeTweakWorld.""self makeJIVE."	space _ TSpace new.	space url: 'http://www.reed.com/TeaLand/spaces/intro.tea'.	activeCamera avatar enter: space."	space ambientSound: (self loadAmbientSound:'intro.mp3')."	self makeLight: space.	self world doOneCycleNow.	txtr _ TTexture				new initializeWithFileName: 'checker.bmp'				mipmap: true				shrinkFit: false.		self makeFloor: space fileName:'stone.BMP'.	self world doOneCycleNow.	waveDemo _ self makeWaveDemo: space.	self makeWaveDemo: waveDemo at: -30@-1@-30 in: space.	self makeWaveDemo: waveDemo at: 30@-1@-30 in: space.	self makeWaveDemo: waveDemo at: 30@-1@30 in: space.	self makeWaveDemo: waveDemo at: -30@-1@30 in: space.	self world doOneCycleNow.	self makeKay: space.	self world doOneCycleNow.	self makeMirror: space. 	self world doOneCycleNow."	self makeMirror2: space."	self makePyramid: space.	self world doOneCycleNow.	"self makeUnderwater: space."	self makeUnderwater3: space.	self world doOneCycleNow.	self makePopUp: space.	self world doOneCycleNow.	self makeChess: space.	self world doOneCycleNow.	self makeProjectLink: space.	self world doOneCycleNow.	self makePooh: space.	self world doOneCycleNow.	self makeStartupLink: space.	self world doOneCycleNow.	self makeGallery: space.	self world doOneCycleNow.	self makeDungeon: space.	self world doOneCycleNow.	self make3Body: space.	self world doOneCycleNow.	"self makeSolar: space."	self makeClock: space.	self world doOneCycleNow.	self makeSlime: space.	self world doOneCycleNow.	self makeMars: space.	self world doOneCycleNow."	self makeManual: space."	tframe _ TSkyBox new initializeWithFileName: 'MLL'.	space addChild: tframe.	self world doOneCycleNow."	tframe _ TPortal3D initializeWithSpace: space.	win _ TWindow new.	win translationX: -12 y: 0.0 z: 5.0.	win contents3D: tframe.	space addChild: win."	^space! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #23] on 8 October 2004 at 7:47:49 pm'!TGroup subclass: #TAvatar	instanceVariableNames: 'content nickname host speaker doRender height footFrame lastDownFrame lastDownPosition forwardOnY gotoCount gotoTransform snapTrans sticky speedControl driving controlPitch currentSpace laser transparency downPointer pointer camera carrying '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TAvatar methodsFor: 'accessing' stamp: 'mpm 10/8/2004 19:46'!carrying: aFrame	aFrame parent ifNotNil:[aFrame parent removeChild: aFrame.].	carrying ifNil:[carrying _ OrderedCollection new.].	carrying add: aFrame.	self addChild: aFrame.! !!TAvatar methodsFor: 'accessing' stamp: 'mpm 10/8/2004 19:41'!carryingDo: aBlock	carrying ifNil:[^self].	^carrying do: aBlock! !!TAvatar methodsFor: 'initialize' stamp: 'mpm 10/8/2004 19:42' prior: 33555893!initialize	| downMatrix |	super initialize.	sticky _ false.	doRender _ true.	carrying _ nil.	height _ 4.6.	lastDownPosition _ B3DVector3 new.	footFrame _ TGroup new.	footFrame singleParent: true.	gotoCount _ 0.	forwardOnY _ 0.	driving _ false.	controlPitch _ false.	currentSpace _ nil.	laser _ TLaser new.	laser translation:(B3DVector3 x: 0.5 y:-0.3 z:-0.2).	laser length: 0.5.	self addChild: laser.	transparency _ 1.0.	downMatrix _ B3DMatrix4x4 identity rotationAroundX: -90.	downPointer _ TRay new.	downPointer localTransform: downMatrix.	downPointer downRay: true.	self addChild: downPointer.	self fall.	pointer _ TPointer new.	camera _ TCamera new.	camera addChild: pointer.	pointer camera: camera.	pointer avatar: self.	^self! !!TAvatar methodsFor: 'render' stamp: 'mpm 10/8/2004 19:45' prior: 51506696!renderFrame: ogl parent: parent root: root	| ac rval |	ac _ ogl camera.	doRender ifTrue:["Render everyone else's avatars"		ac avatar = self ifFalse:[  ^ super renderFrame: ogl parent: parent root: root]."Only render ours if we are inside of a portal (such as a mirror) or the camera is behind the avatar"		ac inPortal ifTrue:[ "just render if we are in a portal"			transparency ~= 1.0 ifTrue:[self transparency: 1.0.].					^ super renderFrame: ogl parent: parent root: root. 		] ifFalse:[ "otherwise, check to see if we are thirdPerson or not"			ac thirdPerson ~= 0 ifTrue:[				ac thirdPerson ~= transparency ifTrue:[self transparency: ac thirdPerson.].				carrying ifNotNil: [ self carryingDo: [:child | child transparency: 1.0.]. ].				rval _ super renderFrame: ogl parent: parent root: root.				^ rval.			] ifFalse: [				carrying ifNotNil: [ 					self transparency: 0.0. "hide the avatar"					"show what we are carrying"					self carryingDo: [:child | child transparency: 1.0.]. 					rval _ super renderFrame: ogl parent: parent root: root.					^ rval.				].			].		].	].	^ 0.! !!TWindow methodsFor: 'actions' stamp: 'mpm 10/8/2004 19:20' prior: 52571093!grabWindow: ptr	| trans |	trans _ ptr avatar globalTransform orthoNormInverse composeWith: self globalTransform.	ptr avatar meta carrying: self.	self meta localTransform: trans.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #24] on 9 October 2004 at 7:42:09 am'!!TAvatar methodsFor: 'accessing' stamp: 'mpm 10/9/2004 07:38'!carryingRelease: aFrame	carrying ifNotNil:[carrying remove: aFrame ifAbsent:[].].! !!TWindow methodsFor: 'actions' stamp: 'mpm 10/9/2004 07:39'!releaseWindow: ptr	ptr avatar meta carryingRelease: self.	self releaseToRoot.! !!TWindowButtons methodsFor: 'accessing' stamp: 'mpm 10/9/2004 07:40' prior: 52589391!initializeWithWindow: win extent: ext	| tframe tframe2 path |	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}."----------------------- goto button -----------------"	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/arrow.tea'		fileName:(path,{'arrow.ASE'}) scale: 1.0.	gotoButton _ TButton new initializeWithFrame: tframe.	gotoButton target: win action: #gotoWindow:."----------------------- kill button ------------------"	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cross.tea'		fileName:(path,{ 'cross.ASE'}) scale: 0.5.	killButton _ TButton new initializeWithFrame: tframe.	killButton rotationAroundZ: 45.0.	killButton target: win action: #killWindow."---------------------- open close button ---------------"	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cross.tea'		fileName:(path,{'cross.ASE'}) scale: 0.5.	tframe2 _  TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/minus.tea'		fileName:(path,{'minus.ASE'}) scale: 0.5.	openButton _ TButton new initializeWithFrame: tframe		frame2: tframe2.	openButton target: win action:#openContents.	openButton target2: win action2:#closeContents."------------------------ grab button --------------------"	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/handOpen.tea'		fileName:(path,{'HandOpen.ASE'}) scale: 0.6.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/handClosed.tea'		fileName:(path,{'HandClosed.ASE'}) scale: 0.6.	grabButton _ TButton new initializeSwitchWithFrame: tframe frame2:tframe2.	grabButton target: win action: #grabWindow:.	grabButton target2: win action2: #releaseWindow:. 	grabButton rotationAroundZ: 180.0."--------------------- camera button -----------------------"	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/camera.tea'		fileName:(path,{'camera.ASE'}) scale: 0.6.	cameraButton _ TButton new initializeWithFrame:tframe.	cameraButton target: win action: #snapshotWindow.	extent _ ext.	self addChild: grabButton.	self addChild: gotoButton.	self addChild: killButton.	self addChild: openButton.	self addChild: cameraButton.	self closeButton.	self extent: extent.	^self! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #25] on 9 October 2004 at 10:22:51 am'!"Change Set:		ResetTZoomNavDate:			9 October 2004Author:			Mark McCahillClear and recreate the TZoomNavigtor picture cache"TZoomNavigatorMorph initialize.!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #26] on 9 October 2004 at 11:07:10 am'!"Change Set:		FixMenuConnectDate:			9 October 2004Author:			Mark McCahillConnect option on menu should open the same dialogthat is in the TZoomNavigator"!!TeapotMorph methodsFor: 'menu' stamp: 'mpm 10/9/2004 11:04' prior: 52782834!addCustomMenuItems: aMenu hand: aHand	super addCustomMenuItems: aMenu hand: aHand.	aMenu add: 'Connect' action: #openConnectionDialog.	aMenu addUpdating: #showFrameRateString action: #toggleFrameRate.	aMenu addUpdating: #showTextureStatsString action: #toggleTextureStats.	aMenu addUpdating: #transmitStuffString action: #toggleTransmit.	aMenu add: 'start pda server' action: #startPDAServer.	aMenu add: 'make new space' action: #makeNewSpace.! !TeapotMorph removeSelector: #initializeTeaParty!TeapotMorph removeSelector: #initializeTeaParty!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #27] on 10 October 2004 at 1:44:54 pm'!"Change Set:		FixStickyGrabDate:			10 October 2004Author:			Mark McCahillTWindows's releaseToRoot needs to go to all the people in the sceneor observers will never see it when you let go of a window you grabbed.Also, makeNewSpace needs to do some meta sends so that other people in scene will notice that a new swpace has been created"!!TOverlayButtons methodsFor: 'popups' stamp: 'mpm 10/10/2004 13:07' prior: 52028324!makeFloor: sp fileName: txtrName	| stone txt |	txt _ TTexture				new initializeWithFileName: txtrName				mipmap: true				shrinkFit: false.	txt uvScale: 16.0@16.0.	stone _ TCube new.	stone extentX:80 y:0.5 z: 80.	stone translationX: 0 y: -4.0 z: 0.0.	stone texture: txt.	stone objectName: 'floor'.	sp addChild: stone.	^ stone.! !!TOverlayButtons methodsFor: 'popups' stamp: 'mpm 10/10/2004 13:35' prior: 52028755!makeNewSpace: ptr	| sp2 light tframe p1 win p2 |	self killPopup.	sp2 _ TSpace meta new.	sp2 meta color:  (Color				r: 0.2				g: 0.25				b: 0.6).		sp2 meta url: 'http://www.reed.com/TeaLand/spaces/newSpace.tea'."Add a light to the world "	light _ TLight meta new.	tframe _ TSpinner meta new.	tframe meta translationX: -10 y:0.0 z: 0.0.	tframe meta rotationAroundZ: 120.	tframe meta addRotationAroundY:-10.	tframe meta matNil.	tframe meta contents: light.	sp2 meta addChild: tframe.	self meta makeFloor: sp2 fileName:'stone.BMP'.	p1 _ TPortal meta new.	win _ TWindow meta new.	win meta translationX: 0 y: 0.0 z: -3.0.	win meta contents: p1.	ptr avatar meta addChild: win.	win meta releaseWindow.	p2 _ TPortal meta new.	win _ TWindow meta new.	win meta rotationAroundY: 225.	win meta translationX: 40.0 y:2.0 z: 40.0.	win meta contents: p2.	sp2 meta addChild: win.	p1 meta linkPortal: p2.	^sp2 ! !!TOverlayButtons methodsFor: 'popups' stamp: 'mpm 10/10/2004 13:12' prior: 52032493!makePortalButton	| mesh winFrame pic mat bttn |	mesh _ TGroup new.	winFrame _ (TWindowFrame new).	mesh addChild: winFrame.	pic _ TTexture				new initializeWithFileName: 'box.png'				mipmap: true				shrinkFit: false.	pic translationX: 0 y: 0 z: 0.25.	mat _ TMaterial new.	mat ambientColor: TButton overColor.	mat diffuseColor: TButton overColor.	pic material: mat.	pic extent: winFrame extent.	winFrame extent: pic extent.	mesh addChild: pic.	bttn _ TButton new initializeWithFrame: mesh.	bttn persist: true.	bttn spin: true.	bttn target: self action: #makeNewSpace:.	^ bttn.! !!TWindow methodsFor: 'actions' stamp: 'mpm 10/10/2004 12:24' prior: 52572421!releaseWindow	self meta releaseToRoot.! !!TWindow methodsFor: 'actions' stamp: 'mpm 10/10/2004 12:15' prior: 33578430!releaseWindow: ptr	ptr avatar meta carryingRelease: self.	self meta releaseToRoot. ! !TOverlayButtons removeSelector: #makeMetaNewSpace:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #28] on 11 October 2004 at 10:23:24 am'!"Change Set:		FutureSendFixDate:			11 October 2004Author:			Andreas RaabFixes a race condition."!!TObject methodsFor: 'teatime' stamp: 'ar 10/11/2004 10:21' prior: 52021780!future: fval perform: selector withArguments: args 	| tm |	tm _ TeaMessage new setTarget: self selector: selector arguments: args atTime: TeaTime now + fval.	CroquetGlobals scheduleMessage: tm.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #28] on 11 October 2004 at 10:24:03 am'!"Change Set:		TeaMsgCleanupDate:			11 October 2004Author:			Andreas RaabSome cleanup for tea message."!Message subclass: #TeaMessage	instanceVariableNames: 'target teaHost teaTime hostName objectCounter myScripts '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Communications'!!TeaHost methodsFor: 'sharing' stamp: 'ar 10/11/2004 10:22' prior: 52710332!sendMessage: objMessage to: objName	| target anArray aItem |	target _ mapNameToObj at: objName ifAbsent:[^ false ].	anArray _ objMessage arguments.	1 to: anArray size do:[ :index | 		aItem _ anArray at: index.		aItem ifNotNil:[			aItem _ aItem teaObject: mapNameToObj.			aItem ifNil:[ ^ false ].			anArray at: index put: aItem.			].		].	objMessage arguments: anArray. "probably not necessary"	objMessage delayedSendTo: target.	^ true.	! !TeaMessage removeSelector: #doConstruct!TeaMessage removeSelector: #doConstruct!TeaMessage removeSelector: #doConstruct:!TeaMessage removeSelector: #doConstruct:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #30] on 11 October 2004 at 11:46:29 am'!"Change Set:		NoMorePoohDate:			11 October 2004Author:			Andreas RaabRemove pooh but keep the method name the same in case someone is just playing around with one of the initializers."!!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/11/2004 11:41' prior: 52819349!makePooh: sp	| win teaWorld player tm |	tm _ TMorphic new initializeOpaque: false extent: 512@256.	teaWorld _ TMorphMonitor new initializeWithWorld: nil extent: 512@256.	teaWorld eventsTo: tm.	[player _ (FlashMorphReader on: (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'actinMyosin2.swf'}))) processFile.	player useTimeSync: false.	player color: Color transparent.	player startPlaying.	player lock.	teaWorld world addMorphCentered: player.	] on: FileDoesNotExistException do:[:ex| ex return].	teaWorld world color: Color transparent.	win _ TWindow new.	win translationX: 31 y: 0.0 z: 28.0.	win rotationAroundY: -90.	win contents: tm.	win closeContents.	sp addChild: win.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #28] on 11 October 2004 at 1:01:52 pm'!!TBoundSphere commentStamp: 'das 10/10/2004 10:19' prior: 51522293!This is the main bounds test object. It is used for object culling against view planes, ray testing, and for collision detection. It is defined heirarchically for the collision detection and object picking algorithms. At the moment, this is one of the slower objects to calculate with complex meshes. We need to turn much of this code into primitives. Also, there are a number of instance variables that may go away or be used in a slightly different way. Currently, the TBoundSphere global position is set at render time. This is because this is a more efficient method and it also presumes that a TFrame may be instanced in a scene (that is, it may appear as the child of more than one object). If we move to a seperate pass for determining ray collisions, then we will no longer be able to instance TFrames, and the global positions of the TBoundSpheres will need to be set by the TFrame when it's own globalPosition is updated.Other instance variables are:radius - the radius of the sphere, which should include all of the associated TFrame contents.radiusSquared - the square radius, here for performance.children - complex objects often have a need for a heirarchical collection of bound spheres for quick collision tests. These children are also TBoundSpheres.vertices - if the contained object is a TMesh, then the leaf children contain copies of the vertex information.box - in computing the bound sphere hierarchy, we utilize TBoxes in an octree subdivision. We keep these around for now, though they can probably be tossed out.normal - this is to be used by the hierarchical collision detection method. This is the best fit normal to the surface vertices contained in the sphere.up and side are the two perpendicular vectors to the normal. offset - to be used by the hierarchical collision method, this is the offset of the normal from the sphere center representing the closest fit to the contained faces.DAS	!!TBox commentStamp: 'das 10/10/2004 10:22' prior: 51555563!TBox has a number of uses. It is an axis aligned bounding box (AABB) defined by two 3D corners. It is used by the TBoundSphere to help define the boundSphere tree. It is used by the TParticle as a parameter bounds for it's instance variables. It is also used by the TQuadTree for it's hierarchical representations.DAS!!TFrame commentStamp: 'das 10/10/2004 11:59' prior: 51738049!The TFrame class is designed as a heirarchical transformation frame. The rendering engine walks through the frame, performing the appropriate transformation associated with it, then it calls the render methods of the tObjects. Two passes are made through the frame heirarchy. The first is for non-alpha objects, the second for alpha. The base frame is owned by a TSpace object. We render from the root up because we want to minimize setting transforms." ***** This is how you rotate an object using a quaternion ball. The base position is stored in the selectedPoint and compared with the pointer selectedPoint.	pointer event2D shiftPressed ifTrue:[		pointer frame: self pickSphere: B3DVector3 new radiusSquared: selectedRadiusSquared.		spin _ self rotFromBallPoints: selectedPoint to: pointer selectedPoint.		trans _ self translation.		self translationX: 0.0 y:0.0 z:0.0.		self localTransform: (self localTransform composeWith: spin).		self translation: trans.		]"" ***** This is how you move an object relative to a specified plane. In this case, it is the plane determined by either the camera or the surface normal when the object is selected. 	- cameraNorm defines the plane perpendicular to the line of sight of the camera	- selectedNorm defines the norm of the selected surface of the object.	- slab frontNorm forces a normal to the front of the slab (for example).	ifFalse:[	(pointer frame: self pickPlane: selectedPoint normal: cameraNorm) ifTrue:[		delta _ selectedPoint - pointer selectedPoint.		self translation: (self translation - (self orientation localPointToGlobal: delta)).		^ true.].]."	^ false.objectName - a name that can be given to any TFrame by the programmer. This is used by mesh importers to set the corresponding node names.objectOwner - this is the TFrame that "owns" this TFrame. In this case, ownership is which frame processes events that are sent to this frame.localTransform - the 4x4 matrix transform of this frame relative to it's parent frame.globalTransform - the transform relative to the global coordinates (the root).globalPosition - the position of the frame in global coordinates. This is for faster access.frameParent - the parent frame of this TFrame.singleParent - boolean determines if this TFrame must have a single parent. If true, then when an object is added to another TFrame, it is removed from a previous TFrame. We will probably decide to make this always true.frameChildren - and OrderedCollection of children frames.frameChanged - this flag is set when any change occurs to the transform (among other things). This forces a recalculation of the globalTransform.timeStamp - the time stamp of the last rendering.visible - boolean flag indicating that this object is (or isn't) visible.solid - boolean flag indicating that this object is solid, that is, can be picked and walked on.stepsOn - boolean flag indicating whether or not the stepping is on or off.stepperActive - boolean flag indicating whether we are currently stepping or notstepTime - the time between stepslastStepTime - last time we steppedstreamingSound - play a sound (this does not belong here)test - used for testingDAS!!TCrosshair commentStamp: 'das 10/10/2004 11:08' prior: 51631364!This is a small crosshair in the center ofthe camera field of view. The center is a dead spot for moving the user around.DAS!!TFlag commentStamp: 'das 10/10/2004 11:30' prior: 51700440!This class generates a dynamic flag object. (Historical note: The TFlag was the first object created for Croquet. It was created to determine if we could use Squeak as the basis of the Croquet Teapot rendering engine. The results were totally successful, so the decision was made to utilize Squeak 1000% instead of developing a hybrid approach.)DAS!!TGroup commentStamp: 'das 10/10/2004 12:01' prior: 51806735!TGroup is a TFrame which is always guaranteed to be invisible. It is used as a container and root object of a collection of child frames.DAS!!TAttractor commentStamp: 'das 10/10/2004 09:56' prior: 51500981!TAttractor is a gravitational source that is used by the 3 body demo and by the particle system. If it is defined to be a hard object (hard=true) then particles that hit the radius will bounce off of it. DAS!TGroup subclass: #TAvatar	instanceVariableNames: 'content nickname host speaker doRender height footFrame lastDownFrame lastDownPosition forwardOnY gotoCount gotoTransform snapTrans sticky speedControl driving controlPitch currentSpace laser transparency downPointer pointer camera carrying '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TAvatar commentStamp: 'das 10/10/2004 11:06' prior: 51502240!TAvatar is the view the user presents of himself in a space. It has a number of additional properties including tracking the floor position with it's down pointer and it also maintains it's own replicated TPointer object that matches the user's non-replicated TPointer object found in the TUserCamera. The reason for this is the non-replicated pointer is used to determine what the user is pointing at and what events are being generated at render time, which is more efficient for us at the moment. This means that the replicated TPointer does not need to do a ray collision test.At the same time, the replicated camera object is updated with information generated by the TUserCamera as it moves through space following the TAvatar. See TCamera>>#followAvatar.content - the TFrame that represents the look of the TAvatar.nickname - the short name of the user who owns the TAvatar.host - the local host.speaker - a small speaker over the head of the TAvatar to show that the remote user is speaking.doRender - a flag indicating whether we render this avatar or not. Remote avatars are always rendered, my avatar is rendered in third person and in portals (like mirrors) but is not rendered in first person.height - simply the height of the avatar's eye-point or camera position.footFrame - a frame that is attached to objects that the avatar is on top of. The avatar can use this to track it's motion so that the global position transform of the footframe can be added to the avatar's current position. This allows the avatar to hold onto a moving object.lastDownFrame - this is the last place our footframe was. If it changed, we can move the footframe from there to the new floor.lastDownPosition - is simply where on the floor the footFrame was last frame.gotoCount, gotoTransform - used to "jump" to a new location in the current space.snapTrans - used to save the current local transform before a gotoTransform so that we can "snap-back" to this position.sticky - allows us to "stick" to objects like TWindows when we jump to them. This works even when they are floating high in the air.speedControl - the x/y speed of the TAvatar determined by the TUserCamera pointerXY:.driving - flag showing that the avatar is moving.controlPitch - flag to determine is speedControl should be applied to forward motion or the pitch of the avatar and hence the camera.currentSpace - the current space that the TAvatar is in. (This should be the same as the root)laser - the avatar carries the laser pointer that is used to show what and where the user is selecting in the scene.transparency - the alpha transparency of the avatar when it is rendered. This is only applied as we switch between third person to first person.downPointer - the TRay used to find the floor beneath the TAvatar.pointer - the replicated TPointer, it is not actually used to determine ray tests, but just to hold the information generated by the TPointer held by the TUserCamera.camera - the pseudo camera holding certain values of the "real" camera. carrying - any objects that the user may be carrying around with him via the avatar. DAS!!TBillboard commentStamp: 'das 10/10/2004 10:04' prior: 51517530!TBillboard always points toward the current camera allowing for such effects as a 2D billboard (if you add a textured rectangle to the frame). By necessity - this means that a TBillboard transform is determined at render time and is different between users. Hence, this object does not exhibit completely replicated behavior.DAS!!TButton commentStamp: 'das 10/10/2004 10:27' prior: 51567700!TButton is an active frame that tracks user events to initiate actions. When the user's pointer is over a child frame of a TButton it is highlighted. When it is clicked, a message can be sent to a target. TButton can have two different child frames to show a boolean state and generate two different messages as it toggles. The TButton itself has no representation, but expects to contain some kind of visible TFrame object that is selectable. This frame (or frames) is added using the #initializeWithFrame: or #initializeWithFrame:frame2: methods. (This should probably be changed to #contents:)DAS!!TCamera commentStamp: 'das 10/10/2004 10:38' prior: 51593573!The TCamera is used to generate an image of the scene from a particular location in a TSpace. It does the majority of setting up OpenGL to render. The z value of the camera matrix actually points away from the direction of view. This seems to be a standard approach for OpenGL. instance variables:viewPortTypically the underlying morph in this implementation. Any valid OpenGL buffer should work.	boundsUsually nil, which means that its actual value will be derived from the bounds of the current viewPort. bounds is the area that is rendered into. You can set this (#bounds:) to have an explicit hard value. This is a 2D bounds.viewAngleThis is the view angle of the camera measured top to bottom. The default is 45 degrees, which means that the angle of the top and bottom edges of the rendered image are 45 degrees apart.zNear, zFarThe near and far clipping planes in the graphics engine.zScreenThis is the z distance from the camera that the virtual screen would be. That is, when you have an x,y location on the real screen, you can add the zScreen value (x,y,zScreen) and normalize which gives you an accurate pointing vector in 3D space.lengthComputed by initClipPlanes and used to render the test camera.clipPlanes, clipPlanesTransformclipPlanes are the four frustum clip planes defined in the cameras local orientation.clipPlanesTransform are the four clipPlanes in the cameras global orientation frame. This is what is used to determine if objects are visible inside of the view frustum.viewClip This is used to test the visibility culling of the camera. It makes the clipping planes visible. This is obsolete, but it may be useful again if we ever start playing with the object clipping code again. portalClipThis is an additional clip plane defined by a portal. Objects on the near side of the portal need to be clipped away as well. This is a 4x4 transform.portalPlaneThis is a 3D vector calculated from the portalClip.inPortalA flag indicating whether we are rendering a portals contents from this camera or not. This is used to supress certain tests (such as finding floors), and to determine that the avatar should or should not be rendered.currentSpaceThe space we are currently inside of and rendering from. texture (deprecated)Simply a texture that gets added to the default rendered camera. Not used anymore unless you really need to see the default camera. killFrameA flag to indicate that the current rendered image is junk and should not be rendered. This suppresses a swapBuffers call.DAS !!TEditBox commentStamp: 'das 10/10/2004 11:27' prior: 51660271!TEditBox is used to manipulate and position a contained object in 3D space. The contents are dropped into the object via #contents: method.DAS!!THandMorph commentStamp: 'das 10/10/2004 12:03' prior: 0!THandMorph is the Croquet version of the HandMorph.DAS!!TLaser commentStamp: 'das 10/10/2004 12:04' prior: 51817632!TLaser is used by the TUserCamera and TAvatar to show other users what this user is currently pointing at or manipulating. This is just a visible representation of the TPointer and does nothing on it's own.DAS !!TLeaf commentStamp: 'das 10/10/2004 12:07' prior: 0!TLeaf is a base class of static objects where their information is shared between containing objects. An example of this is a TForm that is shared between the TTexture objects.DAS!!TForm commentStamp: 'das 10/10/2004 11:40' prior: 51710326!TForm is an imaging object that maps Squeak forms into OpenGL textures. It is also intended to act as a static Croquet object type in that it will typically be kept in a universal teaparty. When it is created, it also generates a thumbnail version of itself that can be copied and stored as part of a TTexture.form - the Squeak Form object.fileName - the source file name of the TForm.updateRect - what part of the OGL texture to update.extent - the actual original extent of the texture.bMipmap - boolean flag, determines if mipmapping is on.bShrinkFit - boolean flag, determines if we shrink or grow the texture to fit the proper power of two extent.locator - where is the object.extension - extension bit flags for further bitmap processingthumb - a thumbnail FormmemUsed - the memory required to store the OGL texture.DAS!!TLight commentStamp: 'das 10/10/2004 12:19' prior: 51829584!TLight- Spaces. Each space can contain any number of lights, but only the closest eight are actually enabled, with the furthest two linearly fading depending upon distance ratios. The limit of eight lights is a hard coded issue with OpenGL. The lights and their frames are stored in an array in the TSpace object. When a TSpace is rendered, it activates the lights first.- Visibility. Lights are render objects that can be visible or not. This is to help in placing them. A visible light is represented either with a TSphere for positional, a TCylinder for spot, or two TCylinders for directional. These objects are rendered with an alpha value in the color of the light. - Locality. A light can be applied only to a frame and its children by setting local to true. Otherwise, it is global to the containing space.- Attenuation. This assumes constant attenuation for performance reasons.Things to do:	- Need to utilize material types for rendering light objects.type - the kind of light this is.	#directional - light is positioned at infinity, rays are parallel.	#point - light is positioned at a specific point location and radiating from this.	#spot - point light with a focus in a specific direction - a spot lightlocal - (I don't remember what this is for)position - OpenGL position flag.ambientColor - diffuseColor - specularColor -		light typespotDirection - spotExponent -spotCutoff -renderObject - object to use when we render the light. The actual object is determined by the light type.distance - used to determine the distance from the camera for sorting.DAS!!TLoad3DSMax commentStamp: 'das 10/10/2004 12:21' prior: 51841884!TLoad3DSMax Notes:There are two parts to the class - the parse routines and everything else. The actual #parse: method creates a block hierarchy - essentially a kind of parse tree, from the inputs. 3DS is somewhat regular in its construction, but there are a few things to be careful about. The tree that gets constructed is made up of a field name and a field. The field names are tokenized 3DS field names and the field is the child tree or the actual text field data - not parsed into actual numbers or anything yet. One improvement on performance might be to interleave this step with the next.Once the tree exists, a second pass is made that converts the text fields and constructs the actual frame hierarchy. The field name of each node is matched and the appropriate #make****: routine is called on its contents. Once a raw mesh is set up inside the #makeGeometry: method, the #reconstruct: method is called. This does a lot of massaging and optimization of the raw vertices - including aliasing, etc. Anyway, start at:	#initialize: fileName: scale: shadeAngle: textureMode: Based upon the field names in the tree constructed in #parse: you just make the call to the next #makeXXX:.- Though we have all of the transforms for the heirarchy, the actual locations of the meshes is already transformed. If I can think of a good reason to un-transform the mesh elements and then add the transform to the actual frame, I will do it. For now, treat it as a solid body.- The texture rotations are face centered. This requires an offset of 0.5, the rotation, and then putting it back. Not sure if I really want to pre-transform the texture uv coordinates. Also, not sure if this is already done, as the meshes are.- This class will act as a template for importers, though they all seem so different that this may be easier said than done.- This object is actually never rendered, and really doesn't need to be a subclass of TFrame.DAS!!TMaterial commentStamp: 'das 10/10/2004 12:29' prior: 51920435!TMaterial is used to maintain and set material properties of objects. It can also be rendered itself to aid the design of the material. It displays the canonical teapot when used this way.ambientColor - diffuseColor -specularColor -emissiveColor -shininess - transparency -renderObject - object to use if we use the TMaterial in a render hierarchycullFace - determine if we should cull the back faces of the object being rendered.flipFace - determine if we should just render the back faces or notfullBright - ignore lighting, just use full bright lightingtexture - texture to be used as part of the materialtextureMode - the OpenGL GlTexture mode.subMaterialList - list of materials, typically used by the TMeshes.uvScale - scaling of the TTexturescale - scale of the material when used as a rendered objectboundSphere - bound of the rendered objectDAS!TFrame subclass: #TMesh	instanceVariableNames: 'materialList vertices alias vtxNormals textureUV faceGroups alpha opaque boundsChanged boundSphere boundsDepth boundMaterial glListID glListAlphaID glListValid glListAlphaValid glListEnabled glInstance cachingEnabled cachingAlphaEnabled '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Objects'!!TMesh commentStamp: 'das 10/10/2004 12:47' prior: 51928209!TMeshAlmost all simple arrays are 0 based when indexed by other arrays. Not the materialList.materialList - this is an OrderedCollection of materials that are used in the mesh. This is what the first element of the faceGroups refers to. This must always be a list.alias - you can ignore this for now. It is important when we start doing mesh based transforms, because it tells you where the aliased vertices are.vertices - 0 index based list of 3D vertices.vtxNormals - the normal 3D vector for the given vertex.alpha - checks the materials referenced by the facegroups for alpha values. Calculated for you based upon the materialList.opaque  - same as alpha, but inverted.textureUV - the 2D u,v coordinates of the texture at the associated vertex.faceGroups - an array of materialList index (indexing starting at 1), and vertex face index arrays (index starting at 0). These are simply interleaved. boundsChanged - calculated for you at construction time. boundSphere - calculated for you.boundsDepth - part of construction and used to determine the depth of the hierarchy.boundMaterial - only used if you need to see the bound spheres or bound cubes.These are the analogs to the equivalent TPrimitives. There are two sets because a TMesh may have some materials that have alpha components and some that don't. These are rendered at different times, so they need separate display lists.materialList - the list of materials used by the different face setsvertices - the vertices of the meshalias - aliased vertex setsvtxNormals - normals at each vertextextureUV - the texture uv location at each vertexfaceGroups - collection of face groups (a face group is an ordered list of indices into the vertex arrays)alpha - flag indicates if this mesh has any alpha valuesopaque - flag indicates if mesh has no alpha valuesboundsChanged - indicates the boundaries of the mesh have changedboundSphere - the bounding sphere of the mesh, typically a hierarchyboundsDepth - depth of the bound sphere hierarchyboundMaterial - material to render the bound spheres withcachingEnabled - currently not used, but specifies the OpenGL cachingcachingAlphaEnabled - ""DAS!!TOverlayButtons commentStamp: 'das 10/10/2004 12:54' prior: 0!TOverlayButtons is used for the buttons floating in front of the user. This also generates the popup buttons with which the user can generate new objects in the space, exit Croquet, etc.DAS!!TOverlayRearView commentStamp: 'das 10/10/2004 12:55' prior: 0!TOverlayRearView is a rear view of the current space that is overlayed on the current space.DAS!!TParticle commentStamp: 'das 10/10/2004 12:56' prior: 52054755!TParticleThis is a very simple particle system.size - the length or the particle array, determines max number of particles.pPosition - B3DVector3Array of particle positionspVelocity - B3DVector3Array of particle velocitiespAcceleration - B3DVector3Array of particle accelerationspLifetime - number of seconds (floating point) of life that each particle has leftpositionRange - the TBox within which new particles get created (see TBox >> #atRandom:)velocityRange - the 3D velocity range within which the new particles start life.accelerationRange - the 3D acceleration range applied to each particle on creation.lifetimeRange - the lifespan range of each particle.lastTime - for #the stepAt: method, used to determine time between this and the last cycle.material - what color are the particles.To use the particle system you do the following:	ps _ TParticle initialize: ogl size: 1000	ps setPositionRangeMin:(-0.1@-0.1@-0.1) max: (0.1@0.1@0.1).	ps setVelocityRangeMin:(-1.2@6.4@-1.2) max:(1.2@9.6@1.2).	ps setAccelerationRangeMin:(0@-10@0) max:(0@-8@0).	ps setLifetimeRange: (1500 to: 2000).These values are called inside of the initialize method, but this is how you would set your one.DAS!!TParticleTxtr commentStamp: 'das 10/10/2004 12:57' prior: 52066603!TParticleTxtr is a textured particle.DAS!!TPatch commentStamp: 'das 10/10/2004 12:58' prior: 52069428!Used to generate and maintain Bezier patches. It is an OpenGL bezier. It is used by the TTeapot, but would work for anything else.DAS!!TPhysicsEngine commentStamp: 'das 10/10/2004 12:59' prior: 52076781!Early physics engine. Much more to do. This will require some high performance capability.DAS!TFrame subclass: #TPortal3D	instanceVariableNames: 'toSpace inPortal scale scaleInverse angle offset clipBox boundSphere boundsChanged cube '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TPortal3D commentStamp: 'das 10/10/2004 13:29' prior: 52102798!TPortal3D are a kind of 3D portal. They render a miniature version of a space (or a subset of it). The content of this portal can be manipulated normally.toSpace - the space we are rendering inside of the TPortal3DinPortal - used to avoid recursion for now. At some point, we can use this as a recursion counter instead.scale - scale at which we render the contents of the portal. This can be anything, even a number larger than 1.0. It is initially 0.05.scaleInverse - the 1.0/scale inverse saved for performance.offset - the offset position of the space that we render from. That is, this offset value represents where in the space we render at the center point of the TPortal3DclipBox - the five sided box that contains the TPortal3D and clips it. I would use six sides, but I need one for the 2D portals. boundSphere - the usual suspectbounsChangedcube - a subtle cube mapped over the TPortal3D to indicate its presence. DAS!!TPrimitive commentStamp: 'das 10/10/2004 13:32' prior: 52110053!TPrimitive is the base class of a lot of the simple classes such as TCube, TSphere, TRectangle. It is primarily used to help manage graphics caching.texture - texture applied to the opaque objecttextureAlpha - texture applied to the translucent objectmaterial - material applied to the opaque objectmaterialAlpha - material applied to the alpha objectboundsChanged - if the boundSphere needs to be recomputedboundSphere - minimal sphere that contains the entire objectglListID - OpenGL ID of the cached display listoglInstance - the OpenGL instance valuecachingEnabled - flag indicating sameDAS!!TCube commentStamp: 'das 10/10/2004 11:09' prior: 51632210!TCube generates and renders a simple cube. It is one of the simplest objects that we have.DAS!!TCylinder commentStamp: 'das 10/10/2004 11:24' prior: 51645279!TCylinder generates an OGL generalized cylinder (cone). The base of the cylinder is at 0@0@0, the top is at 0@height@0.baseRadius - the radius of the bottom part of the cylinder.topRadius - the radius of the top part of the cylinder.height - the height from the base to the top of the cylinder.slices - the number of slices around the center of the cylinder.stacks - the number of stacks from bottom to top.capped - flag indicating whether the cylinder is capped top and bottom.DAS!!TPrimitiveString commentStamp: 'das 10/10/2004 13:35' prior: 0!TPrimitiveString is currently in development. Stay tuned.DAS!!TPrimitiveText commentStamp: 'das 10/10/2004 13:35' prior: 0!TPrimitiveText is currently in development. Stay tuned.DAS!!TQuad commentStamp: 'das 10/10/2004 13:36' prior: 52120537!TQuad is a TPrimitive used to render four sided objects. DAS!TFrame subclass: #TQuadTree	instanceVariableNames: 'quadCenter quadSize quadCorner inBox outBox radius center globalCenter spheres depth qtTL qtTR qtBL qtBR boundSphere quadOn angle '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Objects'!!TQuadTree commentStamp: 'das 10/10/2004 13:49' prior: 52122374!TQuadTreeThis is a spatial "loose" quadtree. It is used for fast visibility and collision detection.A loose octree/quadtree is one where an object is contained in only one octree cell. This cell is smallest cell that can completely contain the object, and the one that contains the "center" of the object. In our case, the one that contains the center of the bound sphere. The object is allowed to overlap onto adjacent cells, thus when we test for collisions, we need to compare to the current cell and all of its adjacents. The advantage is significantly simpler and faster bookkeeping.To use the TQuadTree just use the initialize method:#initializeWithSpace: space frame: frame.This will figure out the proper size of the quadtree from the elements inside of frame and it will place the TBoundSpheres into their proper slots. Then just add the TQuadTree to another frame, usually the TSpace, and you are done.TRay tests only work if the TRay is a downRay.The TQuadTree  is a hierarchical structure made up of smaller TQuadTrees. If a TQuadTree is empty, it's value is set to nil in its containing TQuadTree.quadCenter - the center of this quad.quadSize - the 2D x,z size of this  quadquadCorner - the location of the cornerinBox - box containing the centers of objects in this quadoutbox -box containing the entire objects in this quadradius - radius of the quadcenter - center of the quadspheres - collection of all the bound spheres in this quaddepth - maximum depth of quad treeqtTL - quad tree Top Left qtTR - quad tree Top RightqtBL - quad tree Bottom LeftqtBR - quad tree Bottom RightboundSphere - bound sphere of the quadquadOn - flag for rendering. If false, just render normally. DAS!!TRay commentStamp: 'das 10/10/2004 13:53' prior: 52134548!TRay specifies a position and orientation, usually inherited from it's parent TFrame. Though you can modify this. It is used to determine the closest object in a particular direction and the distance to that object. This is a factored TPointer change set. The new TRay class is concerned only with picking an object, while the new TPointer class is a subclass of TRay, but includes the events model. This means that the TCamera uses a TRay for the downPointer, and it also makes it easier to use a TRay for arbitrary objects looking for the floor. I also completely rewrote the actual matrix math. Essentially, a TRay is a TFrame with the ability to pick. Now it actually uses the local and global orientation matrices to perform the test. TRay tests are fairly expensive, so be careful with them. Also, I don't think you want to use a translation with them. I think more work needs to be done to make this robust.The way a TRay works is you simply place it as a child frame, and it will automatically get called at the next render loop. You can use it directly by calling the following methods:#pointerPick: or #pointerPickFloor: with a TBoundSphere as the argument (which in turn points to a TFrame) as the argument. If the return is true, then the TRay intersected the object.You can also call one of the #frame:xxxx:xxxx: messages if you know the type of object you are attempting to select. If you wish to check a number of objects and keep only the closest, call the message #testDistance:false. Make sure you call #testDistance: true when you are done.The following variables are for internal use only:	automatic - indicates whether a ray is tested automatically during rendering.	framePointer - is the ray orientation relative to the object we are testing against.	framePosition - is the ray location relative to the object we are testing against.	sphereDistSquared - is the distance to the recently tested sphere. 	currentFrame - this is the frame we are currently testing against.	selection - the selected frame information. See TSelection for more information.	doSelect - turns the selection of the TRay on/off. This is used by the TPointer to keep the pointer from selecting other objects between a mouseDown/mouseUp.	testDistance - a boolean that allows us to ignore the current distance when testing for object intersection. It is used when the user needs to determine intersection and to a specific object.	downRay - boolean indicates whether this is a floor test ray or not.The following variables are for external use:	minDistance - the minimum distance we care about.	minDistanceSquared - the above squared for performance	maxDistance - the furthest away we care	maxDistanceSquared - the above squared for performance.DAS!!TPointer commentStamp: 'das 10/10/2004 13:02' prior: 52079488!The TPointer object is the user pointer control. It is used to communicate user requests to the components. It is a subclassed TRay. The variables it uses are:pseudoCamera - this is the camera that the pointer shares with the TAvatar (or with the TUserCamera).avatar - this is the avatar that events are vectored through. event2d - just the morphic event being passed in if we are working with a TMorph texture.pointerXY - is the 2d location of the mouse.keySelectedObject - if we pressed a key over an object, this keeps track of sameisDown - indicates that the mouse button is currently being pressed.tool - a user tool, pretty minimal at the moment. Ultimately, the user will be able to pick up new tools and wield them.!!TRectangle commentStamp: 'das 10/10/2004 14:02' prior: 52165177!TRectangle is a TPrimitive used to render rectangles.DAS!!TButtonHolder commentStamp: 'das 10/10/2004 10:28' prior: 51576282!TButtonHolder contains and positions TButtons in a 2D surface. This is used by the pop-up window. DAS!TRectangle subclass: #TPortal	instanceVariableNames: 'toPortal outVector locVector inside lastCameraPosition blocked locator cameraDistance '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TPortal commentStamp: 'das 10/10/2004 13:18' prior: 52088500!TPortal is used to connect and see between TSpace objects. A TPortal has a link to another TPortal which in turn is embedded in another space. If the TPortal is linked back to itself, which is the default, it is treated as a mirror.toPortal - the portal that this portal is connected to. This can actually be any kind of TFrame, or it could even be a TSnapShot. The default toPortal is self which is a mirror.outVector - normal vector for TPortallastCameraPosition - last camera position used by testEnter:. If we are in front of the portal, and then behind it, we enter the portal.blocked - boolean determines if use can enter the portallocator - address to load contents of portal fromcameraDistance - used to sort the portals back to front.DAS!!TRenderAlpha commentStamp: 'das 10/10/2004 14:05' prior: 52169743!This class is used to render the alpha (transparent) objects. As an alpha object is found, a TRenderAlpha object is created that includes:tObject - the objecttransform - the object's OpenGL global transformdistance - the distance from the TCamera used for sortingparent - its parent frame (if needed - until we remove multiple parents from the system)DAS!!TRigidBody commentStamp: 'das 10/10/2004 14:40' prior: 52176815!TRigidBody is the core of the rigid body physics engine. It is itself a TFrame. At initialization, it is handed another frame, which presumably is some kind of mesh that can calculate its own inertia tensor. The TRigidBody is then installed into TPhysicsEngine, a physics engine which is responsible for updating it's state. This engine is designed to be independent of object position and orientation. It uses the current state of the frame and the current velocity and angular momentum to determine how the state will change. This does mean that if the object is currently undergoing a physical transform as it is being moved, it will continue to do so. This is currently incomplete, though it does a good job computing an inertia tensor. See TTensor.Watch this space.DAS!!TSelection commentStamp: 'das 10/10/2004 14:00' prior: 0!TSelection is a holder for data generated by the ray testing in Croquet. See TRay.object - this is the frame object ownerframe - this is the frame object that is selected.framePosition - this is the ray location relative to the selected object.parent - this is the parent of the selectedFrame at the time of rendering/selection.parentTransform - this is the transform of the parent framedistance - this is the distance from the ray position.distanceSquared - this is the squared distance from the ray position.index - this may be used by the selectedObject. It is usually the surface index.normal - this is the surface normal at the selectedPoint.point - this is the selected point in the local selectedFrame reference.triangle - used by TSelectionTrackercameraTransform - used to copy the current camera transform between pointers. A hack.DAS!!TSkyBox commentStamp: 'das 10/10/2004 14:08' prior: 52243665!TSkyBox is used to render a slowly rotating sky in the world. It is actually a collection of five fullbright textures on a cube (except for the bottom).dalpha - rotational distance every step.DAS!SketchMorph subclass: #TSnapshot	instanceVariableNames: 'frame root thumbnail tLocation tTime croquetObjectName globalTransform '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TSnapshot commentStamp: 'das 10/10/2004 14:11' prior: 52246214!TSnapshotThis class holds a location and orientation inside of a TSpace for later use. It also generates a thumbnail from this location. This class can be used as a far portal, particularly if there is no far frame to be attached to.frame - the frame from which the snapshot is takenroot - the root of the framethumbnail - a thumbnail image of the TSnapshottLocation - the root locator (a URL)tTime - when the image was takenglobalTransform - the global transform from which the snapshot was takenDAS!TGroup subclass: #TSolar	instanceVariableNames: 'earth earthFrame earthRot windButton tilt moon moonFrame earthGravity moonGravity lowPressure wind spinning wideSpread '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Demo'!!TSolar commentStamp: 'das 10/10/2004 14:19' prior: 0!TSolar is a demo of gravitation and the Coriollus effect.DAS!TGroup subclass: #TSpace	instanceVariableNames: 'croquetPlace color lightFrames portalFrames rayFrames alphaObjects currentParent currentTransform currentCameraTransform cullBackFaces fogOn fogStart fogEnd fogDensity ambientSound locator dropInFrame testRays savedAlphaObjects viewingParticipants '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TSpace commentStamp: 'das 10/10/2004 14:27' prior: 52333002!A TSpace object acts as the root render frame. It is the ultimate container, and is the entry point to a render tree. TSpace objects are contained in CroquetPlace objects, and can be linked via portals. croquetPlace - the CroquetPlace object that this TSpace belongs to.color - the default color of the space. This is the color you see when there are no objects to render.lightFrames - an OrderedCollection of all of the TLights in the hierarchy inside of this space.portalFrames - an OrderedCollection of all ofthe TPortals in the hierarchy inside ofthis space.rayFrames - an OrderedCollection of all of the TRays in the hierarchy inside of this space.alphaObjects - a temporay OrderedCollection of the alpha objects to be drawn in each rendered frame.currentParent - the current parent object of the frame being rendered. This is used for instanced objects.currentTransform - the current transform of the frame.cullBackFaces - this is a flag to turn this on and off for everything in the space.fogOn fogStart fogEnd fogDensity - fog state variables.ambientSound - current local sound - to be deprecated.locator - url object.dropInFrame - drop the TAvatar at this location when we enter the TSpace.testRays - turn ray testing on and off (e.g. for portal rendering)savedAlphaObjects - push the alpha objects list onto this stack if we ever recurse into the space WHILE we are rendering it. This actually happens with the TPortal3D.viewingParticipants - participants currently viewing (rendering) the space, directly or	through portals they view the space from.	viewingParticipants should be members of the tea party of every object in the space	and all of the spaces visible through portals.  When a new viewingParticipant is added	we walk through all the frames in the space, telling them about the new participant.	When a new child is added, we first tell it about all of the participants that are viewing	the space containing it, so it can ensure that participant is in its tea party. DAS!!TSpaceImposter commentStamp: 'das 10/10/2004 14:30' prior: 52364003!TSpaceImposterThis class is used as a place holder for a complete space when it is viewed through a portal. It is a portal connected to a TSpace containing only a cube where the surfaces are rendered from the position of the connected frame. This gives the portal a true 3D effect without having to transfer the entire world.space - the simple space that we are rendering. Notice that a TSpaceImposter is actually a kind of TPortal.box - the six sided box of snapshots taken from the location of the original portal.pixWidth - the width of the textures generated. DAS!TGroup subclass: #TSpeaker	instanceVariableNames: 'enable frame animateTime color persist strength '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TSpeaker commentStamp: 'das 10/10/2004 14:35' prior: 52367285!TSpeaker is used to show that an avatar has voice chat enabled and the voice speaker volume. It uses a TButton to hold the mesh that represents sthe speaker.enable - turn on the speakerframe - the visible object representing the speakeranimateTime - update time where we change the strength of the imagecolor - the render color of the speaker framepersist - flag to set for the TButtonstrength - the intensity of the alpha based upon the signal strengthDAS!!TSpellBox commentStamp: 'das 10/10/2004 14:36' prior: 52369365!TSpellBox is a test object used to allow the pointer to select a tool. I am not happy with how this works, so do not rely on this to be around for long.DAS!!TSphere commentStamp: 'das 10/10/2004 14:37' prior: 52370243!TSphere is a TPrimitive used to render a sphere.segments - the number of slices of the sphere around the axis and the number of slices perpendicular to it.DAS!!TTeapot commentStamp: 'das 10/10/2004 14:39' prior: 52473202!Standard Utah teapot. Used primarily for testing. This was the second Croquet object ever generated.patches - standard OpenGL patches. See TPatch.gridSize - how many segments to break the patch up into.scale - scaling size of the TTeapottype - currently GLFILL, but should use OpenGL flag instead.DAS!!TTensor commentStamp: 'das 10/10/2004 14:39' prior: 52481301!The algorithm used by this class was first developed by Brian Mirtich as described in:Brian Mirtich. Fast and accurate computation of polyhedral mass propertiesJournal of Graphics Tools, 1(2): 31-50, 1996This class will construct an inertia tensor. There are two initialize routines, one to specify mass, the other density. The class allows you to add any number of groups of faces and then calculate and return the results. There are two main return values - the tensor (tensor), a B3DMatrix4x4 and a center of mass (centerMass), a B3DVector3. Both of these values are available after the TTensor >> result message is sent. it _ TTensor new initializeMass: mass. " or use it _ TTensor new initializeDensity: density.""Add any number of groups of faces. This allows for disjoint or complex vertex/face groups. Remember that everything added is treated as a single rigid body."it addFaces: f1 vertices: v1.it addFaces: f2 vertices: v2.it addFaces: f3 vertices: v3.inertiaTensor _ it result.inertiaTensor _ it tensor.centerofmass _ it centerMass.DAS!!TTexture commentStamp: 'das 10/10/2004 14:44' prior: 52503889!This is used to create a GL texture from a form, either directly or from a file.This is dependent upon the TForm class, which handles the actual bits.tform - this hold both a Squeak Form and the OpenGL GLID for the texture in OpenGL memory.baseScale - uvScale - the uv values can be modified for certain objects like the TPrimitives and the TMesh/TLoad3DSMax. Do that here.uvOffset - this is used by the TMesh and TLoad3DSMax objects.mode - used when we render the texture by itself, though it can be used by anything.uvAngle - again used by the 3DSMax importer for the TMesh objects.DAS!!TTriangle commentStamp: 'das 10/10/2004 14:46' prior: 52524246!TTriangle is a TPrimitive used to render triangles.This creates and renders your simple OpenGL triangle. Usually used for testing, but you have to start somewhere...This was really the first object ever generated in Croquet - pay no attention to the TFlag and the TTeapot. They are lieing.DAS!TCamera subclass: #TUserCamera	instanceVariableNames: 'pointer mouseDownTime avatar yellowButtonPressed redButtonPressed doRender rearCam phone cameraButton overlaySpace remoteControl chatObject lastRenderTime renderInterval renderEstimate overlays debugOverlay buttonsOverlay morphicOverlay thirdPerson thirdPersonDelta thirdPersonLag avatarSpace downPointer '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TUserCamera commentStamp: 'das 10/10/2004 15:25' prior: 52526338!TUserCamera is a TCamera that is used by the user to manipulate his position in space and render same.pointer - the local TPointer. Used to determine what objects the user is interested in at render time.mouseDownTime - used to determine if a single click has occurred. Used for snapback.avatar - the avatar is the users representation in the TSpace. It is the object we are following.yellowButtonPressed - flag indicating yellowButton was pressed.redButtonPressed - flag indicating samedoRender - deprecated, since TUserCamera's don't render themselves anymore.rearCam - rear view mirror added to list of overlaysremoteControl - deprecatedchatObject - used to talk remotelyoverlays - a list of objects to be rendered overlayed over the main rendered scenedebugOverlay - reserved for an embedded debuggerbuttonsOverlay - holds the buttons in an overlay spacemorphicOverlay - morphic objects overlayedthirdPerson - state of the third person viewthirdPersonDelta - thirdPersonLag - avatarSpace - the space that the TAvatar is currently inDAS !!TWidget commentStamp: 'das 10/10/2004 15:23' prior: 52568046!TWidget is primarily used to load meshes that may be used as frames in TButtons. It sets up a number of properties such as initial materials and texture modes. Probably should not have its own class.!!TWirePortal commentStamp: 'das 10/10/2004 15:25' prior: 0!TWirePortal sets the wire frame forcewire flag to be inverted upon rendering through it. This causes everything to be rendered in wireframe on entry (or not, depending upon the current state).DAS!!TWorldCanvas commentStamp: 'das 10/10/2004 15:27' prior: 0!TWorldCanvas is a Squeak FormCanvas that is used by the TMorphMonitor where  the monitor canvasForm is used as the form of this.DAS!!TeaMessage commentStamp: 'das 10/10/2004 15:34' prior: 0!TeaMessage is a Message that is specific to sending Croquet messages between machines.DAS!!TeaName commentStamp: 'das 10/10/2004 15:35' prior: 0!TeaName is a package that an object's teaName is placed into. It knows how to find the real object when it gets sent to a remote user.DAS!!TeapotMorph commentStamp: 'das 10/10/2004 15:33' prior: 52777643!TeapotMorph is the main Croquet demo morph. Most of the interesting stuff that we have done in Croquet is available through this.DAS!!SampleTeapotMorph commentStamp: 'das 10/10/2004 15:29' prior: 0!SampleTeapotMorph is used as a simple test bed for Croquet. When we create something new, this is usually where we try it out first.DAS!!TeaTest commentStamp: 'das 10/10/2004 15:32' prior: 0!TeaTest is used as a Croquet test bed.DAS!!TweakTeapotMorph commentStamp: 'das 10/10/2004 15:34' prior: 0!TweakTeapotMorph is a minimal test TeapotMorph with Tweak enabled.DAS!!TAvatar methodsFor: 'initialize' stamp: 'das 10/10/2004 10:48' prior: 33575876!initialize	| downMatrix |	super initialize.	sticky _ false.	doRender _ true.	carrying _ nil.	height _ 4.6.	lastDownPosition _ B3DVector3 new.	footFrame _ TGroup new.	footFrame singleParent: true.	gotoCount _ 0.	driving _ false.	controlPitch _ false.	currentSpace _ nil.	laser _ TLaser new.	laser translation:(B3DVector3 x: 0.5 y:-0.3 z:-0.2).	laser length: 0.5.	self addChild: laser.	transparency _ 1.0.	downMatrix _ B3DMatrix4x4 identity rotationAroundX: -90.	downPointer _ TRay new.	downPointer localTransform: downMatrix.	downPointer downRay: true.	self addChild: downPointer.	self fall.	pointer _ TPointer new.	camera _ TCamera new.	camera addChild: pointer.	pointer camera: camera.	pointer avatar: self.	^self! !!TMesh methodsFor: 'initialize' stamp: 'das 10/10/2004 12:44' prior: 51939417!initializeWithVertices: v alias: a norms: n textureUV: tuv faceGroups: fg material: ml 	| mat |	vertices _ v.	alias _ a.	vtxNormals _ n.	textureUV _ tuv.	faceGroups _ fg.	alpha_ false.	opaque _ false.	mat _ ml.	mat ifNil:[ 		mat _ TMaterial new.		mat ambientColor: #(1.0 0.2 0.2 0.5) asFloatArray.		 ].	mat subMaterialList ifNotNil:[ materialList _ mat subMaterialList. ]	ifNil:[		materialList _ OrderedCollection new.		materialList add: mat.		1 to: faceGroups size by: 2 do:[ :i |			faceGroups at: i put: 1. ].].	1 to: faceGroups size by: 2 do:[:i |		faceGroups at: i put: 1+(((faceGroups at: i)-1)\\materialList size).		((materialList at:(faceGroups at: i)) hasAlpha) ifTrue: [ self hasAlpha: true.] ifFalse:[ self opaque: true].		].	self optimizeFaceGroups.	boundsDepth _ 2. "must always be a mimimum of 1 - the top sphere, and at least one recursion."	self boundsChanged.	self enableCaching."	This code is used to test the bounds sphere.""	boundMaterial _ TMaterial new.	boundMaterial ambientColor: #(0.7  0.2 0.1 0.3)asFloatArray.	boundMaterial diffuseColor: #(0.7  0.2 0.1 0.3)asFloatArray.	alpha _ true."	^self! !!TMesh methodsFor: 'copying' stamp: 'das 10/10/2004 12:45' prior: 51942773!postCopy	super postCopy.	materialList ifNotNil:[		materialList _ materialList collect:[:mat| mat copy].	].	self vertices: vertices copy.	self boundsChanged.	self enableCaching.	^ self.! !!TMesh methodsFor: 'fileIn/Out' stamp: 'das 10/10/2004 12:44' prior: 51943073!postImportFrom: importer	super postImportFrom: importer.	self enableCaching.! !!TPortal3D methodsFor: 'initialize' stamp: 'das 10/10/2004 13:21' prior: 52108700!initialize	| txtr mat |	super initialize.	inPortal _ false.	cube _ TCube new.	self addChild: cube.	txtr _ TTexture				new initializeWithFileName: 'box.png'				mipmap: true				shrinkFit: false.	mat _ TMaterial new.	mat ambientColor: #(0.5 0.7 0.7 0.05) asFloatArray.	mat diffuseColor: #(0.5 0.7 0.7 0.05) asFloatArray.	mat cullFace: false.	mat texture: txtr.	cube material: mat.	scale _ 0.05.	self objectName:'Portal3D'.	boundsChanged _ true.	offset _ B3DVector3 x: 0.0 y: 0.0 z: 0.0.	self extent:(B3DVector3 x:4 y:4 z:4).	^self! !!TPortal methodsFor: 'render' stamp: 'das 10/10/2004 13:09' prior: 52092919!enableClipPlane: ogl	"------ enableClipPlane is used to clip the TSpace to the front face of the portal. This ensures that objects don't get rendered in front of the portal, which would look bad and be confusing.------"	| equation |"------ We need to do it this way, because Squeak does not directly support doubles and gllClipPlane requires an array of same. ------"	equation _ ExternalData fromHandle: (ExternalAddress allocate: 8*4) type:ExternalType double.	equation getHandle doubleAt: 1 put: outVector x.	equation getHandle doubleAt: 9 put: outVector y.	equation getHandle doubleAt: 17 put: outVector z.	equation getHandle doubleAt: 25 put: 0.0.	ogl		glPushMatrix;		glMultMatrixf: self globalTransform transposed;		glClipPlane: GLClipPlane0 with: equation;		glEnable: GLClipPlane0;		glPopMatrix.	equation free.! !!TPortal methodsFor: 'render' stamp: 'das 10/10/2004 13:11' prior: 52094274!render: ogl depth: depth	| trans m2 toSpace gt containerPortal portalClip color clipPlanes renderedObjects ac saveSelected saveDoSelect saveMinDistance portalDistance saveForceWire |" This method is the recursive portal renderer. enter refers to the renderer entering the portal. If you want the camera entering check out TPortal>>testEnter: ac."	renderedObjects _ 1. "We are also rendering the portal."" ------- We keep track of which portal we are currently working in to avoid a tight recursion error,where the portal re-enters itself to render. It is (somewhat) OK to re-enter from another portal. This is equivalent to a mirror in a mirror situation. Here we need to keep a count of the re-entries.------""	toPortal visibleTree ifFalse:[ ^0 ]. ""The portal is not visible on the other side."	toSpace _ toPortal root.	toSpace = toPortal ifTrue:[ ^0 ]. "The portal is not installed on the other side!!"	containerPortal _ ogl currentPortal.	ogl currentPortal: self." ------ For rendering the portal ONLY - we turn off depth testing. We just want to write into the stencil buffer here and set the color of the toSpace. Depth testing is turned back on before we recurse into the connected portal.------"	gt _ self globalTransform. 	depth = 1 ifTrue:[ogl glEnable: GLStencilTest.].	ogl glPushMatrix. 	ogl glMultMatrixf: gt transposed.	ogl glDisable: GLDepthTest. " ------ Paint the portal with the color of the TSpace ------ "	ogl glDisable: GLLighting.	color _ B3DVector3 x: toSpace color red y: toSpace color green z: toSpace color blue.	ogl glColor3fv: color.	ogl glStencilFunc:GLEqual with:depth-1 with: -1.	ogl glStencilOp:GLKeep with:GLKeep with:GLIncr." ------ Render the stencil here. ------ "	saveForceWire _ ogl forceWire.	ogl forceWire:false.	self renderPortal: ogl.	ogl forceWire: saveForceWire.	ogl glStencilFunc: GLEqual with: depth with: -1.	ogl glStencilOp: GLKeep with: GLKeep with: GLKeep.	ogl glEnable: GLDepthTest.	ogl glEnable: GLLighting.	ogl glPopMatrix.	ogl glPushMatrix."	m1 _ self globalTransform."	toPortal isPortal ifTrue:[m2 _ toPortal globalMatrixOut.] ifFalse:[m2 _ toPortal globalTransform.]." ------- For simplicity - and because I can't think of a good reason not to do this - if a portal points back to itself, it is considered to be a mirror. Note that we flip the directions of the polyon tests as well. This is restored at the end. We are inverting the x-coordinate of the matrix here. ------" 	self = toPortal ifTrue:[		m2 a11: m2 a11 negated.		m2 a21: m2 a21 negated.		m2 a31: m2 a31 negated.		ogl flipFace.].	ac _ ogl camera.	ac pointer ifNotNil:[		saveSelected _ ac pointer copiedSelection.		saveMinDistance _ ac pointer minDistance.		saveDoSelect _ ac pointer doSelect.		(ac pointer pointerPick: self boundSphere) ifTrue:[				portalDistance _ ac pointer selectedDistance.				ac pointer minDistance: portalDistance.			] ifFalse:[ 				portalDistance _ Float infinity.				ac pointer doSelect: false.			].		ac pointer selected: saveSelected.	].	portalClip _ac portalClip.	ac portalClip: m2." ------ This math is simply: 			m1 = trans*m2			m1 * m2**-1 = trans * m2 * m2**-1			m1 * m2**-1 = trans.  We then replace the transform matrix of the TCamera with the appropriate transform, which places the TCamera into the correct position in the new space.------"	clipPlanes _ ac clipPlanes.	ac clipPlanes: (self initClipPlanes: ac globalTransform mirror: ogl isMirror).self = toPortal ifTrue:[ ogl mirrorFlip.].	trans _ m2 composeWith: gt orthoNormInverse.	ac globalTransform:		(trans composeWith: ac globalTransform).	ac pointer ifNotNil:[		ac pointer globalTransform: 			(ac globalTransform composeWith: ac pointer localTransform).		].	renderedObjects _ renderedObjects + (toSpace renderSpace: ogl port: toPortal depth: depth+1). "<------ Render TSpace here!! -------"	ac clipPlanes: clipPlanes.	self = toPortal ifTrue:[ogl flipFace. ogl mirrorFlip.].	ogl glPopMatrix." ------ Just in case we jumped into a portal, restore the stencil depth ------"	ogl glStencilFunc: GLLequal with: depth-1 with: -1.	ogl glStencilOp: GLKeep with: GLKeep with: GLKeep."------ Render the front face invisibly to set the z-buffer to ensure nothing bleeds into the portal space from our space. ------"				ogl glPushMatrix.	ogl glPolygonOffset: 2.1 with: 4.0.	ogl glEnable: GLPolygonOffsetFill.	ogl glColorMask: GLFalse with: GLFalse with: GLFalse with: GLFalse.	ogl glMultMatrixf: gt transposed.	ogl forceWire: false.	self renderPortal: ogl.	ogl forceWire: saveForceWire.	ogl glColorMask:GLTrue with: GLTrue with:GLTrue with:GLTrue.	ogl glDisable: GLPolygonOffsetFill.	ogl glPopMatrix.	depth = 1 ifTrue:[ogl glDisable: GLStencilTest.].	ogl currentPortal: containerPortal.	ac portalClip: portalClip.	ac pointer ifNotNil:[		ac pointer doSelect: saveDoSelect.		ac pointer minDistance: saveMinDistance.		ac pointer maxDistance: (ac pointer maxDistance min: portalDistance).		].	^ renderedObjects.! !!TPortal methodsFor: 'initialize' stamp: 'das 10/10/2004 13:12' prior: 52101855!initialize 	| mat |	super initialize.	outVector _ B3DVector3 x: 0.0 y:0.0 z:1.0.	mat _ TMaterial new.	mat ambientColor:#(0.5 0.5 0.5 0.0) asFloatArray.	mat diffuseColor:#(0.5 0.5 0.5 0.0) asFloatArray.	super material: mat.	toPortal _ self.	self initBounds.	self objectName:'portal'.	blocked _ false. 	^self! !!TSpace methodsFor: 'render' stamp: 'das 10/10/2004 14:22' prior: 52351320!setCull: ogl	cullBackFaces ifTrue: [ogl glEnable: GLCullFace; glFrontFace: ogl frontFace.]	ifFalse: [ogl glDisable: GLCullFace.].! !!TSpeaker methodsFor: 'initialize' stamp: 'das 10/10/2004 14:34' prior: 52368288!initializeWithFrame: fr	frame _ fr.	frame ifNotNil:[ frame objectOwner: self.].	self addChild: frame.	self color: TButton normColor.	frame solidVisibleTree: false.	animateTime _ nil.	enable _ false.	strength _ 1.0.	^self! !!TUserCamera methodsFor: 'initialize' stamp: 'das 10/10/2004 15:15' prior: 52530568!initializeWithViewPort: vp	super initializeWithViewPort: vp.	pointer _ TPointer new.	pointer minDistance: zNear.	pointer camera: self.	self addChild: pointer.	yellowButtonPressed _ false.	redButtonPressed _ false.	doRender _ true.	remoteControl _ nil.	overlays _ OrderedCollection new.	self addOverlay: (buttonsOverlay _ TOverlayButtons new camera: self).	self addOverlay: (morphicOverlay _ vp).	"self addOverlay: (debugOverlay _ TDebugOverlay new)."	thirdPerson _ 1.0.	thirdPersonDelta _ 0.	thirdPersonLag _ 4.0.	! !!TWaves methodsFor: 'events' stamp: 'das 10/11/2004 13:01' prior: 52559181!pointerMove: pointer	| loc dx dy index |" #pointerMove: determines which cell we have clicked inside of and after proper bounds checking, it adds a spring force to that cell and a few surrounding it. The #step routine then calculates the wave functions based upon this disturbance."	dx _ self extent x/2.	dy _ self extent y/2.	"(pointer frame: self pickQuad: (B3DVector3  x:0.0 y:0.0 z:1.0)		q1: (B3DVector3 x: location x + dx negated y: location y + dy z: location z)		q2: (B3DVector3 x: location x + dx negated y: location y + dy negated z: location z)		q3: (B3DVector3 x: location x + dx y: location y + dy negated z: location z)		q4: (B3DVector3 x: location x + dx y: location y + dy z: location z))"	(pointer frame: self pickPlane: selectedPoint normal: cameraNorm)	 ifTrue:[		loc _ pointer selectedPoint - location.		dx _ (0.5+(loc x/extent x) * size x) asInteger.		dx = size x ifTrue:[dx = dx-1.].		dy _ (0.5+(loc y/extent y)* size y) asInteger.		dy = size y ifTrue:[dy = dy -1].		index _ (dy*size x + dx).		self meta impulse: index.		].	! !TUserCamera removeSelector: #forwardOnY!TUserCamera removeSelector: #forwardOnY!TCamera subclass: #TUserCamera	instanceVariableNames: 'pointer mouseDownTime avatar yellowButtonPressed redButtonPressed doRender rearCam remoteControl chatObject overlays debugOverlay buttonsOverlay morphicOverlay thirdPerson thirdPersonDelta thirdPersonLag avatarSpace '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!TGroup subclass: #TSpeaker	instanceVariableNames: 'enable frame animateTime color strength '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!TSpace removeSelector: #currentCameraTransform!TSpace removeSelector: #currentCameraTransform!TGroup subclass: #TSpace	instanceVariableNames: 'croquetPlace color lightFrames portalFrames rayFrames alphaObjects currentParent currentTransform cullBackFaces fogOn fogStart fogEnd fogDensity ambientSound locator dropInFrame testRays savedAlphaObjects viewingParticipants '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!SketchMorph subclass: #TSnapshot	instanceVariableNames: 'frame root thumbnail tLocation tTime globalTransform '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!TPortal removeSelector: #inside!TPortal removeSelector: #inside!TRectangle subclass: #TPortal	instanceVariableNames: 'toPortal outVector lastCameraPosition blocked locator cameraDistance '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!TFrame subclass: #TQuadTree	instanceVariableNames: 'quadCenter quadSize quadCorner inBox outBox radius center spheres depth qtTL qtTR qtBL qtBR boundSphere quadOn '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Objects'!TFrame subclass: #TPortal3D	instanceVariableNames: 'toSpace inPortal scale scaleInverse offset clipBox boundSphere boundsChanged cube '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!TMesh removeSelector: #oldRender:!TMesh removeSelector: #oldRender:!TMesh removeSelector: #oldRenderAlpha:!TMesh removeSelector: #oldRenderAlpha:!TFrame subclass: #TMesh	instanceVariableNames: 'materialList vertices alias vtxNormals textureUV faceGroups alpha opaque boundsChanged boundSphere boundsDepth boundMaterial cachingEnabled cachingAlphaEnabled '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Objects'!TAvatar removeSelector: #forwardOnY!TAvatar removeSelector: #forwardOnY!TGroup subclass: #TAvatar	instanceVariableNames: 'content nickname host speaker doRender height footFrame lastDownFrame lastDownPosition gotoCount gotoTransform snapTrans sticky speedControl driving controlPitch currentSpace laser transparency downPointer pointer camera carrying '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!Smalltalk removeClassNamed: #TForceWire!Smalltalk removeClassNamed: #TForceWire!Smalltalk removeClassNamed: #TPrimitiveMesh!Smalltalk removeClassNamed: #TPrimitiveMesh!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #28] on 11 October 2004 at 3:35:52 pm'!"Change Set:		StartupWorldDate:			11 October 2004Author:			David A. SmithChanges the startup world to be a bit more inviting."!!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 15:24' prior: 52789058!make3Body: spc	| sp2 light tframe p1 win pic p2 |	sp2 _ TSpace new.	sp2 color:  (Color				r: 0.0				g: 0.0				b: 0.0).		sp2 url: 'http://www.reed.com/TeaLand/spaces/3body.tea'."Add a light to the world "	light _ TLight new.	light ambientColor: #(0.3 0.3 0.3 1)asFloatArray.	tframe _ TSpinner new.	tframe translationX: -10 y:0.0 z: 0.0.	tframe rotationAroundX: -90.	tframe matNil.	tframe contents: light.	sp2 addChild: tframe.	tframe _ T3Body new.	sp2 addChild: tframe.	p1 _ TPortal new.	win _ TWindow new.	win translationX: -12 y: 0.0 z: -1.0.	win contents: p1.	spc addChild: win.	pic _ TTexture				new initializeWithFileName: 'Reed.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	p2 _ TPortal new.	win _ TWindow new.	win rotationAroundY: 225.	win translationX: 40.0 y:10.0 z: 40.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.	self makeSnapshot: sp2 angle: 11 translation:(B3DVector3 x:11.27770042419434 y:10.25 z:100.1538009643555).	^sp2! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 14:52' prior: 33564676!makeDungeon: sp	| win win2 sp2 p1 p2 lt mat pic tframe waterTop waterfall waterBottom |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new."	p2 rotationAroundY: 180.	p2 translationX: 0.0 y:0.0 z: 3.0.	p2 material: mat."	lt _ TLight new.	lt ambientColor: #(1 1 1 1) asFloatArray.	lt diffuseColor: #(1 1 1 1) asFloatArray.	lt specularColor: #(0.2 0.15 0.15 1.0) asFloatArray.	lt visible: false.	tframe _ TSpinner new.	tframe translationX: -10 y:0.0 z: 0.0.	tframe matNil.	tframe contents: lt.	lt := tframe.	lt addRotationAroundZ: 120.	lt addRotationAroundY:-10.	lt translationX: -30 y:-32 z: -76."	lt2 _ TLight new.	lt2 ambientColor: #(0.7 0.7 0.7 1.0) asFloatArray.	lt2 diffuseColor: #(0.7 0.7 0.7 1.0) asFloatArray.	lt2 specularColor: #(0.1 0.1 0.2 1.0) asFloatArray.	lt2 visible: false.	tframe _ TSpinner new.	tframe matNil.	tframe contents: lt2.	lt2 := tframe.	lt2 addRotationAroundZ: -120.	lt2 addRotationAroundY:10.	lt2 translationX: -34 y:-32 z: -76."	sp2 _ TSpace new.	sp2 url: 'http://www.reed.com/TeaLand/spaces/dungeon.tea'."	sp2 ambientSound: (self loadAmbientSound: 'flag.mp3')."	sp2 addChild: lt. " add the light""	sp2 addChild: lt2." " add the light"	sp2 color:(Color r: 0.5 g: 0.7 b: 0.6).	sp2 fogOn: true.	sp2 fogDensity: 0.0015.	sp2 fogStart: 100.0.	sp2 fogEnd: 6000.0.		pic _ TTexture				new initializeWithFileName: 'Smith.bmp'				mipmap: true				shrinkFit: false.	win _ TWindow new.	win translationX: 12 y: 0.0 z: -1.0.	win contents: p1.	win rectFront: pic.	win closeContents.	sp addChild: win.	win2 _ TWindow new.	win2 translationX: -5 y: -32 z: -78.	win2 contents: p2.	sp2 addChild: win2."	sp2 addChild: p2."	p1 linkPortal: p2.	tframe _ TSkyBox new initializeWithFileName: 'CA'."	glx activeCamera attachment: tframe."	sp2 addChild: tframe.		tframe _ self loadURL: 'http://www.reed.com/TeaLand/spaces/theDungeon.tea'.	tframe ifNil:[		tframe _ (TLoad3DSMax new initializeWithFileName: 			(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'DungeonDemo'. 'space5.ase'}) 			scale: 0.035 shadeAngle: 90.1 textureMode: GLModulate) frame.		tframe translationX: -67 y: -3.0 z:-208.0."		tframe translationX: -63 y: -4.0 z:-163.0.""		tframe rotationAroundX: -90."		tframe boundsDepth: 2.		tframe initBounds.		TExporter export: tframe asBinary:'http://www.reed.com/TeaLand/spaces/theDungeon.tea'.		].	self world doOneCycleNow.	"sp2 addChild: tframe."	waterTop _ (tframe find:[:frm | frm objectName = '$WaterfallTop'])at:1.	waterfall _ self makeWaterfall: waterTop translation.	waterTop parent addChild: waterfall.	waterTop removeSelf.	waterBottom _ (tframe find:[:frm | frm objectName = '$WaterfallBottom'])at:1.	self world doOneCycleNow.	waterfall _ self makeWaterfallBottom: waterBottom translation.	waterBottom parent addChild: waterfall.	waterBottom removeSelf.	self world doOneCycleNow.	TQuadTree new initializeWithSpace: sp2 frame: tframe."This is to test the performance of the ray test code.	100 timesRepeat:[ |swarm |		swarm _ TSwarm new.		swarm translationX: 20 atRandom -10 y: -30 z: 20 atRandom - 170.		sp2 addChild: swarm.].""	self makeCharacters:sp2 at: (-6@-36.5@-71)."	self makeSnapshot: sp2 angle: -11 translation:(B3DVector3 x:16.52985000610352 y:-32.47652435302734 z:-103.7088470458984).! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 15:10'!makeFlash: sp	| win teaWorld player tm |	tm _ TMorphic new initializeOpaque: false extent: 512@256.	teaWorld _ TMorphMonitor new initializeWithWorld: nil extent: 512@256.	teaWorld eventsTo: tm.	[player _ (FlashMorphReader on: (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'content'. 'actinMyosin2.swf'}))) processFile.	player useTimeSync: false.	player color: Color transparent.	player startPlaying.	player lock.	teaWorld world addMorphCentered: player.	] on: FileDoesNotExistException do:[:ex| ex return].	teaWorld world color: Color transparent.	win _ TWindow new.	win translationX: 31 y: 0.0 z: 28.0.	win rotationAroundY: -90.	win contents: tm.	win closeContents.	sp addChild: win.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 15:07' prior: 52803840!makeFloor: sp fileName: txtrName	| stone txt |	txt _ TTexture				new initializeWithFileName: txtrName				mipmap: true				shrinkFit: false.	txt uvScale: 8.0@8.0.	stone _ TCube new.	stone extentX:80 y:0.5 z: 80.	stone translationX: 0 y: -4.0 z: 0.0.	stone texture: txt.	stone objectName: 'floor'.	sp addChild: stone.	^ stone.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 14:50' prior: 52811928!makeKay: sp	| env pic win tframe |	pic _ TTexture				new initializeWithFileName: 'Kay.bmp'				mipmap: true				shrinkFit: false.	env _ TTexture				new initializeWithFileName: 'SkyBoxJULRT.bmp' 				mipmap: true				shrinkFit: false.	tframe _ TWaves initializeWithSize: 20@20.	tframe texture: pic.	tframe envTexture: env.	win _ TWindow new.	win translationX: 7 y: 0.0 z: -2.0.	win contents: tframe.	sp addChild: win."	pic _ TTexture				new initializeWithFileName: 'dpr.bmp'				mipmap: true				shrinkFit: false.	win _ TWindow new.	win translationX: -12 y: 0.0 z: -2.0.	win contents: pic.	sp addChild: win."! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 15:20' prior: 33568182!makeMars: sp	| win sp2 p1 p2 lt tframe pic rover |	p1 _ TPortal new.	lt _ TLight new.	lt rotationAroundZ: 120.	lt translationX: 10 y: 0 z:10.	sp2 _ TSpace new.	sp2 addChild: lt.	sp2 color:(Color r: 0.6 g: 0.5 b: 0.2).	sp2 url: 'http://www.reed.com/TeaLand/spaces/redplanet.tea'.	win _ TWindow new.	win translationX: -20 y: 0.0 z: 0.0.	win contents: p1.	sp addChild: win.	pic _ TTexture new initializeWithFileName: 'McCahill.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	p2 _ TPortal new.	win _ TWindow new.	win rotationAroundY: 225.	win translationX: 40.0 y:-17.0 z: 40.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.	self world doOneCycleNow.	rover _ TRover new.	rover translationX:10 y:-19.11 z:0.	sp2 addChild: rover.	self world doOneCycleNow.	tframe _ self loadURL: 'http://www.reed.com/TeaLand/spaces/mars.tea'.	tframe ifNil:[		tframe _ (TLoad3DSMax new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'mars'. 'masterTerrain.ase'}) scale: 0.05) frame."		tframe rotationAroundX: -90."		tframe boundsDepth: 2.		tframe initBounds.		TExporter export: tframe asBinary:'http://www.reed.com/TeaLand/spaces/mars.tea'.		].	tframe translationX: 0.0 y: 22.0 z:0.0.	TQuadTree new initializeWithSpace: sp2 frame: tframe. 	self makeSnapshot: sp2 angle: 15 translation:(B3DVector3 x:21.26738166809082 y:-17.4773292541504 z:38.1824035644531).! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 15:31' prior: 52816319!makeMoving: sp to: spX	| flr win win2 sp2 p1 p2 lt mat pic tframe escalator  |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new."	p2 rotationAroundY: 180.	p2 translationX: 0.0 y:0.0 z: 3.0.	p2 material: mat."	lt _ TLight new."	lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.5 0.6 0.7 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.5  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt rotationAroundZ: 120.	sp2 _ TSpace new.	sp2 url: 'http://www.reed.com/TeaLand/spaces/flag.tea'."	sp2 ambientSound: (self loadAmbientSound: 'flag.mp3')."	sp2 addChild: lt.	"sp2 color:(Color r: 0.0 g: 0.05 b: 0.03).	sp2 color:(Color r: 0.0 g: 0.15 b: 0.09).	sp2 fogOn: true.	sp2 fogDensity: 0.015.	sp2 fogStart: 40.0.	sp2 fogEnd: 200.0."	flr _ self makeFloor: sp2 fileName: 'stone.BMP'.	flr translationX: 0 y: -4.0 z: -3.0.	sp2 addChild: flr.		mat _ TMaterial new.	mat ambientColor: #(0.5 0.5 0.5 1.0) asFloatArray.	mat diffuseColor: #(0.5 0.5 0.5 1.0) asFloatArray.	pic _ TTexture				new initializeWithFileName: 'GrnChplIntDblDrs.bmp'				mipmap: true				shrinkFit: false.	win _ TWindow new.	win translationX: -10 y: 0.0 z: -2.0.	win contents: p1.	win rectFront: pic.	win closeContents.	sp addChild: win.	win2 _ TWindow new.	win2 translationX: 5 y: 0.0 z: 2.0.	win2 rotationAroundY: 55.	win2 contents: p2.	sp2 addChild: win2."	sp2 addChild: p2."	p1 linkPortal: p2.	self makeFlag: sp2.	tframe _ TSkyBox new initializeWithFileName: 'CA'."	glx activeCamera attachment: tframe."	sp2 addChild: tframe.		self makeLazySusan: sp2.	escalator _ TEscalator new initializeWithTreads: 20.	escalator translationX:-10 y:-4 z:0.	sp2 addChild: escalator.		p1 _ TPortal new.	p1 translationX: -10 y: -4 + (20*0.4)+1.4 z:(19*0.4)-0.5.	p1 rotationAroundY:180. 	p1 extent: (Point x: 3 y: 5). 	sp2 addChild: p1.	win _TWindow new.	p2 _ TPortal new.	win contents: p2.	win translationX: 8 y: 0 z:30.	win rotationAroundY:180.	p1 linkPortal: p2.	spX addChild: win.	self makeSnapshot: sp2 angle: 140 translation:(B3DVector3 x:18.49281883239746 y:0.25 z:-12.2568531036377).! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 15:20' prior: 52824898!makeSlime: sp	| p1 p2 pic win win2 lt sp2 |	p1 _ TPortal new.	p2 _ TPortal new.	p1 linkPortal: p2.	lt _ TLight new."	lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.5 0.6 0.7 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.5  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt translationX: 20 y: 0.0 z: 20.0.	lt rotationAroundZ: 120.	sp2 _ TSpace new.	sp2 url: 'http://www.reed.com/TeaLand/spaces/slimemold.tea'.	sp2 addChild: lt.	sp2 color:(Color r: 0.8 g: 0.8 b: 1.0)."	teaWorld _ TMorphic new initialize: glx world: nil opaque: false extent: 64@64.	slime _ StarSqueakSlimeMold new initialize.	slime startRunning.	teaWorld world addMorphCentered: slime.	teaWorld world color: Color transparent.	man _ TManifold initializeWithContents: slime.	man texture: teaWorld.	man translationX: 0 y: -3.0 z: 0.	sp2 addChild: man."	self makeSpreadSheet: sp2.	self makeFloor: sp2 fileName: 'graph128.bmp'.	pic _ TTexture				new initializeWithFileName: 'Lombardi.bmp'				mipmap: true				shrinkFit: false.	win _ TWindow new.	win translationX: 20 y: 0.0 z: 0.0.	win contents: p1.	win rectFront: pic.	win closeContents.	sp addChild: win.	win2 _ TWindow new.	win2 rotationAroundY: 180.	win2 translationX: 0 y: 0.0 z: 40.0.	win2 contents: p2.	sp2 addChild: win2.	self makeSnapshot: sp2 angle: -40 translation:(B3DVector3 x:-6.16044044494629 y:0.25 z:8.65220928192139).! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/11/2004 14:51' prior: 33569733!makeUnderwater3: sp	| sp2 p1 p2 lt mat floorMesh win pic tMesh url cc |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new.	p2 material: mat.	lt _ TLight new.	"lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.5 0.5 0.5 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.0  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt rotationAroundZ: 220.	lt translationX: 0 y: 3 z: -15.	cc := Color r: 0.0 g: 0.45 b: 0.51.	"cc := Color r: 0.1 g: 0.3 b: 0.2."	sp2 _ TCausticSpace new.	"sp2 _ TSpace new."	sp2 url: 'http://www.reed.com/TeaLand/spaces/underwater.tea'."	sp2 ambientSound: (self loadAmbientSound: 'underwater.mp3')."	sp2 addChild: lt.	sp2 color: cc.	sp2 fogOn: true.	sp2 fogDensity: 0.025.	sp2 fogStart: 40.0.	sp2 fogEnd: 200.0.	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	tMesh ifNil:[		floorMesh _ (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'topo.mesh'})) fileInObjectAndCode.		floorMesh faces reverseDirection.		"floorMesh transformBy: (B3DMatrix4x4 withScale: (0.01@0.01@0.01))."		pic := TTexture new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'Waves1.jpg'}).		mat _ TMaterial new.		mat ambientColor: #(0.2 0.4 0.3 1) asFloatArray.		mat diffuseColor: #(0.2 0.4 0.3 1) asFloatArray.		mat texture: pic.		mat textureMode: GLModulate.		tMesh := TMesh new initializeWithVertices: floorMesh vertices 			alias: nil 			norms: floorMesh vertexNormals			textureUV: floorMesh texCoords			faceGroups: {1. floorMesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	].	self world doOneCycleNow.	tMesh solid: true.	tMesh translationX: 0 y: -76 z: 0.	tMesh material ambientColor: #(1 1 1 1) asFloatArray.	tMesh material diffuseColor: #(1 1 1 1) asFloatArray.	sp2 addChild: tMesh.	self makeSomeFish: sp2.	self world doOneCycleNow.	#(		('tutorials/embedded/fishScript/fishScript.html' -10 1 -22 30)		('tutorials/embedded/fishPaint/fishPaint.html' 10 1 -22 -30)	) do:[:spec|		url := spec first. "look locally first"		url := FileDirectory pathFrom: {FileDirectory default pathName}, (spec first findTokens: '/').		(FileStream isAFileNamed: url) 			ifTrue:[url := FileDirectory default url, spec first] "local"			ifFalse:[url := 'http://www.reed.com/TeaLand/', spec first].		pic _ self makeWebPage: url extent: 512@256.		win _ TWindow new.		win translationX: spec second y: spec third z: spec fourth.		win rotationAroundY: spec fifth.		win contents: pic.		sp2 addChild: win.	].	win _ TWindow new.	win translationX: -5 y: 0.0 z: -2.0.	win contents: p1.	pic _ TTexture new initializeWithFileName: 'Raab.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	sp addChild: win.	win _ TWindow new.	win rotationAroundY: 180.	win translationX: 0.0 y:0.0 z: 3.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.! !!TeapotMorph methodsFor: 'initialization' stamp: 'das 10/11/2004 14:43' prior: 52859538!initialize	| logo space avatar |	super initialize.	mutex _ Semaphore forMutualExclusion.	TeaHost initHostName.	CroquetGlobals theTeapotMorph: self.	CroquetGlobals snapshots: OrderedCollection new.	messageList _ SortedCollection sortBlock:[:m1 :m2 | m1 teaTime < m2 teaTime].	self registerTeaObject: nil.	self registerTeaObject: self.	people := OrderedCollection new.	myColor _ {2 atRandom-1. 2 atRandom-1. 2 atRandom-1. 1.0}asFloatArray.	self clipSubmorphs: true.	self scriptScheduler: ScriptScheduler new.	self scriptScheduler runActiveScripts. "to get started"	Current _ self.	self accelerationEnabled: true.	self		color: (Color				r: 0.7				g: 0.9				b: 1.0).	bounds _ 0 @ 0 corner: 640 @ 480.	"Temporary hostName""	TeaHost pushHostName: UUID new asString."	space _ TSpace new.	activeCamera _ TUserCamera new initializeWithViewPort: self.	activeCamera viewClip: false.	avatarPath := #('Content' 'Alice' 'Animals' 'AliceLiddell.mdl').	avatar _ TAvatar new.	avatar loadAvatar: avatarPath.	avatar translationX: 0 y: 0 z: 30.	space addChild: avatar.	activeCamera avatar: avatar.	logo _ TTexture				new initializeWithFileName: 'squeaklogo2.bmp'				mipmap: true				shrinkFit: false.	activeCamera texture: logo.	activeCamera translationX: 0 y: 0 z: 30.	"self openConnectionDialog."	self addZoomNavigator.	TeaHost popHostName.	TeaHost initHostName.	space _ TSpace new.	self makeLight: space."	self makeFloor: space fileName:'stone.BMP'."	avatar enter: space.	self setProperty: #openTeaFileOnDrop toValue: true.! !!TeapotMorph methodsFor: 'initialization' stamp: 'das 10/11/2004 15:12' prior: 33572964!initializeDefaultSpace	| space tframe waveDemo |"self initializeTweakWorld.""self makeJIVE."	space _ TSpace new.	space url: 'http://www.reed.com/TeaLand/spaces/intro.tea'.	activeCamera avatar enter: space."	space ambientSound: (self loadAmbientSound:'intro.mp3')."	self makeLight: space.	self world doOneCycleNow.	txtr _ TTexture				new initializeWithFileName: 'checker.bmp'				mipmap: true				shrinkFit: false.		self makeFloor: space fileName:'lawn.BMP'.	self world doOneCycleNow.	waveDemo _ self makeWaveDemo: space.	self makeWaveDemo: waveDemo at: -30@-1@-30 in: space.	self makeWaveDemo: waveDemo at: 30@-1@-30 in: space.	self makeWaveDemo: waveDemo at: 30@-1@30 in: space.	self makeWaveDemo: waveDemo at: -30@-1@30 in: space.	self world doOneCycleNow.	self makeKay: space.	self world doOneCycleNow.	self makeMirror: space. 	self world doOneCycleNow."	self makeMirror2: space."	self makePyramid: space.	self world doOneCycleNow.	"self makeUnderwater: space."	self makeUnderwater3: space.	self world doOneCycleNow.	self makePopUp: space.	self world doOneCycleNow.	self makeChess: space.	self world doOneCycleNow.	self makeProjectLink: space.	self world doOneCycleNow.	self makeFlash: space.	self world doOneCycleNow."	self makeStartupLink: space."	self world doOneCycleNow.	self makeGallery: space.	self world doOneCycleNow.	self makeDungeon: space.	self world doOneCycleNow.	self make3Body: space.	self world doOneCycleNow.	"self makeSolar: space."	self makeClock: space.	self world doOneCycleNow.	self makeSlime: space.	self world doOneCycleNow.	self makeMars: space.	self world doOneCycleNow."	self makeManual: space."	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	self world doOneCycleNow."	tframe _ TPortal3D initializeWithSpace: space.	win _ TWindow new.	win translationX: -12 y: 0.0 z: 5.0.	win contents3D: tframe.	space addChild: win."	^space! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 10/11/2004 15:11' prior: 32268895!initializeDefaultSpace	| space tframe |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space.	tframe := TSpinCube new.	space addChild: tframe."	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space."	self makeFlash: space.	"self makeStartupLink: space."	^space! !TeapotMorph removeSelector: #makePooh:!TeapotMorph removeSelector: #makePooh:!----End fileIn of a stream----!----QUIT----#(11 October 2004 4:00:04 pm) Jasmine1.0.image priorSource: 9904!----STARTUP----#(14 October 2004 2:56:10 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1.image!'From Squeak3.6beta of ''4 July 2003'' [latest update: #5373] on 27 July 2003 at 11:21:20 pm'!----End fileIn of a stream----!----STARTUP----#(16 October 2004 6:20:51 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #33] on 11 October 2004 at 6:20:43 pm'!!TSierpinski methodsFor: 'events' stamp: 'mpm 10/11/2004 18:18' prior: 52222721!keyDown: pointer	| c |	c _ pointer event2D keyCharacter.	c _ c asInteger - $0 asInteger.	(c >=0 and: [c<=9]) ifTrue:[self meta value: c.].! !!TSierpinski methodsFor: 'events' stamp: 'mpm 10/11/2004 18:18' prior: 52222927!keyStroke: pointer	| c |	c _ pointer event2D keyCharacter.	c _ c asInteger - $0 asInteger.	(c >=0 and: [c<=9]) ifTrue:[self meta value: c.].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #34] on 12 October 2004 at 7:03 am'!"Change Set:		PopupCacheDate:			12 October 2004Author:			David A. SmithThis preloads and caches the popup buttons."!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 10/12/2004 06:55' prior: 52023276!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe."	cameraButton rotationAroundY:180."	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera.	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.15.	ctrlFrame innerRadius: 0.075.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl.	camLoc addChild: TCrosshair new.	self makePopup.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/12/2004 06:57' prior: 52025754!killPopup	camLoc removeChild: popup.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/12/2004 07:01' prior: 52029612!makePopup	| tframe |	popup ifNotNil:[		(popup isChild: camLoc) ifTrue:[ self killPopup. popup _ nil. ^self.].		].	tframe _ TButtonHolder new.	tframe addChild: self makeEditBoxButton.	tframe addChild: self makeBoxButton.	tframe addChild: self makeXTerminalButton.	tframe addChild: self makePortalButton.	tframe addChild: self makePortal3DButton.	tframe addChild: self makeWireFilterButton.	tframe addChild: self makeExitButton.	tframe addChild: self makeCADButton.	popup _ TWindow new.	popup translationX: 0 y: 0.0 z: -6.0.	popup contents3D: tframe.	popup radius: 0.1.	popup fullBright: true.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/12/2004 07:00'!popup	(camLoc hasChild: popup) ifTrue:[ self killPopup] 	ifFalse:[		camLoc addChild: popup.		popup grabButton: true.].! !!TUserCamera methodsFor: 'popUp' stamp: 'das 10/12/2004 06:57' prior: 52533405!makePopup	"put the popup in an overlay that tracks the camera"	buttonsOverlay popup.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #34] on 12 October 2004 at 7:31:36 am'!"Change Set:		FixSnapshotsDate:			12 October 2004Author:			David A. SmithThis fixes the lack of alpha and z-buffering in the snapshot rendering."!!TSpace methodsFor: 'render' stamp: 'das 10/12/2004 07:29' prior: 52340787!clearRender: ogl camera: cam"	ogl glClearColor: self color red with: self color green with: self color blue with: 1.0.	ogl glClear: (GLColorBufferBit bitOr: (GLDepthBufferBit bitOr: GLStencilBufferBit))."	ogl glClear: ((GLDepthBufferBit bitOr: GLStencilBufferBit)).	ogl glEnable: GLLighting.	ogl glDepthFunc: GLLess.	ogl glEnable: GLDepthTest.	ogl camera initFrustum: ogl.	self doRender: ogl camera: cam."	Croquet world activeCamera killFrame: true. "	ogl camera initFrustum: ogl.	ogl glEnable: GLLighting.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #36] on 12 October 2004 at 7:57:32 am'!"Change Set:		DontGoThereDate:			12 October 2004Author:			David A. SmithThis prevents you from jumping to a window that you are carrying."!!TFrame methodsFor: 'hierarchy' stamp: 'das 10/12/2004 07:53'!hasAncestor: ancestor"Determines if ancestor is one of our parents, parents parents, etc..."	frameParent = ancestor ifTrue:[^ true].	frameParent ifNil:[^ false].	^ frameParent hasAncestor: ancestor.! !!TWindow methodsFor: 'actions' stamp: 'das 10/12/2004 07:56' prior: 52570515!gotoWindow: ptr	| front distance trans dx ac |	(self hasAncestor: ptr avatar) ifTrue:[^ self]. "don't go there"	(self root = ptr avatar root) ifFalse:[^self]. "don't go there either"	ac _ ptr camera.	dx _ self extent y.	dx _ dx/2.0.	distance _ dx/((ac viewAngle degreesToRadians/2.0) tan).	self extent x/self extent y > ac aspect ifTrue:[ distance _ distance/ac aspect.].	distance _ distance + windowFrame radius.	front _ B3DVector3 x: 0 y: 0 z: distance.	front _ self orientation localPointToGlobal: front.	front _ self translation + front.	trans _ self localTransform copy.	trans translation: front.	ptr avatar goto: trans count: 6.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #36] on 12 October 2004 at 8:06:10 am'!"Change Set:		UpDnArrowsDate:			12 October 2004Author:			David A. SmithFixes the up/down arrows and the mouse roller to move the avatar and not the camera."!!TUserCamera methodsFor: 'events' stamp: 'das 10/12/2004 08:04' prior: 52535943!keyStroke: anEvent	"first check to see if the pointer object wants the keyboard input.	Should change to have pointer tell us when it wants the keyboard, so we aren't broadcasting this request to all instances"	(pointer wantsKeyboard: anEvent)		ifTrue:[avatar selection: pointer selection keyStroke: anEvent. ^self].	anEvent keyValue = 1 ifTrue: [ self toggleAvatarPerson. ^self. ].	anEvent keyValue = 2 ifTrue: [ self halt. ^self. ].	anEvent keyValue = 18 ifTrue:[ self switchMirror. ^self.].	anEvent keyValue = 19 ifTrue:[		self root ambientSoundPlaying ifTrue:[			self root stopAmbientSound.] ifFalse:[			self root startAmbientSound].			^ self. ].	(anEvent keyValue = 3) ifTrue:[		"Need some sort of visual indication here...."		self isChatting 			ifTrue:[self endChat]			 ifFalse:[self startChat].		^ self.	].	anEvent keyValue = 30 ifTrue:[ avatar meta translation: avatar translation + (0@1@0). ^self. ].	anEvent keyValue = 31 ifTrue:[ avatar meta translation: avatar translation - (0@1@0). ^self.].	! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #36] on 12 October 2004 at 8:12:38 am'!"Change Set:		FixRearViewDate:			12 October 2004Author:			David A. SmithFix the rear view to render properly - same problem as the snapshots had."!!TOverlayRearView methodsFor: 'render' stamp: 'das 10/12/2004 08:10' prior: 52036729!renderOverlay: ogl	| ac trans |	ac _ ogl camera.	camera translation: ac globalPosition copy.	camera rotationAroundY:ac yaw+180.	camera initClipPlanes.	camera currentSpace: ac root.	trans _ camera localTransform.	trans a11: trans a11 negated.	trans a21: trans a21 negated.	trans a31: trans a31 negated.	ogl flipFace.		ac avatar root clearRender: ogl camera: camera.	ogl flipFace.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #39] on 12 October 2004 at 8:29:15 am'!"Change Set:		SpaceBrowserGoToDate:			12 October 2004Author:			David A. SmithFixes jumping to objects that are listed in the space browser."!!TSpaceBrowser methodsFor: 'menus' stamp: 'das 10/12/2004 08:27' prior: 52358063!goNearSelected	| selected tf pos |	selected := self selectedFrame ifNil:[^self].	selected == avatar ifTrue:[^self].		tf _ TFrame  new.	tf localTransform: avatar globalTransform.	tf lookAt: selected globalPosition up:nil.	pos _ avatar globalPosition - selected globalPosition.	pos _ pos normalized * 4.0.	tf translation:selected globalPosition + pos.	avatar goto: tf localTransform count: 6.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #40] on 12 October 2004 at 9:01:26 am'!"Change Set:		TweakRearViewDate:			12 October 2004Author:			David A. SmithMove the rearview mirror down slightly to make room for Tweak."!!TOverlayRearView methodsFor: 'initialize' stamp: 'das 10/12/2004 09:00' prior: 52037198!frustumChanged: cam	| bnds w h tl |	bnds _ cam bounds.	w _ bnds width/3.0.	h _ bnds height/6.0.	tl _ w@28.	bounds _ tl corner: (tl+(w@h)).	camera bounds: bounds.	camera viewAngle: 45. ! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #40] on 12 October 2004 at 10:50:03 am'!"Change Set:		FixStutterDate:			12 October 2004Author:			David A. SmithThis should fix a lot of the problem, though I think I know the reason we are having to deal with this is that it may be taking long enough to process the messages in the TeapotMorph>>#checkMessages routine that sometimes the TeaTime now had run out and we are actually processing new messages. Let's give it a try, anyway."!!TFrame methodsFor: 'hierarchy' stamp: 'das 10/12/2004 10:15' prior: 51739749!addChild: child	frameChildren ifNil:[frameChildren _ OrderedCollection new.]."If child singleParent is true, then we can not add this frame until we have removed it from a previous parent."	child singleParent ifTrue:[ 		child parent ifNotNil:[child parent removeChild: child].		self singleParent: true.].	"make sure child and all its subframes are informed of all viewers so they can be added to their tea parties"	frameChildren add: child.	child isComponent ifTrue: [ child wantsSteps ifTrue:[child startStepping]].	child parent: self.	child addLightFrames.	child addPortalFrames.	child addRayFrames.	myPlayer ifNotNil:[myPlayer signal: #structureChanged].! !!TFrame methodsFor: 'stepping' stamp: 'das 10/12/2004 09:59' prior: 51772551!doStep	"stop stepping when requested"	| tt |	stepsOn ifFalse: [ stepperActive _ false. ^self ].	tt _ TeaTime now.	self stepAt: tt.	lastStepTime _ tt.	self future: self stepTime perform: #doStep.! !!TFrame methodsFor: 'stepping' stamp: 'das 10/12/2004 10:01' prior: 51773840!wantsSteps	" This needs to be overridden by the component if we want an initial step. Steps can be started at any time simply by sending #startStepping and stopped by sending #stopStepping."	^ false.! !!TButton methodsFor: 'action' stamp: 'das 10/12/2004 09:35' prior: 51568813!enable	self color: TButton overColor.	switch ifNil:[ frame solidVisibleTree: true. ] ifNotNil:[		frame solidVisibleTree: switch not.		frame2 solidVisibleTree: switch.		].	animateTime _ nil.	self startStepping.! !!TButton methodsFor: 'stepping' stamp: 'das 10/12/2004 09:39' prior: 51574871!stepAt: msecs	"interpolate color"	| timeLeft |	persist ifFalse:[		animateTime ifNotNil: [			timeLeft _ animateTime - msecs.			timeLeft <= 0 ifTrue: [ 				self stopStepping.				animateTime _ nil. 				frame solidVisibleTree: false. 				frame2 ifNotNil:[frame2 solidVisibleTree: false. ].]			ifFalse: [ color at: 4 put: timeLeft asFloat / self fadeDelay.].			self color: color.].] ifTrue:[		].	spin ifTrue:[ doSpin ~= 0 ifTrue:[ 		doSpin _ doSpin + deltaSpin. 		doSpin < -360 ifTrue:[doSpin _ 0.].		self rotationAroundY: doSpin.].].! !!TButton methodsFor: 'stepping' stamp: 'das 10/12/2004 10:00' prior: 51575462!wantsSteps	^false. "we do not want an initial step"! !!TeapotMorph methodsFor: 'step' stamp: 'das 10/12/2004 10:45' prior: 52870478!checkMessages	| msg now |	mutex critical:[		now _ TeaTime now.		[messageList size > 0 ifTrue:[				msg _ messageList at:1. 				msg teaTime < now ifTrue:[					msg delayedSend. true.] ifFalse:[false]]ifFalse:[false]]		whileTrue:[ messageList removeFirst ].	].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #42] on 12 October 2004 at 1:02:12 pm'!"Change Set:		FixKayDate:			12 October 2004Author:			David A. SmithFixed file name case. Damn Linux... Thanks philipp."!!TeapotMorph methodsFor: 'toys' stamp: 'das 10/12/2004 13:01' prior: 33657923!makeKay: sp	| env pic win tframe |	pic _ TTexture				new initializeWithFileName: 'KAY.bmp'				mipmap: true				shrinkFit: false.	env _ TTexture				new initializeWithFileName: 'SkyBoxJULRT.bmp' 				mipmap: true				shrinkFit: false.	tframe _ TWaves initializeWithSize: 20@20.	tframe texture: pic.	tframe envTexture: env.	win _ TWindow new.	win translationX: 7 y: 0.0 z: -2.0.	win contents: tframe.	sp addChild: win."	pic _ TTexture				new initializeWithFileName: 'dpr.bmp'				mipmap: true				shrinkFit: false.	win _ TWindow new.	win translationX: -12 y: 0.0 z: -2.0.	win contents: pic.	sp addChild: win."! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 12 October 2004 at 6:05:14 pm'!"Change Set:		TeaCollectDate:			12 October 2004Author:			David A. SmithWhen a collection of objects is asked for it's teaName, it should respond with another collection of teaNames. And when a collection of teaNames is asked for it's teaObjects, it should respond with a collection of teaObjects...recursively."!!Collection methodsFor: '*Croquet' stamp: 'das 10/12/2004 17:58'!teaName	self class isPointers ifFalse:[^ self].	^ self collect:[:val | val teaName].! !!Collection methodsFor: '*Croquet' stamp: 'das 10/12/2004 17:57'!teaObject: map	self class isPointers ifFalse:[^ self].	^ self collect:[:val | val teaObject: map].! !!TPortal methodsFor: 'accessing' stamp: 'das 10/12/2004 15:15' prior: 52090592!testEnter: avatar	| delta m1 m2 trans saveFP ray |"testEnter: is used to determine if the camera moves through the plane of the portal.  DAS""Croquet world activeCamera isRemoteControl ifTrue:[^ false.]."blocked ifFalse:[ " The portal is open to enter (assuming the following is true...)"	self = toPortal ifFalse:[ " This is not a mirror"	toPortal = toPortal root ifFalse:[		ray _ TRay new.		ray globalTransform: avatar globalTransform.		ray currentFrame: self.		lastCameraPosition ifNotNil:[ " We have been here before"		lastCameraPosition z > 0 ifTrue: [ " We were somewhere in front of the portal"			delta _  (lastCameraPosition - ray framePosition).			ray framePosition z < 0 ifTrue:[				saveFP _ ray framePosition.				ray framePosition: lastCameraPosition.				(ray portalTest: self at: delta) ifTrue:[						m1 _ self globalTransform.						m2 _ toPortal globalMatrixOut.						trans _ m2 composeWith: m1 orthoNormInverse.						trans _ trans composeWith: avatar globalTransform.						avatar meta future: 0.0 perform: #goToPortal:transform: withArguments: { toPortal . trans }.						"orient _ trans clone.						orient translation: (B3DVector3 new).						v _ trans row3.						v x > 0 ifTrue:[rotY _ v z arcCos radiansToDegrees negated] ifFalse:							[rotY _ v z arcCos radiansToDegrees.].						ac yaw: rotY."						"Croquet world activeCamera killFrame: true."						lastCameraPosition _ nil.						"ac overlay: self."						^ true.				].			ray framePosition: saveFP.			].].].	lastCameraPosition _ ray framePosition.	].].].	^ false.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #33] on 12 October 2004 at 9:47:11 pm'!"Change Set:		ProjectHangDate:			12 October 2004Author:			Andreas RaabFix the lock-up when jumping between projects and having multiple top projects."!!Project methodsFor: 'active process' stamp: 'ar 10/12/2004 21:46' prior: 31564264!depth	"Return the depth of this project from the top.	 topProject = 0, next = 1, etc."	"Project current depth."	| depth project |	depth _ 0.	project _ self.		[project isTopProject]		whileFalse:			[project _ project parent.			depth _ depth + 1].	^ depth! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 8:37:13 am'!"Change Set:		FixSpreadsheetDate:			13 October 2004Author:			David A. SmithThis is actually a 3D component, so I need to add it via TWindow>>#content3D:. Also, I made the text two sided. Very pretty."!!TSpreadSheetTxtr methodsFor: 'as yet unclassified' stamp: 'das 10/13/2004 08:34'!renderAlpha: ogl	ogl glDisable: GLCullFace.	super renderAlpha: ogl.	ogl setCull! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/13/2004 08:28' prior: 52829898!makeSpreadSheet: sp	| teaWorld win tm |	tm _ TSpreadSheetTxtr new.	teaWorld _ TSpreadSheet new.	teaWorld eventsTo: tm.	win _ TWindow new.	win translation: (0@0.25@2).	win contents3D: tm.	sp addChild: win.! !TSpreadSheetTxtr removeSelector: #render:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 10:03:28 am'!"Change Set:		AvatarClipDate:			13 October 2004Author:			David A. SmithFixes the avatar clipping problem as well as the avatar is in the way problem."!!TAvatar methodsFor: 'accessing' stamp: 'das 10/13/2004 09:47'!setCamTrans: trans	camera localTransform: trans.! !!TAvatar methodsFor: 'accessing' stamp: 'das 10/13/2004 09:43' prior: 51504745!transparency: tr	transparency _ tr.	super transparency: tr.! !!TAvatar methodsFor: 'render' stamp: 'das 10/13/2004 09:46'!hasAlpha	" Does this object have an alpha channel to render? Return true if it does."	^ transparency < 1.0.! !!TAvatar methodsFor: 'render' stamp: 'das 10/13/2004 09:57' prior: 33576718!renderFrame: ogl parent: parent root: root	| ac rval tr |	ac _ ogl camera.	doRender ifTrue:["Render everyone else's avatars"		ac avatar = self ifFalse:[  ^ super renderFrame: ogl parent: parent root: root]."Only render ours if we are inside of a portal (such as a mirror) or the camera is behind the avatar"		ac inPortal ifTrue:[ "just render if we are in a portal"			transparency ~= 1.0 ifTrue:[self transparency: 1.0.].					^ super renderFrame: ogl parent: parent root: root. 		] ifFalse:[ "otherwise, check to see if we are thirdPerson or not"			ac thirdPerson ~= 0 ifTrue:[				tr _ (((self globalPosition- ac globalPosition) length-3.0)/3.0 min:1.0) max:0.0.				self transparency: tr.				carrying ifNotNil: [ self carryingDo: [:child | child transparency: 1.0.]. ].				rval _ super renderFrame: ogl parent: parent root: root.				^ rval.			] ifFalse: [				carrying ifNotNil: [ 					"self transparency: 0.0. " "hide the avatar"					"show what we are carrying"					self carryingDo: [:child | child transparency: 1.0.]. 					rval _ super renderFrame: ogl parent: parent root: root.					^ rval.				].			].		].	].	^ 0.! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51508820!selection: sel event2D: evt		self setCamTrans: sel cameraTransform.	pointer selection: sel.	^pointer event2D: evt.! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51509009!selection: sel keyDown: evt		self setCamTrans: sel cameraTransform.	pointer selection: sel.	^pointer keyDown: evt.! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51509198!selection: sel keyStroke: evt	self setCamTrans: sel cameraTransform.	pointer selection: sel.	^pointer keyStroke: evt.! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51509390!selection: sel keyUp: evt		self setCamTrans: sel cameraTransform.	pointer selection: sel.	^pointer keyUp: evt.! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51509574!selection: sel pointerDown: evt		self setCamTrans: sel cameraTransform.	pointer selection: sel.	^ pointer pointerDown: evt.! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51509771!selection: sel pointerEnter: evt	self setCamTrans: sel cameraTransform.	pointer selection: sel.	^ pointer pointerEnter: evt! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51509969!selection: sel pointerLeave: evt	self setCamTrans: sel cameraTransform.	pointer selection: sel.	^ pointer pointerLeave: evt! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:36' prior: 51510167!selection: sel pointerMove: evt		self setCamTrans: sel cameraTransform.	pointer selection: sel.	^pointer pointerMove: evt! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51510363!selection: sel pointerOver: evt	self setCamTrans: sel cameraTransform.	pointer selection: sel.	^ pointer pointerOver: evt! !!TAvatar methodsFor: 'events' stamp: 'das 10/13/2004 09:37' prior: 51510559!selection: sel pointerUp: evt	self setCamTrans: sel cameraTransform.	pointer selection: sel.	^ pointer pointerUp: evt! !!TeapotMorph methodsFor: 'initialization' stamp: 'das 10/13/2004 10:00' prior: 33667200!initialize	| logo space avatar |	super initialize.	mutex _ Semaphore forMutualExclusion.	TeaHost initHostName.	CroquetGlobals theTeapotMorph: self.	CroquetGlobals snapshots: OrderedCollection new.	messageList _ SortedCollection sortBlock:[:m1 :m2 | m1 teaTime < m2 teaTime].	self registerTeaObject: nil.	self registerTeaObject: self.	people := OrderedCollection new.	myColor _ {2 atRandom-1. 2 atRandom-1. 2 atRandom-1. 1.0}asFloatArray.	self clipSubmorphs: true.	self scriptScheduler: ScriptScheduler new.	self scriptScheduler runActiveScripts. "to get started"	Current _ self.	self accelerationEnabled: true.	self		color: (Color				r: 0.7				g: 0.9				b: 1.0).	bounds _ 0 @ 0 corner: 640 @ 480.	"Temporary hostName""	TeaHost pushHostName: UUID new asString."	space _ TSpace new.	activeCamera _ TUserCamera new initializeWithViewPort: self.	activeCamera viewClip: false.	avatarPath := #('Content' 'Alice' 'Animals' 'WhiteRabbit.mdl').	avatar _ TAvatar new.	avatar loadAvatar: avatarPath.	avatar translationX: 0 y: 0 z: 30.	space addChild: avatar.	activeCamera avatar: avatar.	logo _ TTexture				new initializeWithFileName: 'squeaklogo2.bmp'				mipmap: true				shrinkFit: false.	activeCamera texture: logo.	activeCamera translationX: 0 y: 0 z: 30.	"self openConnectionDialog."	self addZoomNavigator.	TeaHost popHostName.	TeaHost initHostName.	space _ TSpace new.	self makeLight: space."	self makeFloor: space fileName:'stone.BMP'."	avatar enter: space.	self setProperty: #openTeaFileOnDrop toValue: true.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 11:12:50 am'!"Change Set:		NonSolidAvatarDate:			13 October 2004Author:			David A. SmithThis is a simple hack to allow you to select objects through the avatar. If you are the local avatar, the message #isComponent returns false."!!TAvatar methodsFor: 'testing' stamp: 'das 10/13/2004 11:09' prior: 51507681!isComponent	^CroquetGlobals theTeapotMorph activeCamera avatar ~= self.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 11:22:41 am'!"Change Set:		SuburbanDate:			13 October 2004Author:			David A. SmithOops, left some old stuff hangin around that shouldn't be there."!!TeaTest methodsFor: 'initialization' stamp: 'das 10/13/2004 11:21' prior: 52747051!initializeDefaultSpace	| space light tframe win|	space _ TSpace new.	space url: 'http://www.reed.com/TeaLand/spaces/intro.tea'."Add a light to the world "	light _ TLight new.	tframe _ TSpinner new.	tframe translationX: -10 y:0.0 z: 0.0.	tframe rotationAroundZ: 120.	tframe matNil.	tframe contents: light.	space addChild: tframe." Create texture to add to the cube.""	txtr _ TTexture				initializeWithFileName: 'checker.bmp'				mipmap: true				shrinkFit: false."" Add a few fun objects. "	self makeFloor: space fileName:'stone.BMP'."	lastLink _ nil.	1 to: 20 do:[:i |		tcube _ TCube new.		tcube scale: (B3DVector3 x: 0.1 y: 0.1 z: 0.1).		tframe _ TLink initializeWithFrame: tcube.		tframe translationX: i/10.0 y: 0 z: 0.		tframe link: lastLink.		i = 1 ifTrue:[tframe mass: nil].		i = 20 ifTrue:[tframe mass: nil].		lastLink _ tframe.		space addChild: tframe.].""	self makeKay: space.	self makeMirror: space.	self makePyramid: space.	self makeClock: space.	self makeUnderwater2: space.	self makeSlime: space.""	self makeMars: space."	self makePopUp: space."	self makeDungeon7: space.""	space addChild: (TTree initializeWithDepth: 4).""	portal _ TPortal new.	win _ TWindow new.	win translationX: -20 y: 0.0 z: -2.0.	win contents: portal.	space addChild: win.	portal linkPortal: glx activeCamera."	tframe _ TParticle new initializeWithSize: 1000.	tframe translationX: 0 y: 0 z: -10.	space addChild: tframe.	^space! !TeapotMorph removeSelector: #makeGM:!TeapotMorph removeSelector: #makeGM:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 11:29:25 am'!"Change Set:		FixWavesDate:			13 October 2004Author:			David A. SmithFix for when you drag your pointer off of the object. This looks like it has been here since the beginning - amazing we never caught it before."!!TWaves methodsFor: 'events' stamp: 'das 10/13/2004 11:27' prior: 33647653!pointerMove: pointer	| loc dx dy index |" #pointerMove: determines which cell we have clicked inside of and after proper bounds checking, it adds a spring force to that cell and a few surrounding it. The #step routine then calculates the wave functions based upon this disturbance."	dx _ self extent x/2.	dy _ self extent y/2.	"(pointer frame: self pickQuad: (B3DVector3  x:0.0 y:0.0 z:1.0)		q1: (B3DVector3 x: location x + dx negated y: location y + dy z: location z)		q2: (B3DVector3 x: location x + dx negated y: location y + dy negated z: location z)		q3: (B3DVector3 x: location x + dx y: location y + dy negated z: location z)		q4: (B3DVector3 x: location x + dx y: location y + dy z: location z))"	(pointer frame: self pickPlane: selectedPoint normal: cameraNorm)	 ifTrue:[		loc _ pointer selectedPoint - location.		dx _ (0.5+(loc x/extent x) * size x) asInteger.		dx = size x ifTrue:[dx _ dx-1.].		dy _ (0.5+(loc y/extent y)* size y) asInteger.		dy = size y ifTrue:[dy _ dy -1].		index _ (dy*size x + dx).		self meta impulse: index.		].	! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 12:03:43 pm'!"Change Set:		FixCaptureDate:			13 October 2004Author:			David A. SmithFixes a problem that when you click on a rover or similar object, and forget to release, this will reset your avatar when you go through a TPortal."!!TAvatar methodsFor: 'transform' stamp: 'das 10/13/2004 11:59' prior: 51514712!goToPortal: aPortal transform: aTransform	| oldRoot aSpace |	oldRoot := self root.	aSpace := aPortal root.	self signal: #spaceLeave with: oldRoot.	oldRoot signal: #objectLeave with: self.	self parent removeChild: self.  "move out of space"	self localTransform: aTransform. "setup transform"	self yawTransform.	"self future: 0.0 perform: #addToNewSpace: withArguments: { aSpace }."	self addToNewSpace: aSpace.	"addChild: in the new space will force the necessary joins of the viewingParticipants"	self downPointer setAutomatic: true. "turn this back one when you move between spaces"! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #43] on 13 October 2004 at 12:15:58 pm'!"Change Set:		GoToPortalDate:			13 October 2004Author:			David A. SmithFurther fix of capture problem and avatars teleporting via snapshots. "!!TPortal methodsFor: 'accessing' stamp: 'das 10/13/2004 12:13' prior: 33686650!testEnter: avatar	| delta m1 m2 trans saveFP ray |"testEnter: is used to determine if the camera moves through the plane of the portal.  DAS""Croquet world activeCamera isRemoteControl ifTrue:[^ false.]."blocked ifFalse:[ " The portal is open to enter (assuming the following is true...)"	self = toPortal ifFalse:[ " This is not a mirror"	toPortal = toPortal root ifFalse:[		ray _ TRay new.		ray globalTransform: avatar globalTransform.		ray currentFrame: self.		lastCameraPosition ifNotNil:[ " We have been here before"		lastCameraPosition z > 0 ifTrue: [ " We were somewhere in front of the portal"			delta _  (lastCameraPosition - ray framePosition).			ray framePosition z < 0 ifTrue:[				saveFP _ ray framePosition.				ray framePosition: lastCameraPosition.				(ray portalTest: self at: delta) ifTrue:[						m1 _ self globalTransform.						m2 _ toPortal globalMatrixOut.						trans _ m2 composeWith: m1 orthoNormInverse.						trans _ trans composeWith: avatar globalTransform.						avatar meta future: 0.0 perform: #goToPortal:transform: withArguments: { toPortal . trans }.						lastCameraPosition _ nil.						^ true.				].			ray framePosition: saveFP.			].].].	lastCameraPosition _ ray framePosition.	].].].	^ false.! !!TUserCamera methodsFor: 'events' stamp: 'das 10/13/2004 12:11' prior: 52535575!gotoSpace: aSpace transform: aTransform	avatar meta future: 50.0 perform: #goToPortal:transform: withArguments: { aSpace . aTransform }.! !TUserCamera removeSelector: #goToSnapshot:!TUserCamera removeSelector: #goToSnapshot:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #52] on 13 October 2004 at 2:36:01 pm'!"Change Set:		WinMinSizeDate:			13 October 2004Author:			David A. SmithThis makes sure that the window can't be made smaller than 1.0x1.0."!!TWindow methodsFor: 'actions' stamp: 'das 10/13/2004 14:34' prior: 52572522!resizeWindow: pointer	| delta deltaLoc sz |	(pointer frame: windowFrame pickPlane: selectedPoint normal: windowFrame frontNorm) ifTrue:[		delta _ selectedPoint - pointer selectedPoint.		deltaLoc _ delta/2.0.		21 = eventNum ifTrue:[ delta y: delta y negated. ].		22 = eventNum ifTrue:[ delta x: delta x negated. delta y: delta y negated.].		23 = eventNum ifTrue:[ delta x: delta x negated. ].		" 24 = eventNum ifTrue:[ --- do nothing --- ]."		sz _ windowFrame extent asPoint.		sz _ (sz x + delta x) @ (sz y + delta y) max:1.0@1.0.		self meta extent: sz.		self meta translation: (self translation - (self orientation localPointToGlobal: deltaLoc)).		selectedPoint _ selectedPoint - (B3DVector3 x: deltaLoc x y: deltaLoc y z: 0.0).		tinyCube translation: selectedPoint.		^ true.].	^ false.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #52] on 13 October 2004 at 11:11:01 am'!"Change Set:		FixFileUrlDate:			13 October 2004Author:			Andreas RaabFixes the problem with web pages staying empty."!!FileUrl methodsFor: 'access' stamp: 'ar 10/13/2004 11:05'!firstPartIsDriveLetter	"Return true if the first part of the path is a letter	followed by a $: like 'C:' "		| firstPart |	path isEmpty ifTrue: [^false].	firstPart _ path first.	^firstPart size = 2 and: [		firstPart first isLetter			and: [firstPart last = $:]]! !!FileUrl methodsFor: 'access' stamp: 'ar 10/13/2004 11:05' prior: 24349094!pathForFile	"Path using local file system's delimiter.  $\ or $:"	| first |	^String streamContents: [ :s |		first _ self isAbsolute and: [self firstPartIsDriveLetter not].		self path do: [ :p |			first ifTrue: [ s nextPut: FileDirectory default pathNameDelimiter ].			first _ true.			s nextPutAll: p ] ]! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #52] on 13 October 2004 at 11:51:26 am'!"Change Set:		MakeBrowserDate:			13 October 2004Author:			Andreas RaabAs per David's request add a browser to the popup menu."!!TOverlayButtons methodsFor: 'popups' stamp: 'ar 10/13/2004 11:23'!makeBrowser: ptr	| win browser view tm teaWorld |	self killPopup.	browser := Browser new.	browser setClass: self class selector: #makeBrowser:. "or any other"	view := browser openEditString: nil.	view extent: 512@512.	tm _ TMorphic new initializeOpaque: true extent: 512@512.	teaWorld _ TMorphMonitor new initializeWithWorld: nil extent: 512@512.	teaWorld eventsTo: tm.	teaWorld world color: view color.	teaWorld world addMorphCentered: view.	win _ ptr avatar makeWindowInFront.	win contents: tm.! !!TOverlayButtons methodsFor: 'popups' stamp: 'ar 10/13/2004 11:21'!makeBrowserButton	| bttn |	bttn _ self makeBoxButton.	bttn persist: true.	bttn target: self action: #makeBrowser:.	bttn spin: true.	^ bttn.! !!TOverlayButtons methodsFor: 'popups' stamp: 'ar 10/13/2004 11:20' prior: 33674935!makePopup	| tframe |	popup ifNotNil:[		(popup isChild: camLoc) ifTrue:[ self killPopup. popup _ nil. ^self.].		].	tframe _ TButtonHolder new.	tframe addChild: self makeEditBoxButton.	tframe addChild: self makeBoxButton.	tframe addChild: self makeXTerminalButton.	tframe addChild: self makePortalButton.	tframe addChild: self makePortal3DButton.	tframe addChild: self makeWireFilterButton.	tframe addChild: self makeExitButton.	tframe addChild: self makeCADButton.	tframe addChild: self makeBrowserButton.	popup _ TWindow new.	popup translationX: 0 y: 0.0 z: -6.0.	popup contents3D: tframe.	popup radius: 0.1.	popup fullBright: true.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #52] on 13 October 2004 at 11:51 am'!"Change Set:		MakeFishMoveDate:			13 October 2004Author:			Andreas RaabFix the underwater fish."!!TDemoFish methodsFor: 'initialize' stamp: 'ar 10/13/2004 11:38' prior: 33556707!initialize	super initialize.	stepTime := 50.	speed := (1 to: 5) atRandom.	visible := false.! !!TDemoFish methodsFor: 'accessing' stamp: 'ar 10/13/2004 11:35'!speed	^speed! !!TDemoFish methodsFor: 'accessing' stamp: 'ar 10/13/2004 11:35'!speed: aSpeed	speed := aSpeed! !!TDemoFish methodsFor: 'accessing' stamp: 'ar 10/13/2004 11:34'!target	^target! !!TDemoFish methodsFor: 'accessing' stamp: 'ar 10/13/2004 11:35'!target: aTarget	target := aTarget! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/13/2004 11:48'!forward: delta	self transformBy: (B3DMatrix4x4 withOffset: 0@0@delta negated)! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/13/2004 11:43'!isComponent	^true! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/13/2004 11:29' prior: 33557002!step	| distanceBefore distanceAfter incSpeed |	target ifNil:[^self].	"Compute the incremental speed" 	incSpeed _ speed * stepTime / 1000.0.	"Compute the distance to the target"	distanceBefore _ self distanceTo: target.	"Now move..."	self forward: incSpeed.	"If we're far away then move faster"	distanceBefore > 50 ifTrue:[		self forward: 4*incSpeed.	].	distanceBefore > 25 ifTrue:[		self forward: 2*incSpeed.	].	"If we're relatively far away, then see if	we're running away from the target. If so,	turn around a little so that we get back on track."	distanceBefore > 5 ifTrue:[		distanceAfter _ self distanceTo: target.		distanceAfter > distanceBefore ifTrue:[			self turn: (-25 to: 25) atRandom.		].	].	self turn: (-5 to: 5) atRandom.! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/13/2004 11:30'!turn: angle	self rotateBy: angle around: (0@1@0)! !!TDemoFish methodsFor: 'stepping' stamp: 'ar 10/13/2004 11:38'!wantsSteps	^true! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/13/2004 11:33'!makeSomeFish: sp target: fishTarget	| mesh pic1 pic2 pic3 rnd fish tMesh mat frame atar |	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea'.	tMesh ifNil:[		mesh _ (FileStream readOnlyFileNamed:(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'fish.mesh'})) fileInObjectAndCode.		mesh reverseFaceDirection.		mesh transformBy: ((B3DRotation angle: 180 axis: 0@1@0) asMatrix4x4 composedWithLocal: (B3DMatrix4x4 withScale: (1@1@1))).		mat _ TMaterial new.		mat ambientColor: #(1 1 1 1) asFloatArray.		mat diffuseColor: #(1 1 1 1) asFloatArray.		tMesh := TMesh new initializeWithVertices: mesh vertices 			alias: nil 			norms: mesh vertexNormals			textureUV: mesh texCoords			faceGroups: {1. mesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary:'http://www.reed.com/TeaLand/spaces/theFish.tea'.	].	pic1 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	pic2 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'RockFish.jpg')) mipmap: true shrinkFit: false.	pic3 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'Seniorita.jpg')) mipmap: true shrinkFit: false.	rnd := Random seed: 123456.	{pic1. pic2. pic3} do:[:tex|		1 to: 4 do:[:i|			fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.			fish scale: 3.			fish solid: false.			fish objectName: 'fish'.			fish material texture: tex.			fish material textureMode: GLModulate.			frame := TDemoFish new.			frame target: fishTarget.			frame translationX: rnd next * 20 - 10 y: rnd next z: rnd next * 20 - 10.			frame addChild: fish.			sp addChild: frame.		].	].	atar := TAvatar new.	fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.	fish solid: false.	fish scale: 3.	fish objectName: 'fish'.	fish material texture: pic1.	fish material textureMode: GLModulate.	atar addChild: fish.	self startScript: #chooseAvatar:for: 		withArguments: {atar} 		when:{sp. #objectEnter}.! !!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/13/2004 11:33' prior: 33663970!makeUnderwater3: sp	| sp2 p1 p2 lt mat floorMesh win pic tMesh url cc |	mat _ TMaterial new.	p1 _ TPortal new.	p1 material: mat.	p2 _ TPortal new.	p2 material: mat.	lt _ TLight new.	"lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.5 0.5 0.5 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.0  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt rotationAroundZ: 220.	lt translationX: 0 y: 3 z: -15.	cc := Color r: 0.0 g: 0.45 b: 0.51.	"cc := Color r: 0.1 g: 0.3 b: 0.2."	sp2 _ TCausticSpace new.	"sp2 _ TSpace new."	sp2 url: 'http://www.reed.com/TeaLand/spaces/underwater.tea'."	sp2 ambientSound: (self loadAmbientSound: 'underwater.mp3')."	sp2 addChild: lt.	sp2 color: cc.	sp2 fogOn: true.	sp2 fogDensity: 0.025.	sp2 fogStart: 40.0.	sp2 fogEnd: 200.0.	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	tMesh ifNil:[		floorMesh _ (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'topo.mesh'})) fileInObjectAndCode.		floorMesh faces reverseDirection.		"floorMesh transformBy: (B3DMatrix4x4 withScale: (0.01@0.01@0.01))."		pic := TTexture new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'Waves1.jpg'}).		mat _ TMaterial new.		mat ambientColor: #(0.2 0.4 0.3 1) asFloatArray.		mat diffuseColor: #(0.2 0.4 0.3 1) asFloatArray.		mat texture: pic.		mat textureMode: GLModulate.		tMesh := TMesh new initializeWithVertices: floorMesh vertices 			alias: nil 			norms: floorMesh vertexNormals			textureUV: floorMesh texCoords			faceGroups: {1. floorMesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary: 'http://www.reed.com/TeaLand/spaces/theGroundShape.tea'.	].	self world doOneCycleNow.	tMesh solid: true.	tMesh translationX: 0 y: -76 z: 0.	tMesh material ambientColor: #(1 1 1 1) asFloatArray.	tMesh material diffuseColor: #(1 1 1 1) asFloatArray.	sp2 addChild: tMesh.	self makeSomeFish: sp2 target: lt.	self world doOneCycleNow.	#(		('tutorials/embedded/fishScript/fishScript.html' -10 1 -22 30)		('tutorials/embedded/fishPaint/fishPaint.html' 10 1 -22 -30)	) do:[:spec|		url := spec first. "look locally first"		url := FileDirectory pathFrom: {FileDirectory default pathName}, (spec first findTokens: '/').		(FileStream isAFileNamed: url) 			ifTrue:[url := FileDirectory default url, spec first] "local"			ifFalse:[url := 'http://www.reed.com/TeaLand/', spec first].		pic _ self makeWebPage: url extent: 512@256.		win _ TWindow new.		win translationX: spec second y: spec third z: spec fourth.		win rotationAroundY: spec fifth.		win contents: pic.		sp2 addChild: win.	].	win _ TWindow new.	win translationX: -5 y: 0.0 z: -2.0.	win contents: p1.	pic _ TTexture new initializeWithFileName: 'Raab.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	sp addChild: win.	win _ TWindow new.	win rotationAroundY: 180.	win translationX: 0.0 y:0.0 z: 3.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.! !TeapotMorph removeSelector: #makeSomeFish:!TeapotMorph removeSelector: #makeSomeFish:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #56] on 13 October 2004 at 4:39:53 pm'!"Change Set:		TeapotMorphFullScreen-dgdDate:			13 October 2004Author:			Diego Gomez DeckNew full-screen option in TeaMorph's menu.v2: added the option to came back from full screenv3: included a workaround to an error in unix vms where an image saved in full-screen is not presented in full-screen when opening"!!TeapotMorph methodsFor: 'menu' stamp: 'dgd 10/13/2004 18:51' prior: 33581524!addCustomMenuItems: aMenu hand: aHand	super addCustomMenuItems: aMenu hand: aHand.	aMenu add: 'Connect' action: #openConnectionDialog.	aMenu addUpdating: #showFrameRateString action: #toggleFrameRate.	aMenu addUpdating: #showTextureStatsString action: #toggleTextureStats.	aMenu addUpdating: #transmitStuffString action: #toggleTransmit.	aMenu add: 'start pda server' action: #startPDAServer.	aMenu add: 'make new space' action: #makeNewSpace.	aMenu add: 'toggle full screen' action: #toggleFullScreen.! !!TeapotMorph methodsFor: 'menu' stamp: 'dgd 10/13/2004 22:23'!toggleFullScreen	ScreenController lastScreenModeSelected		ifTrue:[			| priorBounds |			priorBounds := self								valueOfProperty: #priorBounds								ifAbsent:[0 @ 0 corner: 640 @ 480].			self bounds: priorBounds.			self removeProperty: #priorBounds.			ScreenController new fullScreenOff.			self world positionSubmorphs.		]		ifFalse:[				ScreenController new fullScreenOn.			self world positionSubmorphs.			self setProperty: #priorBounds toValue: self bounds.			self bounds: self world bounds.			self comeToFront.		].! !!TeapotMorph class methodsFor: 'system startup' stamp: 'dgd 10/13/2004 22:21'!startUp: resuming 	"the system is starting up, let hack something to workaround some errors"	resuming		ifFalse: [^ self].	Smalltalk platformName = 'unix' ifTrue: [		ScreenController lastScreenModeSelected			ifTrue: [ScreenController new fullScreenOn].	].! !!TeapotMorph class methodsFor: 'class initialization' stamp: 'dgd 10/13/2004 20:59'!initialize	Smalltalk addToStartUpList: self! !TeapotMorph initialize!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #33] on 13 October 2004 at 5:56:24 pm'!"Change Set:		FixFileUrlAgainDate:			13 October 2004Author:			Andreas RaabThis is what happens if you rely on other people's code - it ain't working ;-) Turns out the fix from Squeak3.7 (which I attempted to copy) is incorrect for Macs."!!FileDirectory methodsFor: '*Croquet' stamp: 'ar 10/13/2004 17:54'!pathFromUrl: aFileUrl	| first |	^String streamContents: [ :s |		first := false.		aFileUrl path do: [ :p |			first ifTrue: [ s nextPut: self pathNameDelimiter ].			first _ true.			s nextPutAll: p ] ].! !!FileUrl methodsFor: 'access' stamp: 'ar 10/13/2004 17:54' prior: 33704030!pathForFile	"Path using local file system's delimiter.  $\ or $:"	^FileDirectory default pathFromUrl: self! !!UnixFileDirectory methodsFor: '*Croquet' stamp: 'ar 10/13/2004 17:54'!pathFromUrl: aFileUrl	^'/', super pathFromUrl: aFileUrl! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #58] on 13 October 2004 at 11:04:01 pm'!"Change Set:		BgRenderDate:			13 October 2004Author:			Andreas RaabFix an issue with rendering the background of the opengl area."!!TeapotMorph methodsFor: 'drawing' stamp: 'ar 10/13/2004 23:01' prior: 52850482!renderOn: aRenderer	"(color isTransparent or:[color isTranslucent]) 		ifTrue:[aRenderer restoreMorphicBackground: self bounds under: self]."	aRenderer viewport: self bounds.	aRenderer isOpenGLRenderer		ifTrue:[self glRenderOn: aRenderer].	aRenderer isValid ifTrue:[		aRenderer restoreMorphicForeground: self bounds above: self.	].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #59] on 15 October 2004 at 6:39:17 am'!"Change Set:		FixKillButtonDate:			15 October 2004Author:			Mark P. McCahillHard to believe nobody noticed that closing portals with the Xis not being propagated to others in the scene "!!TWindow methodsFor: 'actions' stamp: 'mpm 10/15/2004 06:39' prior: 52571343!killWindow	self metaSend killWindow.	frameParent removeChild: self.	contents ifNotNil:[ 		contents isPortal ifTrue:[ 			contents kill.			contents _ nil.			].		].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #60] on 15 October 2004 at 7:12:16 am'!"Change Set:		FixOpenCloseBtnDate:			15 October 2004Author:			Mark P. McCahillNow opening/closing portals via the button on the Window frame propagates to everyone. Why am I just now noticing these bugs? "!!TWindow methodsFor: 'actions' stamp: 'mpm 10/15/2004 07:09' prior: 52569856!closeContents	contents ifNotNil:[		self metaSend closeContents.		contentsOn ifTrue:[			self removeChild: rectFront.			rectFront _ saveContents.			"contents visible: false."			contentsOn _ false.			self addChild: rectFront.			contents3D ifTrue:[self addChild: rectBack].			rectFront extent: windowFrame extent asPoint.			self extent: rectFront extent asPoint.			windowButtons openButton.			].		].! !!TWindow methodsFor: 'actions' stamp: 'mpm 10/15/2004 07:12' prior: 52571887!openContents	(self handlesEvent: #openContents) ifTrue:[		self signal: #openContents.	] ifFalse:[	contents ifNotNil:[		self metaSend openContents.		contentsOn ifFalse:[			self removeChild: rectFront.			contents3D ifTrue:[self removeChild: rectBack.].			contentsOn _ true.			rectFront _ contents.			"contents visible: true."			self addChild: rectFront.			rectFront extent: windowFrame extent asPoint.			self extent: rectFront extent asPoint.			windowButtons closeButton.			].		].	].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #59] on 14 October 2004 at 12:18:36 pm'!"Change Set:		fixIcons-bfDate:			14 October 2004Author:			Bert FreudenbergFix icons in TSpaceBrowser"TFrame initializeIcons!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #62] on 16 October 2004 at 1:55:53 am'!"Change Set:		GraphicsTestMac-bfDate:			14 October 2004Author:			Bert FreudenbergTGraphicsTest failed to find Squeak3D.log on a Mac. Filename fix backported from 3.7, and look for it in the root directory. Also, replace 'Tea' by 'Croquet'."!!MacFileDirectory methodsFor: 'file operations' stamp: 'bf 10/14/2004 00:14'!fullNameFor: fileName	"Return a corrected, fully-qualified name for the given file name. If the given name is already a full path (i.e., it contains a delimiter character), assume it is already a fully-qualified name. Otherwise, prefix it with the path to this directory. In either case, correct the local part of the file name."	"Details: Note that path relative to a directory, such as '../../foo' are disallowed by this algorithm.  Also note that this method is tolerent of a nil argument -- is simply returns nil in this case."	"Fix by hmm: for a file in the root directory of a volume on MacOS, the filePath (name of the directory) is not  recognizable as an absolute path anymore (it has no delimiters). Therefore, the original fileName is tested for absoluteness, and the filePath is only made absolute if the original fileName was not absolute"	| correctedLocalName prefix |	fileName isEmptyOrNil ifTrue: [^ fileName].	DirectoryClass splitName: fileName to:		[:filePath :localName |			correctedLocalName _ localName isEmpty 				ifFalse: [self checkName: localName fixErrors: true]				ifTrue: [localName].			prefix _ (DirectoryClass isAbsolute: fileName)						ifTrue: [filePath]						ifFalse: [self fullPathFor: filePath]].	prefix isEmpty		ifTrue: [^correctedLocalName].	prefix last = self pathNameDelimiter		ifTrue:[^ prefix, correctedLocalName]		ifFalse:[^ prefix, self slash, correctedLocalName]! !!TGraphicsTest methodsFor: 'testing' stamp: 'bf 10/13/2004 22:44' prior: 51800946!analyzeLog: log success: successFlag	"Analyze the log to see what's going on"	| index parts end accelerated hasDepth hasStencil stream nn |	index := 0.	parts := WriteStream on: Array new.	[index := log findString: '#### Checking pixel format' startingAt: index+1.	index = 0] whileFalse:[		end := log findString: '#### Checking pixel format' startingAt: index+10.		end = 0 ifTrue:[end := log size+1].		parts nextPut: (log copyFrom: index to: end-1).	].	hasDepth := hasStencil := accelerated := false.	parts := parts contents.	parts do:[:p|		stream := ReadStream on: p.		(p findString: '===>') = 0 ifFalse:[			accelerated := true.			index := p findString: 'stencilBits = '.			stream position: index + 12.			stream skipSeparators.			(nn := Number readFrom: stream) >= 8 ifTrue:[hasStencil := true].			index := p findString: 'depthBits = '.			stream position: index + 11.			(nn := Number readFrom: stream) >= 16 ifTrue:[hasDepth := true].		].	].	self cr; show: 'Here is the entire log: '.	self cr; cr; show: log.	self cr; cr; show: 'ANALYSIS:'.	accelerated 		ifTrue:[self cr; show: 'This hardware has accelerated OpenGL support (good news).']		ifFalse:[self cr; show: 'This hardware has NO accelerated OpenGL support whatsoever (bad news). If the hardware is indeed 3D capable, you will need to obtain OpenGL drivers from your vendor.'].	hasDepth		ifTrue:[self cr; show: 'This hardware has sufficient depth buffer support (good news).']		ifFalse:[self cr; show: 'This hardware has no sufficient depth buffer support (bad news). A depth buffer of at least 16 bit is required by Croquet.'].	hasStencil 		ifTrue:[self cr; show: 'This hardware has stencil buffer support (good news).']		ifFalse:[self cr; show: 'This hardware has NO stencil buffer support (bad news). Stencil buffer support is required by Croquet.'].	successFlag ifTrue:[		self cr; cr; show: 'SUMMARY: This system should be capable of running Croquet just fine.'	] ifFalse:[		self cr; cr; show: 'SUMMARY: This system will NOT run Croquet.'.		(accelerated and:[hasDepth and:[hasStencil]]) ifTrue:[			self show: ' Although the hardware supports all requirements individually it does not support the ''right'' combination.RECOMMENDATION: Please set your display depth to 32 bits and re-run this test. If this doesn''t help, please send the above log information to the mailing list.'		].	].	self cr; cr.! !!TGraphicsTest methodsFor: 'testing' stamp: 'bf 10/13/2004 23:59' prior: 51803928!runTests	| ogl file fileDir log success |	success := false.	self cr; nextPutAll: 'Croquet graphics tests starting...'; cr; flush.	B3DHardwareEngine primitiveSetVerboseLevel: 5.	ogl := self newOGL.	ogl ifNotNil:[success := true. ogl destroy].	"find the place where Squeak3D.log is located"	self cr; nextPutAll:'Looking for log file Squeak3D.log ... '.	file := [FileDirectory default readOnlyFileNamed: 'Squeak3D.log'] 			on: FileDoesNotExistException do:[:ex| ex return: nil].	file ifNil:[		file := [(FileDirectory on: Smalltalk vmPath) readOnlyFileNamed: 'Squeak3D.log']				on: FileDoesNotExistException do:[:ex| ex return: nil].	].	file ifNil:[		"Look in root volume on Mac"		Smalltalk platformName = 'Mac OS' ifTrue: [			FileDirectory root directories do: [:each | 				file ifNil: [					file _ [each readOnlyFileNamed: 'Squeak3D.log']						on: FileDoesNotExistException do:[:ex| ex return: nil]]]].	].	self show: (file ifNil:['failed'] ifNotNil:['success']).	file ifNil:[		self cr; cr; nextPutAll:'WARNING: The log file Squeak3D.log does neither appear in the current nor the VM directory. This is VERY uncommon and should be fixed.'.		self cr; cr; nextPutAll: 'RECOMMENDATION: Put all of the files you need to run Croquet (e.g., the virtual machine (Squeak.exe on Win32), the image (CroquetXYZ.image) and the changes (CroquetXYZ.changes) in the same directory. Then start Squeak by DRAGGING the image file (CroquetXYZ.image) ONTO the virtual machine (Squeak.exe) and retry this test.'.		^self.	].	self cr; show: 'Deleting old log file ... '.	fileDir := file directory.	file close.	fileDir deleteFileNamed: file localName.	self show: 'success'.	ogl := self newOGL.	ogl ifNotNil:[success := true. ogl destroy].	file := fileDir readOnlyFileNamed: file localName.	log := file contents.	file close.	self analyzeLog: log success: success.	B3DHardwareEngine primitiveSetVerboseLevel: 1.! !!TGraphicsTest methodsFor: 'initialize' stamp: 'bf 10/13/2004 22:43' prior: 51805998!open	| window |	window _ (SystemWindow labelled: 'Croquet Graphics Tester') model: self.	window addMorph: runButton frame: (0@0 corner: 1@0.1).	window addMorph: textPane frame: (0@0.1 corner: 1@1).	window openInWorld! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #63] on 16 October 2004 at 2:31:14 am'!"Change Set:		imageFormFix-bfDate:			16 October 2004Author:			Bert FreudenbergProvide imageForm even if we do not have OpenGL yet. Fixes bug #398"!!TeapotMorph methodsFor: 'accessing' stamp: 'bf 10/16/2004 02:30' prior: 52781872!imageForm	^ogl		ifNil: [super imageForm]		ifNotNil: [ogl screenShot]! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #64] on 16 October 2004 at 3:21:01 am'!"Change Set:		toggleHalo-bfDate:			16 October 2004Author:			Bert FreudenbergMake halo icon toggle halo instead of just enabling it"!!Morph methodsFor: '*Croquet' stamp: 'bf 10/16/2004 03:18' prior: 28480981!halo	(self world ifNil: [^nil]) haloMorphs do: [:h | 		(h target == self and: [h world notNil])			ifTrue: [^ h]].	^ nil! !!TOverlayButtons methodsFor: 'initialize' stamp: 'bf 10/16/2004 02:41' prior: 52022650!camera: camera	phone target: camera action: #startChat.	phone target2: camera action2: #endChat.	snapCamera target: camera action: #snapshot.	ctrl target: camera action: #toggleHalo.! !!TUserCamera methodsFor: 'events' stamp: 'bf 10/16/2004 03:18'!toggleHalo	| theTeapot |	theTeapot _ CroquetGlobals theTeapotMorph.	theTeapot halo notNil		ifTrue: [theTeapot removeHalo]		ifFalse: [theTeapot addHalo]! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #65] on 16 October 2004 at 3:57:24 am'!"Change Set:		zoomNav-bfDate:			16 October 2004Author:			Bert FreudenbergFix double rendering of ZoomNavigator on wide screen (bug #372)"!!TeaBackingMorph methodsFor: 'geometry' stamp: 'bf 10/16/2004 03:54'!extent: aPoint	| oldExtent |	oldExtent _ self extent.	super extent: aPoint.	oldExtent asLargerPowerOfTwo ~= self extent asLargerPowerOfTwo		ifTrue: [texture _ nil].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #61] on 16 October 2004 at 8:45:33 am'!"Change Set:		TapestryDate:			16 October 2004Author:			David A. SmithThis is the new, much simpler, flag code. It is made up of three interoperating classes - TTapestry, which is the main one, TMass, and TSpring, which are obvious."!TFrame subclass: #TFlag	instanceVariableNames: 'extent segments elements velocity normals gravity kSpring texture windPeriod windPhase elapsed tackTop tackBottom tackTopLoc tackBottomLoc boundSphere lastFrameNumber counter stepsLagging '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Flag'!Object subclass: #TMass	instanceVariableNames: 'location velocity mass force uv normal '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!!TMass commentStamp: 'das 10/15/2004 06:04' prior: 0!This class is part of the TTapestry suite of objects. A TMass includes information about the mass, location, and summed forces of a mass. It also computes the masses trajectory.The interesting method here is #compute.DAS!Object subclass: #TSpring	instanceVariableNames: 'mass1 mass2 rest '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!!TSpring commentStamp: 'das 10/15/2004 06:03' prior: 0!This class is part of the TTapestry suite of objects. A TSpring relates two masses with a spring. The original position of the masses set in #mass:mass: is considered to be the rest position.The interesting method here is #compute.DAS!TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs texture tuv normals boundSphere time wire xsize ysize '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!!TTapestry commentStamp: 'das 10/16/2004 08:39' prior: 0!TTapestry is a simpler version of the TFlag object. It is made up of three clases that are working together - this class is the main one, and sets up and uses the other two. These are:TMass, which includes information about the mass of the object and controls it's trajectories, and TSpring, which controls the spring relationship between two masses.The #compute method is where the real action happens.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe.DAS!!B3DVector3 methodsFor: 'vector functions' stamp: 'das 10/15/2004 07:16' prior: 17855870!normalized	| len |	len _  self length.	len = 0 ifTrue:[^0@0@0].	^self / self length! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 07:30'!addForce: f		force _ force + f.! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 07:26'!addForce: f norm: n		force _ force + f.	normal _ normal + (n normalized).! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 07:23'!addWindForce: f		force _ force + f*(f normalized dot: normal).! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 17:48'!addWindForce: f norm: n		force _ force + f*(n dot: normal).! !!TMass methodsFor: 'accessing' stamp: 'das 10/13/2004 22:28'!force: f	force _ f.! !!TMass methodsFor: 'accessing' stamp: 'das 10/14/2004 06:50'!location	^  location.! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 15:59'!location: loc	location _ loc.	velocity _ 0@0@0.	force _ 0@0@0.! !!TMass methodsFor: 'accessing' stamp: 'das 10/13/2004 22:28'!mass: m	mass _ m.! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 06:53'!normal	^ normal! !!TMass methodsFor: 'accessing' stamp: 'das 10/15/2004 06:53'!normal: n	normal _ n.! !!TMass methodsFor: 'accessing' stamp: 'das 10/14/2004 10:12'!uv	^ uv.! !!TMass methodsFor: 'accessing' stamp: 'das 10/14/2004 10:12'!uv: tuv	uv _ tuv.! !!TMass methodsFor: 'compute' stamp: 'das 10/15/2004 17:55'!compute	| accel t |	mass ~= 0.0 ifTrue:[		t _ 0.025.		accel _ force. " mass = 1.0"		velocity _ velocity + (0.90 *accel * t). "acceleration increases velocity"		velocity _ velocity * 0.999.  "damp velocity"		location _ location + (velocity * t). "change location"	].	force _  -0.01 @ -2.0 @ 0.01. "set force to the gravity"	normal normalize.! !!TSpring methodsFor: 'accessing' stamp: 'das 10/15/2004 17:33'!compute		| v n k |k _ -500.0.	v _ (mass1 location - mass2 location).	n _ v normalized * rest.	v _ (v-n)*k.	mass1 addForce: v.	mass2 addForce: v negated.! !!TSpring methodsFor: 'accessing' stamp: 'das 10/14/2004 18:39'!mass1	^ mass1.! !!TSpring methodsFor: 'accessing' stamp: 'das 10/14/2004 18:39'!mass2	^ mass2.! !!TSpring methodsFor: 'accessing' stamp: 'das 10/13/2004 22:34'!mass: m1 mass: m2	mass1 _ m1.	mass2 _ m2.	rest _ (m1 location - m2 location) length.! !!TTapestry methodsFor: 'render' stamp: 'das 10/15/2004 14:15'!render: ogl	| index m |	ogl glDisable: GLCullFace.	texture ifNotNil: [ texture enable: ogl.].	1 to: xsize-1 do:[:i |	wire ifFalse:[ ogl glBegin: GLTriangleStrip.] 		ifTrue:[ ogl glBegin: GLLineStrip.].		1 to: ysize do:[:j |			index _ (i-1*ysize)+j.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.			index _ index +ysize.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.		].		ogl glEnd.	].	wire ifTrue:[		1 to: xsize do:[:j |			ogl glBegin: GLLineStrip.			1 to: ysize do:[:i |				ogl glVertex3fv: (masses at:(j-1*ysize)+i) location.].			ogl glEnd.		].	].	texture ifNotNil:[texture disable: ogl.]."This is to render the springs to see if these make any sense...they do now.	springs do:[:s |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: s mass1 location+(0@2@0.3).		ogl glVertex3fv: s mass2 location+(0@2@0.3).		ogl glEnd.		].""	masses do:[:ms |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: ms location.		ogl glVertex3fv: ms location - ms normal.		ogl glEnd.		]."	ogl setCull! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/16/2004 08:39'!initialize	| tb |	super initialize.	time _ 0.0.	self reset.	self compute.	tb _ TBox new.	masses do:[:m | tb growVertex: m location].	boundSphere _ TBoundSphere localPosition: tb center radius: tb radius.	boundSphere frame: self.	wire _ false.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/15/2004 17:35'!reset	| m s scl |	masses _ OrderedCollection new.	springs _ OrderedCollection new.	tuv _ OrderedCollection new.	xsize _ 15.	ysize _ 10.	scl _ 0.5.	1 to: xsize do:[:i |		1 to: ysize do:[:j |			m _ TMass new.			m force: 0@0@0.			m location: scl*((i-1)@(j-1)@0).			m mass: 1.0.			m uv: ((m location x/(xsize-1))@(1-(m location y/(ysize-1))))/scl.			m normal: (0@0@1).			masses add: m.		].	].	1 to: xsize do:[:i |		1 to: ysize do:[:j |			j~=ysize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i-1*ysize+j+1).				springs add: s.				].			i~=xsize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i*ysize+j).				springs add: s.				].			(i ~= xsize and:[j~=ysize])ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j+1) mass: (masses at:i*ysize+j).				springs add: s.					].		"	s _ TSpring new.			s mass: (masses at:i-1*xsize+j+1) mass: (masses at:i*xsize+j).			springs add: s."		]	]."set the tack points"	(masses at: 1) mass:0.0.	(masses at: ysize) mass:0.0.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/16/2004 08:07'!texture	^ texture.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/16/2004 08:07'!texture: txtr	texture _ txtr.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/16/2004 08:07'!wire: w	wire _ w.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/15/2004 17:49'!addWind	| windPeriod windPhase windForce twoPi index mn windDirection |"first compute the norms at the masses"		1 to: xsize - 1 do:[:i |		1 to: ysize - 1 do:[ :j |			index _ i-1*ysize+j.			mn _ masses at: index.			mn normal: 				(((masses at: index +1 ) location - mn location) cross: 				((masses at: index + ysize)location - mn location))normalized.			].			index _ i*ysize.			mn _ masses at: index.			mn normal: 				((mn location - (masses at: index - 1 ) location) cross: 				((masses at: index + ysize)location - mn location))normalized.		].	masses size - xsize to: masses size do:[ :in | 		(masses at: in) normal: (masses at: in - ysize)normal].	windPeriod _ 15.0.	windPhase _ 0.9.	twoPi _ 2 * Float pi.	windForce _ (B3DVector3 x: 0.5 * (( time * twoPi/(windPeriod * windPhase)) cos) 		y: 0.5 * ((time * twoPi/windPeriod) sin)		z: -4.0).	windDirection _ windForce normalized.	time _ time + 0.04.	masses do:[ :m | m addForce: windForce norm: windDirection. ].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/14/2004 08:05'!boundSphere	^ boundSphere.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/15/2004 17:26'!compute	true ifTrue:[ self addWind.].		true ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 08:15'!testCompute	true ifTrue:[ self addWind.].		true ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	! !!TTapestry methodsFor: 'events' stamp: 'das 10/14/2004 14:52'!handlesKeyboard:ptr	^ true! !!TTapestry methodsFor: 'events' stamp: 'das 10/14/2004 08:00'!handlesPointerDown: pointer	^ true.! !!TTapestry methodsFor: 'events' stamp: 'das 10/14/2004 08:37'!isComponent 	^ true.! !!TTapestry methodsFor: 'events' stamp: 'das 10/14/2004 14:56'!keyDown: pointer	| c |	c _ pointer event2D keyCharacter.	c = $w ifTrue:[		self meta wire: wire not.		].	c = $r ifTrue:[		self meta reset.		].! !!TTapestry methodsFor: 'events' stamp: 'das 10/14/2004 08:37'!pick: ptr	^ true.! !!TTapestry methodsFor: 'events' stamp: 'das 10/14/2004 08:01'!pointerDown: pointer	self reset.! !----End fileIn of a stream----!----SNAPSHOT----#(16 October 2004 6:21:46 am) Croquet0.1-67.image priorSource: 117141!----STARTUP----#(16 October 2004 8:37:26 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-67.image!!SampleTeapotMorph methodsFor: 'initialize' stamp: 'ack 10/16/2004 08:41' prior: 33670903!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space.	tframe := TSpinCube new.	space addChild: tframe."	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space."	self makeFlash: space.	"self makeStartupLink: space."	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe.        texture := TTexture                                new initializeWithFileName: 'flag.bmp'                                mipmap: true                                shrinkFit: false.	^space! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'ack 10/16/2004 08:42' prior: 33738833!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space.	tframe := TSpinCube new.	space addChild: tframe."	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space."	self makeFlash: space.	"self makeStartupLink: space."       texture := TTexture                                new initializeWithFileName: 'flag.bmp'                                mipmap: true                                shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe.	^space! !----SNAPSHOT----#(16 October 2004 8:43:01 am) Croquet0.1-67-FlagTest.image priorSource: 184098!!SampleTeapotMorph methodsFor: 'initialize' stamp: 'ack 10/16/2004 08:44' prior: 33739791!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space.	tframe := TSpinCube new.	space addChild: tframe."	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space."	self makeFlash: space.	"self makeStartupLink: space."       texture := TTexture                                new initializeWithFileName: 'flag.bmp'                                mipmap: true                                shrinkFit: false.	tframe := TTapestry new.	"tframe texture: texture."	tframe translation:-5@1@5.	space addChild: tframe.	^space! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'ack 10/16/2004 08:46' prior: 33740844!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space.	tframe := TSpinCube new.	space addChild: tframe."	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space."	self makeFlash: space.	"self makeStartupLink: space."       texture := TTexture                                new initializeWithFileName: 'flag.bmp'                                mipmap: true                                shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe.	^space! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:47' prior: 33737433!compute	false ifTrue:[ self addWind.].		true ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:48' prior: 33742747!compute	false ifTrue:[ self addWind.].		false ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'render' stamp: 'ack 10/16/2004 08:50' prior: 33733278!render: ogl	| index m |wire := false.	ogl glDisable: GLCullFace.	texture ifNotNil: [ texture enable: ogl.].	1 to: xsize-1 do:[:i |	wire ifFalse:[ ogl glBegin: GLTriangleStrip.] 		ifTrue:[ ogl glBegin: GLLineStrip.].		1 to: ysize do:[:j |			index _ (i-1*ysize)+j.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.			index _ index +ysize.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.		].		ogl glEnd.	].	wire ifTrue:[		1 to: xsize do:[:j |			ogl glBegin: GLLineStrip.			1 to: ysize do:[:i |				ogl glVertex3fv: (masses at:(j-1*ysize)+i) location.].			ogl glEnd.		].	].	texture ifNotNil:[texture disable: ogl.]."This is to render the springs to see if these make any sense...they do now.	springs do:[:s |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: s mass1 location+(0@2@0.3).		ogl glVertex3fv: s mass2 location+(0@2@0.3).		ogl glEnd.		].""	masses do:[:ms |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: ms location.		ogl glVertex3fv: ms location - ms normal.		ogl glEnd.		]."	ogl setCull! !!TTapestry methodsFor: 'render' stamp: 'ack 10/16/2004 08:50' prior: 33743247!render: ogl	| index m |wire := true.	ogl glDisable: GLCullFace.	texture ifNotNil: [ texture enable: ogl.].	1 to: xsize-1 do:[:i |	wire ifFalse:[ ogl glBegin: GLTriangleStrip.] 		ifTrue:[ ogl glBegin: GLLineStrip.].		1 to: ysize do:[:j |			index _ (i-1*ysize)+j.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.			index _ index +ysize.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.		].		ogl glEnd.	].	wire ifTrue:[		1 to: xsize do:[:j |			ogl glBegin: GLLineStrip.			1 to: ysize do:[:i |				ogl glVertex3fv: (masses at:(j-1*ysize)+i) location.].			ogl glEnd.		].	].	texture ifNotNil:[texture disable: ogl.]."This is to render the springs to see if these make any sense...they do now.	springs do:[:s |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: s mass1 location+(0@2@0.3).		ogl glVertex3fv: s mass2 location+(0@2@0.3).		ogl glEnd.		].""	masses do:[:ms |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: ms location.		ogl glVertex3fv: ms location - ms normal.		ogl glEnd.		]."	ogl setCull! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:51' prior: 33742997!compute	false ifTrue:[ self addWind.].		true ifTrue:[		springs do:[ :s | s compute. ].		"masses do:[ :m | m compute. ]."		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:51' prior: 33745797!compute	false ifTrue:[ self addWind.].		true ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:51' prior: 33746049!compute	false ifTrue:[ self addWind.].		false ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:52' prior: 33746299!compute	true ifTrue:[ self addWind.].		false ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 08:52' prior: 33746551!compute	true ifTrue:[ self addWind.].		true ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].	self future: 20 perform: #compute.! !----STARTUP----#(16 October 2004 4:10:12 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-67-FlagTest.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #66] on 16 October 2004 at 2:50:49 pm'!"Change Set:		zoomWindowFixDate:			16 October 2004Author:			Takashi YamamiyaZooming window (drag bottom of the window) doesn't work on other peer in network."!!TWindow methodsFor: 'actions' stamp: 'tak 10/16/2004 14:45' prior: 52575227!zoomWindow: pointer 	"This allows you to pull a window towards you."	| delta p0 i0 i1 t p newTranslation plainNormal |	(pointer frame: self pickPlane: selectedPoint normal: cameraNorm)		ifTrue: [			"assumed just horizontal"			plainNormal _ 0 @ 1 @ 0.			"plainNormal _ pointer camera localToGlobal: (0@1@0)."			p0 _ self localToGlobal: selectedPoint.			i0 _ pointer globalPosition.			i1 _ pointer globalTransform localPointToGlobal: 0 @ 0 @ 1.			[t _ (p0 - i0 dot: plainNormal) / (i1 - i0 dot: plainNormal)]				on: ZeroDivide do: [^ false].			p _ i0 + (t abs negated * (i1 - i0)).			delta _ p - p0.			newTranslation _ self translation + delta.			(pointer globalToLocal: newTranslation) z < pointer camera zScreen negated				ifTrue: ["self moveWindow: pointer."					^ true].			self meta translation: newTranslation.			^ true].	^ false! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #67] on 16 October 2004 at 1:12:08 pm'!"Change Set:		galleryflickerDate:			16 October 2004Author:			David A. SmithFixes the flicker in the gallery space. This was caused by directly adding a scale factor to the meshes. This does not work in Croquet, as other associated objects, such as the boundSpheres, are not properly scaled as well."!!TeapotMorph methodsFor: 'toys' stamp: 'das 10/16/2004 13:07' prior: 52805895!makeGallery: sp	| meshes rootObj mat p1 p2 lt sp2 win stone texDict tex pic |	stone _ TTexture new initializeWithFileName: 'stone.BMP'				mipmap: true				shrinkFit: false.	mat _ TMaterial new.	p1 _ TPortal new.	"p1 rotationAroundY: 180."	p1 material: mat.	p2 _ TPortal new.	p2 rotationAroundY: 180.	"p2 translationX: 0.0 y: 0.0 z: 30.0."	p2 material: mat.	lt _ TLight new."	lt materialAlpha: (TMaterial new)."	lt ambientColor: #(0.7 0.7 0.7 1.0) asFloatArray.	lt diffuseColor: #(1.0  1.0  1.0  1.0) asFloatArray.	lt specularColor: #(0.0 0.0 0.0 1.0) asFloatArray.	lt rotationAroundZ: 120.	sp2 _ TSpace new.	sp2 url: 'http://www.reed.com/TeaLand/spaces/gallery.tea'."	sp2 ambientSound: (self loadAmbientSound: 'gallery.mp3')."	sp2 addChild: lt.	sp2 color:  (Color r: 0.613 g: 0.839 b: 1.0).	stone rotationAroundX: -90.	stone translationX: 0 y: -4.0 z: 0.0.	stone uvScale: 32.0@32.0.	stone extent: 180.0@180.0.	sp2 addChild: stone.		win _ TWindow new.	win rotationAroundY: 180.	win translationX: -20 y: 0.0 z: 30.0.	win contents: p1.	pic _ TTexture				new initializeWithFileName: 'GrnChplTwr.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	sp addChild: win.	win closeContents.	win _ TWindow new.	win rotationAroundY: 180.	win translationX: 0 y: 0.0 z: -80.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.	rootObj _ self loadURL: 'http://www.reed.com/TeaLand/spaces/theGallery.tea'.	rootObj ifNil:[		texDict := Dictionary new.		#('Wall4Texture512x256.bmp' 'Col1Texture128x512.bmp') do:[:fn|			tex := TTexture new initializeWithFileName: fn mipmap: true shrinkFit: true.			texDict at: fn put: tex].		meshes := (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'gallery3.mesh'})) fileInObjectAndCode.		rootObj := self makeGallery: sp from: meshes using: texDict.		rootObj scale: 2.0."		rootObj localTransform: (B3DMatrix4x4 withScale: 2@2@2)."		rootObj translationX: 0 y: -4 z: 0.		TExporter export: rootObj asBinary:'http://www.reed.com/TeaLand/spaces/theGallery.tea'.	].	sp2 addChild: rootObj.	self makeMoving: sp2 to: sp.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #67] on 16 October 2004 at 1:34:57 pm'!"Change Set:		NilPortalDate:			16 October 2004Author:			David A. SmithIf the far side portal is closed, you didn't see anything to indicate that a portal would be there. Now you see a mirror. I may add more here at some point, but for now this is a fix."!!TPortal methodsFor: 'render' stamp: 'das 10/16/2004 13:32' prior: 33640996!render: ogl depth: depth	| trans m2 toSpace gt containerPortal portalClip color clipPlanes renderedObjects ac saveSelected saveDoSelect saveMinDistance portalDistance saveForceWire top |" This method is the recursive portal renderer. enter refers to the renderer entering the portal. If you want the camera entering check out TPortal>>testEnter: ac."	renderedObjects _ 1. "We are also rendering the portal."" ------- We keep track of which portal we are currently working in to avoid a tight recursion error,where the portal re-enters itself to render. It is (somewhat) OK to re-enter from another portal. This is equivalent to a mirror in a mirror situation. Here we need to keep a count of the re-entries.------"	toSpace _ toPortal root.	toSpace = toPortal ifTrue:[ top _ self. toSpace _ self root. ] "The portal is not installed on the other side!!"		ifFalse:[top _ toPortal].	containerPortal _ ogl currentPortal.	ogl currentPortal: self." ------ For rendering the portal ONLY - we turn off depth testing. We just want to write into the stencil buffer here and set the color of the toSpace. Depth testing is turned back on before we recurse into the connected portal.------"	gt _ self globalTransform. 	depth = 1 ifTrue:[ogl glEnable: GLStencilTest.].	ogl glPushMatrix. 	ogl glMultMatrixf: gt transposed.	ogl glDisable: GLDepthTest. " ------ Paint the portal with the color of the TSpace ------ "	ogl glDisable: GLLighting.	color _ B3DVector3 x: toSpace color red y: toSpace color green z: toSpace color blue.	ogl glColor3fv: color.	ogl glStencilFunc:GLEqual with:depth-1 with: -1.	ogl glStencilOp:GLKeep with:GLKeep with:GLIncr." ------ Render the stencil here. ------ "	saveForceWire _ ogl forceWire.	ogl forceWire:false.	self renderPortal: ogl.	ogl forceWire: saveForceWire.	ogl glStencilFunc: GLEqual with: depth with: -1.	ogl glStencilOp: GLKeep with: GLKeep with: GLKeep.	ogl glEnable: GLDepthTest.	ogl glEnable: GLLighting.	ogl glPopMatrix.	ogl glPushMatrix."	m1 _ self globalTransform."	top isPortal ifTrue:[m2 _ top globalMatrixOut.] ifFalse:[m2 _ top globalTransform.]." ------- For simplicity - and because I can't think of a good reason not to do this - if a portal points back to itself, it is considered to be a mirror. Note that we flip the directions of the polyon tests as well. This is restored at the end. We are inverting the x-coordinate of the matrix here. ------" 	self = top ifTrue:[		m2 a11: m2 a11 negated.		m2 a21: m2 a21 negated.		m2 a31: m2 a31 negated.		ogl flipFace.].	ac _ ogl camera.	ac pointer ifNotNil:[		saveSelected _ ac pointer copiedSelection.		saveMinDistance _ ac pointer minDistance.		saveDoSelect _ ac pointer doSelect.		(ac pointer pointerPick: self boundSphere) ifTrue:[				portalDistance _ ac pointer selectedDistance.				ac pointer minDistance: portalDistance.			] ifFalse:[ 				portalDistance _ Float infinity.				ac pointer doSelect: false.			].		ac pointer selected: saveSelected.	].	portalClip _ac portalClip.	ac portalClip: m2." ------ This math is simply: 			m1 = trans*m2			m1 * m2**-1 = trans * m2 * m2**-1			m1 * m2**-1 = trans.  We then replace the transform matrix of the TCamera with the appropriate transform, which places the TCamera into the correct position in the new space.------"	clipPlanes _ ac clipPlanes.	ac clipPlanes: (self initClipPlanes: ac globalTransform mirror: ogl isMirror).self = top ifTrue:[ ogl mirrorFlip.].	trans _ m2 composeWith: gt orthoNormInverse.	ac globalTransform:		(trans composeWith: ac globalTransform).	ac pointer ifNotNil:[		ac pointer globalTransform: 			(ac globalTransform composeWith: ac pointer localTransform).		].	renderedObjects _ renderedObjects + (toSpace renderSpace: ogl port: top depth: depth+1). "<------ Render TSpace here!! -------"	ac clipPlanes: clipPlanes.	self = top ifTrue:[ogl flipFace. ogl mirrorFlip.].	ogl glPopMatrix." ------ Just in case we jumped into a portal, restore the stencil depth ------"	ogl glStencilFunc: GLLequal with: depth-1 with: -1.	ogl glStencilOp: GLKeep with: GLKeep with: GLKeep."------ Render the front face invisibly to set the z-buffer to ensure nothing bleeds into the portal space from our space. ------"				ogl glPushMatrix.	ogl glPolygonOffset: 2.1 with: 4.0.	ogl glEnable: GLPolygonOffsetFill.	ogl glColorMask: GLFalse with: GLFalse with: GLFalse with: GLFalse.	ogl glMultMatrixf: gt transposed.	ogl forceWire: false.	self renderPortal: ogl.	ogl forceWire: saveForceWire.	ogl glColorMask:GLTrue with: GLTrue with:GLTrue with:GLTrue.	ogl glDisable: GLPolygonOffsetFill.	ogl glPopMatrix.	depth = 1 ifTrue:[ogl glDisable: GLStencilTest.].	ogl currentPortal: containerPortal.	ac portalClip: portalClip.	ac pointer ifNotNil:[		ac pointer doSelect: saveDoSelect.		ac pointer minDistance: saveMinDistance.		ac pointer maxDistance: (ac pointer maxDistance min: portalDistance).		].	^ renderedObjects.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #69] on 16 October 2004 at 12:55:55 pm'!"Change Set:		FixMultiUserGotoDate:			16 October 2004Author:			Mark P. McCahillPropagate TAvtar goto events to everyone in the scene. "!!TAvatar methodsFor: 'transform' stamp: 'mpm 10/16/2004 12:55' prior: 51515289!goto: transform count: count	" This is used to force the camera to move to a position/orientation. The final location is gotoTransform, and the number of interpolations is in gotoCount."	self metaSend goto: transform count: count.	sticky _ true.	snapTrans _ self localTransform.	gotoTransform _ transform.	gotoCount _ count.! !!TWindow methodsFor: 'actions' stamp: 'mpm 10/16/2004 12:55' prior: 33677415!gotoWindow: ptr	| front distance trans dx ac |	(self hasAncestor: ptr avatar) ifTrue:[^ self]. "don't go there"	(self root = ptr avatar root) ifFalse:[^self]. "don't go there either"	ac _ ptr camera.	dx _ self extent y.	dx _ dx/2.0.	distance _ dx/((ac viewAngle degreesToRadians/2.0) tan).	self extent x/self extent y > ac aspect ifTrue:[ distance _ distance/ac aspect.].	distance _ distance + windowFrame radius.	front _ B3DVector3 x: 0 y: 0 z: distance.	front _ self orientation localPointToGlobal: front.	front _ self translation + front.	trans _ self localTransform copy.	trans translation: front.	ptr avatar goto: trans count: 4. ! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #71] on 16 October 2004 at 3:19:19 pm'!"Change Set:		Tapestry2Date:			16 October 2004Author:			David A. SmithClean up the code a bit, make more vars available from the TTapestry>>#compute method, hang the flag horizontally."!!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 10/16/2004 14:08' prior: 33739791!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space."	texture _ TTexture				new initializeWithFileName: 'flag.bmp'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe."	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	"self makeStartupLink: space."	^space! !!TBoundSphere methodsFor: 'render' stamp: 'das 10/16/2004 15:06' prior: 51551829!render: ogl box: frm	children ifNotNil:[		vertices ifNil: [ children do:[ :c | c render: ogl box: frm].].].	self box ifNotNil:[frm render: ogl box: self box].! !!TFrame methodsFor: 'render' stamp: 'das 10/16/2004 15:08' prior: 51785224!render: ogl cube: cube location: loc scale: scale	| dx dy dz x y z e |" This message is used only to make sure a frame is actually drawing something. In this case, I draw a cube. "	e _ cube extent.	dx _ e x*scale/2.0.	dy _ e y*scale/2.0.	dz _ e z*scale/2.0.	x _ loc x.	y _ loc y.	z _ loc z.	ogl glBegin: GLQuads;			glNormal3f: 0.0 with: 0.0 with: 1.0;			glTexCoord2f:0.0 with:1.0;	glVertex3f: x+(dx negated) with: y+(dy negated) with: z+dz;			glTexCoord2f:1.0 with:1.0;	glVertex3f: x+dx with: y+(dy negated) with: z+dz;			glTexCoord2f:1.0 with:0.0;	glVertex3f: x+dx with: y+dy with: z+dz;			glTexCoord2f:0.0 with: 0.0;	glVertex3f: x+(dx negated) with: y+dy with: z+dz.		dz _ dz negated.		ogl glNormal3f: 0.0 with: 0.0 with: -1.0;			glTexCoord2f:1.0 with: 0.0;	glVertex3f: x+(dx negated) with: y+dy with: z+dz;			glTexCoord2f:0.0 with:0.0;	glVertex3f: x+dx with: y+dy with: z+dz;			glTexCoord2f:0.0 with:1.0;	glVertex3f: x+dx with: y+(dy negated) with: z+dz;			glTexCoord2f:1.0 with:1.0;	glVertex3f: x+(dx negated) with: y+(dy negated) with: z+dz.		dz _ dz negated.		ogl glNormal3f: 1.0 with: 0.0 with: 0.0;			glTexCoord2f:0.0 with:1.0;	glVertex3f: x+dx with: y+(dy negated) with: z+dz;			glTexCoord2f:1.0 with:1.0;	glVertex3f: x+dx with: y+(dy negated) with: z+(dz negated);			glTexCoord2f:1.0 with: 0.0;	glVertex3f: x+dx with: y+dy with: z+(dz negated);			glTexCoord2f:0.0 with: 0.0;	glVertex3f: x+dx with: y+dy with: z+dz.		dx _ dx negated.			ogl glNormal3f: -1.0 with: 0.0 with: 0.0;			glTexCoord2f:1.0 with: 0.0;	glVertex3f: x+dx with: y+dy with: z+dz;			glTexCoord2f:0.0 with:0.0;	glVertex3f: x+dx with: y+dy with: z+(dz negated);			glTexCoord2f:0.0 with:1.0;	glVertex3f: x+dx with: y+(dy negated) with: z+(dz negated);			glTexCoord2f:1.0 with:1.0;	glVertex3f: x+dx with: y+(dy negated) with: z+dz.		dx _ dx negated.		ogl glNormal3f: 0.0 with: 1.0 with: 0.0;			glTexCoord2f:1.0 with: 0.0;	glVertex3f: x+dx with: y+dy with: z+dz;			glTexCoord2f:0.0 with:0.0;	glVertex3f: x+dx with: y+dy with: z+(dz negated);			glTexCoord2f:0.0 with:1.0;	glVertex3f: x+(dx negated) with: y+dy with: z+(dz negated);			glTexCoord2f:1.0 with:1.0;	glVertex3f: x+(dx negated) with: y+dy with: z+dz.		dy _ dy negated.		ogl	glNormal3f: 0.0 with: -1.0 with: 0.0;			glTexCoord2f:0.0 with:1.0;	glVertex3f: x+(dx negated) with: y+dy with: z+dz;			glTexCoord2f:1.0 with:1.0;	glVertex3f: x+(dx negated) with: y+dy with: z+(dz negated);			glTexCoord2f:1.0 with:0.0;	glVertex3f: x+dx with: y+dy with: z+(dz negated);			glTexCoord2f:0.0 with: 0.0;	glVertex3f: x+dx with: y+dy with: z+dz.	ogl glEnd.! !!TMass methodsFor: 'compute' stamp: 'das 10/16/2004 15:14' prior: 33732305!compute	| accel t |	mass ~= 0.0 ifTrue:[		t _ 0.03.		accel _ force. " mass = 1.0"		velocity _ velocity + (0.90 *accel * t). "acceleration increases velocity"		velocity _ velocity * 0.995.  "damp velocity"		location _ location + (velocity * t). "change location"	].	force _ 0.0@0.0@0.0.	normal normalize.! !!TSpring methodsFor: 'accessing' stamp: 'das 10/16/2004 14:23'!compute: k		| v n |	v _ (mass1 location - mass2 location).	n _ v normalized * rest.	v _ (v-n)*k.	mass1 addForce: v.	mass2 addForce: v negated.! !!TTapestry methodsFor: 'render' stamp: 'das 10/16/2004 15:12' prior: 33733278!render: ogl	| index m |	ogl glDisable: GLCullFace.	texture ifNotNil: [ texture enable: ogl.].	1 to: xsize-1 do:[:i |	wire ifFalse:[ ogl glBegin: GLTriangleStrip.] 		ifTrue:[ ogl glBegin: GLLineStrip.].		1 to: ysize do:[:j |			index _ (i-1*ysize)+j.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.			index _ index +ysize.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.		].		ogl glEnd.	].	wire ifTrue:[		1 to: xsize do:[:j |			ogl glBegin: GLLineStrip.			1 to: ysize do:[:i |				ogl glVertex3fv: (masses at:(j-1*ysize)+i) location.].			ogl glEnd.		].	].	texture ifNotNil:[texture disable: ogl.]."This is to render the springs to see if these make any sense...they do now.	springs do:[:s |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: s mass1 location+(0@2@0.3).		ogl glVertex3fv: s mass2 location+(0@2@0.3).		ogl glEnd.		].""	masses do:[:ms |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: ms location.		ogl glVertex3fv: ms location - ms normal.		ogl glEnd.		]."	ogl setCull.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/16/2004 14:20' prior: 33734851!reset	| m s scl |	masses _ OrderedCollection new.	springs _ OrderedCollection new.	tuv _ OrderedCollection new.	xsize _ 15.	ysize _ 10.	scl _ 0.5.	1 to: xsize do:[:i |		1 to: ysize do:[:j |			m _ TMass new.			m force: 0@0@0.			m location: scl*((i-1)@(j-1)@0).			m mass: 1.0.			m uv: ((m location x/(xsize-1))@(1-(m location y/(ysize-1))))/scl.			m normal: (0@0@1).			masses add: m.		].	].	1 to: xsize do:[:i |		1 to: ysize do:[:j |			j~=ysize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i-1*ysize+j+1).				springs add: s.				].			i~=xsize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i*ysize+j).				springs add: s.				].			(i ~= xsize and:[j~=ysize])ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j+1) mass: (masses at:i*ysize+j).				springs add: s.					].		"	s _ TSpring new.			s mass: (masses at:i-1*xsize+j+1) mass: (masses at:i*xsize+j).			springs add: s."		]	]."set the tack points""	(masses at: 1) mass:0.0."	(masses at: ysize) mass:0.0.	(masses at: masses size) mass:0.0.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 14:04'!addGravity: g	masses do:[ :m | m addForce: g. ].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 14:27' prior: 33736274!addWind	| windPeriod windPhase windForce twoPi index mn windDirection |"first compute the norms at the masses"		1 to: xsize - 1 do:[:i |		1 to: ysize - 1 do:[ :j |			index _ i-1*ysize+j.			mn _ masses at: index.			mn normal: 				(((masses at: index +1 ) location - mn location) cross: 				((masses at: index + ysize)location - mn location))normalized.			].			index _ i*ysize.			mn _ masses at: index.			mn normal: 				((mn location - (masses at: index - 1 ) location) cross: 				((masses at: index + ysize)location - mn location))normalized.		].	masses size - xsize to: masses size do:[ :in | 		(masses at: in) normal: (masses at: in - ysize)normal].	windPeriod _ 15.0.	windPhase _ 0.9.	twoPi _ 2 * Float pi.	windForce _ 0.1* (B3DVector3 x: 0.5 * (( time * twoPi/(windPeriod * windPhase)) cos) 		y: 0.5 * ((time * twoPi/windPeriod) sin)		z: -4.0).	windDirection _ windForce normalized.	time _ time + 0.04.	masses do:[ :m | m addForce: windForce norm: windDirection. ].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 14:28'!addWind: scl	| windPeriod windPhase windForce twoPi index mn windDirection |"first compute the norms at the masses"		1 to: xsize - 1 do:[:i |		1 to: ysize - 1 do:[ :j |			index _ i-1*ysize+j.			mn _ masses at: index.			mn normal: 				(((masses at: index +1 ) location - mn location) cross: 				((masses at: index + ysize)location - mn location))normalized.			].			index _ i*ysize.			mn _ masses at: index.			mn normal: 				((mn location - (masses at: index - 1 ) location) cross: 				((masses at: index + ysize)location - mn location))normalized.		].	masses size - xsize to: masses size do:[ :in | 		(masses at: in) normal: (masses at: in - ysize)normal].	windPeriod _ 15.0.	windPhase _ 0.9.	twoPi _ 2 * Float pi.	windForce _scl * (B3DVector3 x: 0.5 * (( time * twoPi/(windPeriod * windPhase)) cos) 		y: 0.5 * ((time * twoPi/windPeriod) sin)		z: -4.0).	windDirection _ windForce normalized.	time _ time + 0.04.	masses do:[ :m | m addForce: windForce norm: windDirection. ].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 15:17' prior: 33737433!compute	| box |	true ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	box _ TBox new.	box growVertex: (masses at: 1) location.	box growVertex: (masses at: ysize) location.		box growVertex: (masses at: masses size-ysize+1) location.		box growVertex: (masses at: masses size) location.		boundSphere localPosition: box center radius: box radius.	boundSphere box: box.	self future: 20 perform: #compute.! !TSpring removeSelector: #compute!TSpring removeSelector: #compute!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #71] on 16 October 2004 at 4:06:25 pm'!"Change Set:		Tapestry3Date:			16 October 2004Author:			David A. SmithNeed to fix the boundSphere. It is not being initialized properly."!!TTapestry methodsFor: 'initialize' stamp: 'das 10/16/2004 16:01'!initBounds	| box |	box _ TBox new.	box growVertex: (masses at: 1) location.	box growVertex: (masses at: ysize) location.		box growVertex: (masses at: masses size-ysize+1) location.		box growVertex: (masses at: masses size) location.		boundSphere localPosition: box center radius: box radius.	boundSphere box: box.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/16/2004 16:03' prior: 33734527!initialize	super initialize.	time _ 0.0.	self reset.	self compute.	wire _ false.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/16/2004 16:05' prior: 33764064!reset	| m s scl |	masses _ OrderedCollection new.	springs _ OrderedCollection new.	tuv _ OrderedCollection new.	xsize _ 15.	ysize _ 10.	scl _ 0.5.	1 to: xsize do:[:i |		1 to: ysize do:[:j |			m _ TMass new.			m force: 0@0@0.			m location: scl*((i-1)@(j-1)@0).			m mass: 1.0.			m uv: ((m location x/(xsize-1))@(1-(m location y/(ysize-1))))/scl.			m normal: (0@0@1).			masses add: m.		].	].	1 to: xsize do:[:i |		1 to: ysize do:[:j |			j~=ysize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i-1*ysize+j+1).				springs add: s.				].			i~=xsize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i*ysize+j).				springs add: s.				].			(i ~= xsize and:[j~=ysize])ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j+1) mass: (masses at:i*ysize+j).				springs add: s.					].		"	s _ TSpring new.			s mass: (masses at:i-1*xsize+j+1) mass: (masses at:i*xsize+j).			springs add: s."		]	]."set the tack points""	(masses at: 1) mass:0.0."	(masses at: ysize) mass:0.0.	(masses at: masses size) mass:0.0.	boundSphere _ TBoundSphere new.	boundSphere frame: self.	self initBounds.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 16:00' prior: 33767537!compute	true ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #71] on 16 October 2004 at 3:55:08 pm'!"Change Set:		DelGalleryDate:			16 October 2004Author:			David A. SmithThis removes the gallery files in the data directory which will force them to get built next time you run the full TeapotMorph."!"Postscript:This removes theGallery.tea file which will force a new one to be rebuilt later."| fileName |fileName := TResourceLoader fileNameFromUrl: 'http://www.reed.com/TeaLand/spaces/theGallery.tea'.FileDirectory default deleteFileNamed: fileName ifAbsent:[].!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #74] on 16 October 2004 at 4:14:30 pm'!"Change Set:		liteSkysDate:			16 October 2004Author:			David A. SmithMake the new portals light the default instead of the darker color."!!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/16/2004 16:13' prior: 33583067!makeNewSpace: ptr	| sp2 light tframe p1 win p2 |	self killPopup.	sp2 _ TSpace meta new."	sp2 meta color:  (Color				r: 0.2				g: 0.25				b: 0.6)."		sp2 meta url: 'http://www.reed.com/TeaLand/spaces/newSpace.tea'."Add a light to the world "	light _ TLight meta new.	tframe _ TSpinner meta new.	tframe meta translationX: -10 y:0.0 z: 0.0.	tframe meta rotationAroundZ: 120.	tframe meta addRotationAroundY:-10.	tframe meta matNil.	tframe meta contents: light.	sp2 meta addChild: tframe.	self meta makeFloor: sp2 fileName:'stone.BMP'.	p1 _ TPortal meta new.	win _ TWindow meta new.	win meta translationX: 0 y: 0.0 z: -3.0.	win meta contents: p1.	ptr avatar meta addChild: win.	win meta releaseWindow.	p2 _ TPortal meta new.	win _ TWindow meta new.	win meta rotationAroundY: 225.	win meta translationX: 40.0 y:2.0 z: 40.0.	win meta contents: p2.	sp2 meta addChild: win.	p1 meta linkPortal: p2.	^sp2 ! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #75] on 16 October 2004 at 4:56:32 pm'!TMorphic subclass: #TSpreadSheetTxtr	instanceVariableNames: 'selection farray '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-TextureForms'!!TSpreadSheetTxtr methodsFor: 'as yet unclassified' stamp: 'das 10/16/2004 16:40'!extent: ext	super extent: ext.	self selectField: farray.! !!TSpreadSheetTxtr methodsFor: 'as yet unclassified' stamp: 'das 10/16/2004 16:55' prior: 52379916!selectField: fa	| ext2 pos cube mat scl fValue |	fa ifNil:[^ self].	farray _ fa.	scl _ self extent/self formExtent.	ext2 _ extent/2.0.	selection ifNotNil:[		self removeChild: selection.		selection _ nil.].	selection _ TGroup new.	self addChild: selection.	farray do:[ :field |		field value ifNotNil:[			pos _ field key center*scl.			cube _ TCube new.			fValue _  field value * scl x *250.			cube extent: ((field key extent*scl)@fValue).			cube translation: ((pos x-ext2 x)@(ext2 y-(pos y))@(fValue/2.0)).			selection addChild: cube.			mat _ TMaterial new.			fValue >0.0 ifTrue:[ mat color:  #(0.3 1.0 0.3 0.3) asFloatArray.]			ifFalse:[ 				fValue<0.0 ifTrue:[mat color:#(1.0 0.3 0.3 0.3)asFloatArray.] ifFalse:			[mat color:#(0.3 0.3 1.0 0.3)asFloatArray.]].			cube material: mat.			cube solid: false.		].	].! !----End fileIn of a stream----!----SNAPSHOT----#(16 October 2004 4:11:57 pm) Croquet0.1-67-FlagTest.image priorSource: 186223!!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:14' prior: 33770415!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	false ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	false ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:15' prior: 33774212!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	false ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:15' prior: 33774613!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:16' prior: 33775013!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-1000.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:17' prior: 33775412!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-200.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:17' prior: 33775812!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-300.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:17' prior: 33776211!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-400.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:18' prior: 33776610!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:18' prior: 33777009!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-600.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:18' prior: 33777408!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-700.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:18' prior: 33777807!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-800.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:19' prior: 33778206!compute	false ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-700.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:22' prior: 33778605!compute	true ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-700.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:23' prior: 33779004!compute	true ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-200.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:23' prior: 33779402!compute	true ifTrue:[ self addWind: 2.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-200.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'ack 10/16/2004 16:24' prior: 33779800!compute	true ifTrue:[ self addWind: 2.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !----STARTUP----#(19 October 2004 10:18:26 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-67-FlagTest.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #76] on 17 October 2004 at 8:15:08 am'!"Change Set:		Tapestry4Date:			17 October 2004Author:			David A. SmithYet another cleanup/fix for the TTapestry class. In particular, I modified B3DVector3>>#normalized, in a particularly inefficient way and there was already a method that did this."!!B3DVector3 methodsFor: 'vector functions' stamp: 'das 10/17/2004 08:06' prior: 33730927!normalized	^self / self length! !!TMass methodsFor: 'accessing' stamp: 'das 10/16/2004 21:33' prior: 33731453!addWindForce: f norm: n		force _ force + f*((n dot: normal)abs).! !!TMass methodsFor: 'compute' stamp: 'das 10/16/2004 21:42' prior: 33762181!compute	| accel t |	mass ~= 0.0 ifTrue:[		t _ 0.03.		accel _ force. " mass = 1.0"		velocity _ velocity + (0.90 *accel * t). "acceleration increases velocity"		velocity _ velocity * 0.995.  "damp velocity"		location _ location + (velocity * t). "change location"	].	force _ 0.0@0.0@0.0.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/17/2004 08:06' prior: 33766448!addWind: scl	| windPeriod windPhase windForce twoPi index mn windDirection |"first compute the norms at the masses"		1 to: xsize - 1 do:[:i |		1 to: ysize - 1 do:[ :j |			index _ i-1*ysize+j.			mn _ masses at: index.			mn normal: 				(((masses at: index +1 ) location - mn location) cross: 				((masses at: index + ysize)location - mn location))safelyNormalized.			].			index _ i*ysize.			mn _ masses at: index.			mn normal: 				((mn location - (masses at: index - 1 ) location) cross: 				((masses at: index + ysize)location - mn location))normalized.		].	masses size - xsize to: masses size do:[ :in | 		(masses at: in) normal: (masses at: in - ysize)normal].	windPeriod _ 15.0.	windPhase _ 0.9.	twoPi _ 2 * Float pi.	windForce _scl * (B3DVector3 x: 0.5 * (( time * twoPi/(windPeriod * windPhase)) cos) 		y: 0.5 * ((time * twoPi/windPeriod) sin)		z: -4.0).	windDirection _ windForce normalized.	time _ time + 0.04.	masses do:[ :m | m addWindForce: windForce norm: windDirection. ].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/17/2004 08:12' prior: 33770415!compute	true ifTrue:[ self addWind: 0.7.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 20 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/16/2004 21:54' prior: 33737666!testCompute	true ifTrue:[ self addWind: 1.0.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].	self initBounds.! !TTapestry removeSelector: #addWind!TTapestry removeSelector: #addWind!TMass removeSelector: #addForce:norm:!TMass removeSelector: #addForce:norm:!TMass removeSelector: #addWindForce:!TMass removeSelector: #addWindForce:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #77] on 17 October 2004 at 12:37:56 pm'!"Change Set:		FixTeddy2Date:			17 October 2004Author:			David A. SmithFixes incomplete uses of meta."!!TeapotMorph methodsFor: 'toys' stamp: 'das 10/17/2004 12:24' prior: 52821158!makePoohObjectFrom: aForm player: aPlayer rotateBy: rot replaceOldCostume: aBoolean	| aSpace pts bbForm tex mat subdivision b3dMesh mesh pos scale tfm frame |	"Convert the form"	bbForm := Form extent: aForm extent asSmallerPowerOfTwo depth: 32.	aForm displayScaledOn: bbForm in: (bbForm boundingBox insetBy: 1).	"Smear the borders of the texture a bit to prevent problems in texture mapping"	bbForm smearFill: 10. "pixels - less is faster but more is safer"	aSpace := activeCamera root.	"Create the texture"	tex := TTexture meta new.	tex meta initializeWithForm: bbForm mipmap: true shrinkFit: true extension: #colorKeyZero.	"The material"	mat _ TMaterial meta new.	mat meta ambientColor: #(1 1 1 1) asFloatArray.	mat meta diffuseColor: #(1 1 1 1) asFloatArray.	mat meta texture: tex.	mat meta textureMode: GLModulate.	"The b3d mesh"	true ifTrue:[		b3dMesh := self makePoohMeshFrom: aForm.		scale := 0.01.	] ifFalse:[		pts _ StrokeSimplifier new.		aForm traceOutline: Color transparent do:[:aPoint| pts add: aPoint].		pts closeStroke.		pts := pts finalStroke.		pts := StrokeSimplifier smoothen: pts length: 10.		pts := LineIntersections regularize: pts.		subdivision _ PoohSubdivision constraintOutline: pts.		b3dMesh _ subdivision build3DObject: false. "single sided textures"		scale := 0.02.	].	tfm := (B3DRotation axis: 1@0@0 angle: 180) asMatrix4x4.	tfm := tfm composeWith: (B3DRotation axis: 0@1@0 angle: rot) asMatrix4x4.	tfm := tfm composeWith: (B3DMatrix4x4 withScale: scale@scale@scale).	tfm := tfm composeWith: (B3DMatrix4x4 withOffset: (aForm width * -0.5) @ (aForm height * -0.5) @ 0).	b3dMesh transformBy: tfm.	"The TMesh"	mesh := TMesh meta new.	mesh meta initializeWithVertices: b3dMesh vertices 		alias: nil 		norms: b3dMesh vertexNormals		textureUV: b3dMesh texCoords		faceGroups: {1. b3dMesh zeroBasedFaceGroup}		material: mat.	mesh meta solid: false.	mesh meta initBounds.	frame := TDragger meta new.	frame meta contents: mesh.	"Position it"	pos := activeCamera avatar translation - (activeCamera avatar lookAt * 10).	frame meta translation: pos.	frame meta rotationAroundY: activeCamera avatar yaw + rot.	aSpace meta addChild: frame.	"mesh startScript:[mesh turnTo: activeCamera].""self tweakWorld ifNotNil:[	mesh meta replaceUserCostume: mesh sketch: aForm.	aSpace player signal: #created with: mesh player.]."! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #78] on 17 October 2004 at 2:39:13 pm'!"Change Set:		RemoteConstructDate:			17 October 2004Author:			David A. SmithFixes remote construction of portals (2d,3d,and wireframe portals). And fixes a problem with the rendering always testing rays whether it was in a particular portal or not."!!TFrame methodsFor: 'render' stamp: 'das 10/17/2004 14:14' prior: 51792266!renderFrame: ogl parent: parent root: root	| count childCount globalTrans ac |" I am running a parallel set of transforms here. Why? Because I am told the OGL is inefficient at reading the current transform. Easy to change."" Any given frame can have multiple parents. This means that the frame can't keep a static reference to the parent frame. This must be dynamic, essentially filled out at render time. This allows for pure -instancing- of frame objects. That is, the same frame and all of its contents can easily be in multiple locations in the render tree without significant additional bookkeeping. It also means that when an object DOES need to refer to its parent or the space frame (read -root- for traditional approaches), this can ONLY be done at render-time via this mechanism. It also means that a child really must not modify the parent directly, as the parent has other responsibilities."" #renderFrame: must return the number of objects that were rendered - failure to do so will just crash."	count _ 0.	(visible or:[frameChildren notNil])ifFalse:[^ 0 ].		self parent ~= parent ifTrue:[ self isSpace ifFalse:[self frameChanged. ]].	self currentParent: parent.	ac _ ogl camera.	" apply the local transform to this matrix "	frameChanged ifTrue:[		self globalTransform: (parent globalTransform composeWith: localTransform).].	ogl glPushMatrix. 	ogl glMultMatrixf: localTransform transposed. 	self boundSphere ifNotNil:[		self boundSphere transform: globalTransform.		solid ifTrue:[ ac inPortal ifFalse:[root testRayFrames: self boundSphere.].].	]."------ is this inside the viewing pyramid?"	(visible and:[ac testBounds: self boundSphere]) ifTrue:[ 		ac pointer ifNotNil:[			ac inPortal ifTrue:[				(ac pointer pointerPick: self boundSphere).				]			ifFalse:[				self isPortal ifFalse:[					(ac pointer pointerPick: self boundSphere).					"(ac downPointer pick: self boundSphere)."					].				].			].		timeStamp _ ogl timeStamp.		count _ 1.		self render: ogl.			self hasAlpha ifTrue: [ 			globalTrans _ B3DMatrix4x4 new.			ogl glGetFloatv: GLModelviewMatrix with: globalTrans.			root addAlphaObject: self 				transform: globalTrans				distance: ((ac globalPosition - globalPosition ) squaredLength * CroquetGlobals frameScaleSquared)				parent: parent.].].	frameChildren ifNotNil:[		" render all of the child frames "		childCount _ 0.		frameChildren do:[:rFrame | childCount _ childCount+(rFrame renderFrame: ogl parent: self root: root).].		childCount > 0 ifTrue:[count _ count+childCount. timeStamp _ ogl timeStamp.]		].	ogl glPopMatrix.	^ count.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/17/2004 13:53' prior: 52030347!makePortal3D: ptr	| win portal scroller root |	root _ ptr avatar root.	portal_ TPortal3D meta new meta initializeWithSpace: root.	"set the initial offset value to the location of the activeCamera, but about two/thirds of the way down the window."	portal meta offset: ptr avatar globalPosition negated - (0@((portal extent y/ portal scale)/6.0)@0).	scroller _ TScrollBox3D meta new meta initializeWithContents: portal.	win _ ptr avatar meta makeWindowInFront.	win meta contents3D: scroller.	self killPopup.! !!TPortal methodsFor: 'accessing' stamp: 'das 10/17/2004 14:32'!testEnter: ogl avatar: avatar	| delta m1 m2 trans saveFP ray |"testEnter: is used to determine if the camera moves through the plane of the portal.  DAS"blocked ifFalse:[ " The portal is open to enter (assuming the following is true...)"	self = toPortal ifFalse:[ " This is not a mirror"	toPortal = toPortal root ifFalse:[		ray _ TRay new.		ray globalTransform: avatar globalTransform.		ray currentFrame: self.		lastCameraPosition ifNotNil:[ " We have been here before"		lastCameraPosition z > 0 ifTrue: [ " We were somewhere in front of the portal"			delta _  (lastCameraPosition - ray framePosition).			ray framePosition z < 0 ifTrue:[				saveFP _ ray framePosition.				ray framePosition: lastCameraPosition.				(ray portalTest: self at: delta) ifTrue:[						m1 _ self globalTransform.						toPortal isPortal ifTrue:[ m2 _ toPortal globalMatrixOut.]						ifFalse:[ m2 _ toPortal globalTransform.].						trans _ m2 composeWith: m1 orthoNormInverse.						trans _ trans composeWith: avatar globalTransform.						avatar meta future: 0.0 perform: #goToPortal:transform: withArguments: { toPortal . trans }.						lastCameraPosition _ nil.						^ true.				].			ray framePosition: saveFP.			].].].	lastCameraPosition _ ray framePosition.	].].].	^ false.! !!TSpace methodsFor: 'render' stamp: 'das 10/17/2004 14:20' prior: 52345599!renderSpace: ogl	| delta ac |	ac _ ogl camera."----- test if enter the portal here -----"	portalFrames do: [ :pf | 		 "------ is the portal visible? ------"		pf visible ifTrue:[ 		" ------ portal near avatar?-----"			delta _ ac avatar globalTransform translation - 				pf globalTransform translation.			delta squaredLength < pf boundSphere radiusSquared ifTrue:[				(pf testEnter: ogl avatar: ac avatar) ifTrue:[^ self.].	].].].	^self renderSpace: ogl port: ac depth: 1.! !!TWirePortal methodsFor: 'as yet unclassified' stamp: 'das 10/17/2004 14:22'!testEnter: ogl avatar: avatar	| val |	val _ super testEnter: ogl avatar: avatar.	val ifTrue:[	ogl forceWire: ogl forceWire not.].	^ val.! !TWirePortal removeSelector: #testEnter:!TPortal removeSelector: #testEnter:!TPortal removeSelector: #testEnter:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #75] on 17 October 2004 at 10:05:18 pm'!"Change Set:		SchedulerFixDate:			17 October 2004Author:			Andreas RaabMake sure that scripts do not get randomly garbage collect in some obscure cases."!!ScriptScheduler methodsFor: 'scheduling' stamp: 'ar 10/17/2004 22:02' prior: 32574558!scheduleScript: aUserScript	| link |	aUserScript == Processor activeProcess		ifFalse:[^self error:'Can only schedule the active script'].	aUserScript isScheduled		ifTrue:[self error:'This script is already scheduled'].	aUserScript == activeScript ifFalse:[activeList primitiveWait].	"now we're in sync with the scheduler"	link := ScriptProcessLink strongOn: aUserScript.	scheduledList := self addLink: link toList: scheduledList.	self signal: #scheduleScript with: aUserScript.	^link! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #75] on 17 October 2004 at 10:05:33 pm'!"Change Set:		MorphInteractionsDate:			17 October 2004Author:			Andreas RaabFix Morphic interactions in Croquet."!!FillInTheBlankMorph methodsFor: 'accessing' stamp: 'ar 10/17/2004 20:25' prior: 24362267!response: aText	"Sent when text pane accepts."	response _ aText asString.	done _ true.	Processor activeProcess isScriptingProcess ifTrue:[self signal: #done].	^ true! !!FillInTheBlankMorph methodsFor: 'invoking' stamp: 'ar 10/17/2004 21:59' prior: 24367358!getUserResponse	"Wait for the user to accept or cancel, and answer the result string. Answers the empty string if the user cancels."	"Details: This is invoked synchronously from the caller. In order to keep processing inputs and updating the screen while waiting for the user to respond, this method has its own version of the World's event loop."	| w script |	w _ self world.	w ifNil: [^ response].	done _ false.	w activeHand newKeyboardFocus: textPane.	(script := Processor activeProcess) isScriptingProcess ifTrue:[		self waitUntil: #done.	] ifFalse:[		[done] whileFalse: [w doOneCycle].	].	self delete.	w doOneCycle.	^ response! !!FillInTheBlankMorph methodsFor: 'menu' stamp: 'ar 10/17/2004 20:25' prior: 24368095!cancel	"Sent by the cancel button."	response _ responseUponCancel.	done _ true.	Processor activeProcess isScriptingProcess ifTrue:[self signal: #done].! !!MenuMorph methodsFor: 'modal control' stamp: 'ar 10/17/2004 20:42' prior: 27752561!invokeModalAt: aPoint in: aWorld allowKeyboard: aBoolean	"Invoke this menu and don't return until the user has chosen a value.	See senders of this method for finding out how to use modal menu morphs."	| w pp |	self popUpAt: aPoint forHand: aWorld primaryHand in: aWorld allowKeyboard: aBoolean.	self isModalInvokationDone: false.	w _ aWorld outermostWorldMorph. "containing hand"	(pp := Processor activeProcess isScriptingProcess) ifTrue:[		self waitUntil: #done.	] ifFalse:[		[self isInWorld & self isModalInvokationDone not] whileTrue: [w doOneSubCycle].	].	self delete.	^ self modalSelection! !!MenuMorph methodsFor: 'modal control' stamp: 'ar 10/17/2004 20:28' prior: 27753290!isModalInvokationDone: aBool	self setProperty: #isModalInvokationDone toValue: aBool.	(aBool and:[Processor activeProcess isScriptingProcess]) ifTrue:[self signal: #done].! !!MVCMenuMorph methodsFor: 'invoking' stamp: 'ar 10/17/2004 20:41' prior: 27516326!invokeAt: aPoint in: aWorld allowKeyboard: aBoolean	"Add this menu to the given world centered at the given point. Wait for the user to make a selection and answer it. The selection value returned is an integer in keeping with PopUpMenu, if the menu is converted from an MVC-style menu."	"Details: This is invoked synchronously from the caller. In order to keep processing inputs and updating the screen while waiting for the user to respond, this method has its own version of the World's event loop." 	| w pp |	self flag: #bob.		"is <aPoint> global or local?"	self flag: #arNote.	"<aPoint> is local to aWorld"	self popUpAt: aPoint forHand: aWorld primaryHand in: aWorld allowKeyboard: aBoolean.	done _ false.	(pp := Processor activeProcess isScriptingProcess) ifTrue:[		self waitUntil: #done.	] ifFalse:[		w _ aWorld outermostWorldMorph. "containing hand"		[self isInWorld & done not] whileTrue: [w doOneSubCycle].	].	self delete.	^ mvcSelection! !!MVCMenuMorph methodsFor: 'private' stamp: 'ar 10/17/2004 20:23' prior: 27517463!selectMVCItem: item	"Called by the MenuItemMorph that the user selects.	Record the selection and set the done flag to end this interaction."	mvcSelection _ item.	done _ true.	Processor activeProcess isScriptingProcess ifTrue:[self signal: #done].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #75] on 17 October 2004 at 10:10:32 pm'!"Change Set:		FixXTermDate:			17 October 2004Author:			Andreas RaabAdd an error handler for creating xterms."!!TOverlayButtons methodsFor: 'popups' stamp: 'ar 10/17/2004 22:09' prior: 52035747!makeXTerminal: ptr	"here we need to make an X terminal that can be opened"	"since this user is the one who must connect it up, we can use a regular Morph	to capture the display id, eventually.  For now, just assume a display ID of :1"	[self makeX: ptr display: ':1'] on: Error do:[:ex| Smalltalk beep].	self killPopup.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #76] on 18 October 2004 at 2:14:40 am'!"Change Set:		TDraggerDragFixDate:			18 October 2004Author:			Takashi YamamiyaFix wrong laser direction when moving TDragger.This is for bug #0000375."!!TDragger methodsFor: 'events' stamp: 'tak 10/18/2004 02:07' prior: 51658041!pointerDown: aPointer	"Convert the selected point into the global reference frame"	| oldSelectedPoint |	selectedPoint := oldSelectedPoint := aPointer selectedPoint.	selectedPoint := aPointer selectedFrame localToGlobal: selectedPoint.	"Compute the plane normal for picking"	planeNormal _ aPointer camera lookAt.	"Recompute the selected point"	(aPointer frame: self root pickPlane: selectedPoint normal: planeNormal) ifFalse:[^self].	lastPoint := aPointer selectedPoint.	aPointer selectedPoint: oldSelectedPoint.! !!TDragger methodsFor: 'events' stamp: 'tak 10/18/2004 02:10' prior: 51658542!pointerMove: aPointer	"Selected point is kept as laser needs the point"	| nextPoint oldSelectedPoint |	oldSelectedPoint _ aPointer selectedPoint.	(aPointer frame: self root pickPlane: lastPoint normal: planeNormal) ifFalse:[^nil].	nextPoint := aPointer selectedPoint.	aPointer shiftPressed 		ifTrue:[aPointer controlKeyPressed 				ifTrue:[self tumble: aPointer from: lastPoint to: nextPoint]				ifFalse:[self moveUpDown: aPointer from: lastPoint to: nextPoint]]		ifFalse:[aPointer controlKeyPressed				ifTrue:[self turnLeftRight: aPointer from: lastPoint to: nextPoint]				ifFalse:[self moveForthBack: aPointer from: lastPoint to: nextPoint]].	lastPoint := nextPoint.	aPointer selectedPoint: oldSelectedPoint.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #66] on 16 October 2004 at 2:21:28 pm'!"Change Set:		DropHandlerDate:			16 October 2004Author:			Takashi YamamiyaExternalDropHandler support for Jasmine.Images and url handler work on P2P network.Supported file types are;- images (work on network)- .url: internet shortcut (work on network).- .ASE: 3ds max ascii import- .html: html file"!!ExternalDropHandler methodsFor: 'testing' stamp: 'tak 7/21/2004 16:05' prior: 23842444!matchesExtension: aExtension	(self extension isNil or: [aExtension isNil])		ifTrue: [^false].	^extension asLowercase = aExtension asLowercase! !!ExternalDropHandler class methodsFor: '*Croquet' stamp: 'tak 7/21/2004 15:47'!defaultCroquetASEHandler	^ ExternalDropHandler		type: 'model/ase'		extension: 'ase'		action: [:stream :camera :event | camera makeASE: stream]! !!ExternalDropHandler class methodsFor: '*Croquet' stamp: 'tak 10/15/2004 19:16'!defaultCroquetHtmlHandler	^ ExternalDropHandler		type: 'text/html'		extension: nil		action: [:stream :camera :event | camera makeHtml: stream]! !!ExternalDropHandler class methodsFor: '*Croquet' stamp: 'tak 7/21/2004 15:21'!defaultCroquetImageHandler	^ ExternalDropHandler		type: 'image/'		extension: nil		action: [:stream :camera :event | camera makePicture: stream]! !!ExternalDropHandler class methodsFor: '*Croquet' stamp: 'tak 10/16/2004 10:04'!defaultCroquetUrlShortcutHandler	^ ExternalDropHandler		type: 'application/x-url'		extension: nil		action: [:stream :camera :event | camera makeBrowserWithUrl: stream]! !!ExternalDropHandler class methodsFor: '*Croquet' stamp: 'tak 10/15/2004 20:30'!lookupCroquetExternalDropHandler: stream 	"Look up handler, return nil if it not found.	A handler has a block which it is invoked when a file dropped.	Its arguments are file stream, camera, and event.	"	| types extension |	types _ stream mimeTypes.	types		ifNotNil: [self registeredCroquetHandlers				do: [:handler | (handler matchesTypes: types)						ifTrue: [^ handler]]].	extension _ FileDirectory extensionFor: stream name.	self registeredCroquetHandlers		do: [:handler | (handler matchesExtension: extension)				ifTrue: [^ handler]].	^ nil! !!ExternalDropHandler class methodsFor: '*Croquet' stamp: 'tak 10/15/2004 20:31'!registeredCroquetHandlers	"Default handlers for Croquet start 'defaultCroquet'"	^ self class selectors		select: [:selector | 'defaultCroquet*' match: selector asString]		thenCollect: [:selector | self perform: selector]! !!FileDirectory class methodsFor: 'class initialization' stamp: 'tak 10/16/2004 10:02' prior: 24168071!initializeStandardMIMETypes	"FileDirectory initializeStandardMIMETypes"	StandardMIMEMappings _ Dictionary new.	#(		(gif		('image/gif'))		(pdf	('application/pdf'))		(aiff	('audio/aiff'))		(bmp	('image/bmp'))		(png	('image/png'))		(swf	('application/x-shockwave-flash'))		(htm	('text/html' 'text/plain'))		(html	('text/html' 'text/plain'))		(jpg	('image/jpeg'))		(jpeg	('image/jpeg'))		(mid	('audio/midi'))		(midi	('audio/midi'))		(mp3	('audio/mpeg'))		(mpeg	('video/mpeg'))		(mpg	('video/mpg'))		(txt		('text/plain'))		(text	('text/plain'))		(mov	('video/quicktime'))		(qt		('video/quicktime'))		(tif		('image/tiff'))		(tiff	('image/tiff'))		(ttf		('application/x-truetypefont'))		(wrl	('model/vrml'))		(vrml	('model/vrml'))		(wav	('audio/wav'))		(ASE	('model/ase'))		(url		('application/x-url'))	) do:[:spec|		StandardMIMEMappings at: spec first asString put: spec last.	].! !!TBoundSphere methodsFor: 'access' stamp: 'tak 10/15/2004 20:54' prior: 51523975!scale: scale 	self radius: radius * scale.	self localPosition: self localPosition * scale.	children		ifNotNil: [children				do: [:each | (each isMemberOf: TBoundSphere)						ifTrue: [each scale: scale]]]! !!TBoundSphere methodsFor: 'render' stamp: 'tak 10/15/2004 20:57' prior: 51550581!pick: pointer	| rval |" There is a problem here. I do not have the norm for these faces, which means that this will allow us to pick a triangle on the wrong side of the object. This must be fixed.Another thing that needs to be looked at is just because we find a triangle to pick does NOT mean that there isn't a closer one. This code exits on the very first triangle - but I am leaving it -as is- for performance reasons. To fix it, look at the next 'clause', where I had the same problem with groups of polys."	(pointer pickLocalBoundSphere: self) ifFalse:[^false].	vertices ifNotNil:[^pointer pickTriangles: vertices list: children].	rval _ false.	children ifNotNil: [children do:[:c | rval _ (c pick: pointer) or:[ rval]. ]].	^rval.		! !!TFrame methodsFor: 'events' stamp: 'tak 10/15/2004 16:57'!dropFiles: aFileStream pointer: pointer 	self		signal: #dropFiles		with: pointer		with: aFileStream! !!TAvatar methodsFor: 'construction' stamp: 'tak 10/16/2004 13:47' prior: 51517105!makeWindowInFront	"make a window in front of me"	| win |	win _ TWindow meta new.	win meta translation: self translation - (self lookAt * 6) - (0 @ 0.5 @ 0).	win meta rotationAroundY: self yaw.	self root meta addChild: win.	^ win! !!TUserCamera methodsFor: 'events' stamp: 'tak 10/15/2004 17:04' prior: 52535179!dropFiles: aFileStream event: evt 	| frame handler |	frame _ self pointer selectedObject.	(frame notNil			and: [frame isComponent					and: [frame handlesPointerOver: pointer]])		ifTrue: [^ frame dropFiles: aFileStream pointer: pointer].	handler _ ExternalDropHandler lookupCroquetExternalDropHandler: aFileStream.	handler		ifNotNil: [handler				handle: aFileStream				in: self				dropEvent: evt]! !!TUserCamera methodsFor: 'drag and drop' stamp: 'tak 10/16/2004 13:44'!makeASE: aFile 	| tframe max maxSide scale |	[max _ TLoad3DSMax new				initializeWithFileName: aFile name				scale: 1.0				shadeAngle: 90.1				textureMode: GLReplace]		ensure: [aFile close].	tframe _ max frame.	self root addChild: tframe.	"Adjust scale; 1.0 =< size < 10.0"	maxSide _ tframe boundingBox extent max.	scale _ 10 raisedTo: maxSide log floor negated.	tframe scale: scale.	tframe translation: self translation - (self lookAt * 6)! !!TUserCamera methodsFor: 'drag and drop' stamp: 'tak 10/16/2004 10:33'!makeBrowserWithUrl: aFile 	| config url pic win |	config _ self parseIniFileOn: aFile.	url _ config at: 'InternetShortcut.URL'.	pic _ viewPort meta makeWebPage: url extent: 512 @ 256.	win _ TWindow meta new.	win meta translation: self translation - (self lookAt * 6).	win meta rotationAroundY: self yaw.	win meta contents: pic.	self root meta addChild: win! !!TUserCamera methodsFor: 'drag and drop' stamp: 'tak 10/15/2004 21:41'!makeHtml: aFile 	| url pic win |	url _ (FileDirectory on: aFile name) realUrl.	pic _ viewPort meta makeWebPage: url extent: 512 @ 256.	win _ TWindow meta new.	win meta translation: self translation - (self lookAt * 6).	win meta rotationAroundY: self yaw.	win meta contents: pic.	self root meta addChild: win! !!TUserCamera methodsFor: 'drag and drop' stamp: 'tak 10/16/2004 10:32'!parseIniFileOn: aStream 	"Parse windows style config file"	"self basicNew parseIniFileOn:  	('[DEFAULT]', String crlf,  	'BASEURL=http://a.hatena.ne.jp/propella/', String crlf,  	'[InternetShortcut]', String crlf,  	'URL=http://a.hatena.ne.jp/propella/', String crlf,  	'Modified=7066203712B3C401B7', String crlf) readStream"	| line section strm key value result |	result _ Dictionary new.	[(line _ aStream nextLine) notNil]		whileTrue: [(line size > 0					and: [line first = Character lf])				ifTrue: [line _ line allButFirst].			('[*]*' match: line)				ifTrue: [section _ line allButFirst readStream upTo: $]]				ifFalse: [strm _ line readStream.					key _ strm upTo: $=.					value _ strm upToEnd.					result at: section , '.' , key put: value]].	^ result! !!TUserCamera methodsFor: 'morph import' stamp: 'tak 10/16/2004 13:49' prior: 52540118!makePicture: aFile	| win image txtr |	[[aFile binary.	image _ Form fromBinaryStream: (RWBinaryOrTextStream with: aFile contents) reset]		ensure: [aFile close].	"make a picture from a form, and put it in a window in front of the camera"	txtr _ TTexture meta new.	txtr meta initializeWithForm: image				mipmap: true				shrinkFit: false.]		on: Error do: [ :ex |			txtr _ TTexture meta new initializeWithForm: TForm defaultTForm mipmap: true shrinkFit: true.			ex return. ].	win _ avatar meta makeWindowInFront.	win meta contents: txtr.	^ win! !!TeapotMorph methodsFor: 'event handling' stamp: 'tak 10/15/2004 16:41' prior: 52852439!dropFiles: evt 	"Only take first file"	| f |	f _ FileStream requestDropStream: 1.	[activeCamera dropFiles: f event: evt]		ensure: [f close]! !!TeapotMorph methodsFor: 'event handling' stamp: 'tak 10/15/2004 15:52'!wantsDropFiles: anEvent 	^ true! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #84] on 17 October 2004 at 10:30:04 pm'!"Change Set:		FixForceToScreenDate:			17 October 2004Author:			Andreas RaabFix erronous forceToScreen:"!!TWorldCanvas methodsFor: 'initialization' stamp: 'ar 10/17/2004 22:29'!forceToScreen: rect	"Don't."! !----End fileIn of a stream----!'From TeaSqueak3.2 of 19 September 2002 [latest update: #484] on 17 October 2004 at 10:33:35 pm'!"Change Set:		ScamperFixesDate:			22 October 2002Author:			Andreas RaabFix ugly bug in scamper when displaying images."!!DownloadingImageMorph methodsFor: 'as yet unclassified' stamp: 'ar 10/22/2002 22:09' prior: 23380302!setContents	"set up our morphic contents"	| imageMorph imageMap |	self removeAllMorphs.	image ifNil: [^self setNoImageContents].	imageMorph _ ImageMorph new.	(imageMapName notNil	and: [formatter notNil	and: [(imageMap _ formatter imageMapNamed: imageMapName) notNil]])		ifTrue: [imageMap buildImageMapForImage: imageMorph andBrowser: formatter browser].	imageMorph image: image.	imageMorph position: self position.	self addMorph: imageMorph.	imageMorph extent ~= self extent		ifTrue: [self extent: imageMorph extent].	owner isTextMorph ifTrue:[owner releaseParagraph].! !!HtmlFormatter methodsFor: 'formatting commands' stamp: 'ar 10/22/2002 21:50' prior: 25473031!addMorph: aMorph	"add a morph to the output"	| savedAttributes |	self addChar: Character space.	savedAttributes _ outputStream currentAttributes.	outputStream currentAttributes: (savedAttributes copyWith: (TextAnchor new anchoredMorph: aMorph)).	aMorph textAnchorType: #inline.	self addChar: (Character value: 1).	outputStream currentAttributes: savedAttributes.	self addChar: Character space.	morphsToEmbed add: aMorph.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #86] on 17 October 2004 at 10:53:57 pm'!"Change Set:		ComeToFrontDate:			17 October 2004Author:			Andreas RaabHave the teapot morph come to front when it sees a mouse down event."!!TeapotMorph methodsFor: 'tweak support' stamp: 'ar 10/17/2004 22:53' prior: 52876115!handleEvent: anEvent	| evt myWorld |	(anEvent isMouse and:[anEvent isMouseDown]) ifTrue:[self comeToFront].	(myWorld := self tweakWorld) ifNil:[^super handleEvent: anEvent].	(#(mouseDown mouseUp mouseMove	keyDown keyUp keystroke) includes: anEvent type) ifTrue:[		"pass it into myWorld"		evt := anEvent translatedBy: bounds origin negated.		"evt printString displayAt: 0@0."		myWorld eventQueue nextPut: evt clone.		anEvent wasHandled: true.		^true].	^super handleEvent: anEvent! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #86] on 17 October 2004 at 10:59:59 pm'!"Change Set:		FixAliceNamesDate:			17 October 2004Author:			Andreas RaabFix misspellings of alice texture names."!!TLoadMDL methodsFor: 'parsing' stamp: 'ar 10/17/2004 22:58' prior: 51901378!parseFileNamed: filename	"Creates a new actor using the specification from the given file"	| aFile words line startSubstr index parent name texture meshFile matrix baseActor newActor fileVersion pos |	words _ (filename findTokens: #.).	aFile _ (CrLfFileStream readOnlyFileNamed: filename) ascii.	"Check what version this mdl file is"	line _ aFile upTo: (Character cr).	line _ aFile upTo: (Character cr).	line _ aFile upTo: (Character cr).	((line truncateTo: 7) = 'version')		ifTrue: [ fileVersion _ 1 ]		ifFalse: [ fileVersion _ 0 ].	[ line _ aFile upTo: (Character cr).	aFile atEnd] whileFalse:[		words _ line findTokens: '='.		"See if we're creating a new object"		(((words size) > 1) and: [ ((words at: 2) beginsWith: ' _MakeObject')			or: [ (words at: 2) beginsWith: ' Alice.MakeObject' ] ]) ifTrue: [			(fileVersion = 0) ifTrue: [				words _ line findTokens: #,.				parent _ (words at: 2) withBlanksTrimmed.				name _ (((words at: 3) withBlanksTrimmed) findBetweenSubStrs: '"') at: 1.			] ifFalse: [				name _ (words at: 1) truncateTo: (((words at: 1) size) - 1).				parent _ ((words at: 3) findTokens: #,) at: 1.			].			"Now pull in the texture to use"			startSubstr _ name , '.SetTexture'.			pos _ aFile position.			texture := nil.			[aFile atEnd or:[texture notNil]] whileFalse:[				line _ aFile upTo: (Character cr).				(line beginsWith: startSubstr) ifTrue:[					texture _ (line findBetweenSubStrs: '"') at: 2.					texture _ self spell: texture in: aFile directory]].			texture ifNil:[aFile position: pos].			"Read the composite matrix to use"			startSubstr _ name , '._SetLocalTransformation'.			pos _ aFile position.			matrix := nil.			[aFile atEnd or:[matrix notNil]] whileFalse:[				line _ aFile upTo: (Character cr).				(line beginsWith: startSubstr) ifTrue:[					matrix _ B3DMatrix4x4 new.					words _ line findBetweenSubStrs: ',()'.					words removeAllSuchThat: [:str | str = ' '].					index _ words size - 15.					1 to: 4 do:[:j|						1 to: 4 do:[:i|							matrix at: i at: j put: 								((words at: index) withBlanksTrimmed) asNumber.							index _ index + 1.]].				].			].			matrix ifNil:[aFile position: pos].			"Read the mesh file to use"			startSubstr _ 'LoadGeometry'.			pos _ aFile position.			meshFile := nil.			[aFile atEnd or:[meshFile notNil]] whileFalse:[				line _ aFile upTo: (Character cr).				(line beginsWith: startSubstr) ifTrue:[					meshFile _ (line findBetweenSubStrs: '"') at: 2.					meshFile _ (aFile directory pathName), FileDirectory slash, meshFile.				].			].			meshFile ifNil:[aFile position: pos].			"Now build the actor name"			words _ name findTokens: '.'.			name _ words last.			name at: 1 put: ((name at: 1) asLowercase).			"Now build the parent name"			parent _ parent copyReplaceAll: '.' with: ' '.			"Now create the object"			(parent = 'None') ifTrue: [				baseActor := self loadMeshFromFile: meshFile texture: texture.				baseActor ifNil:[					baseActor := TFrame new.					baseActor visible: false].				baseActor objectName: name.				matrix ifNotNil:[baseActor localTransform: matrix].				baseActor translation: baseActor translation * self scaleFactor.				baseActor solid: false.				"end base actor creation"			] ifFalse: [				newActor := self loadMeshFromFile: meshFile texture: texture.				newActor ifNil:[					newActor := TFrame new.					newActor visible: false].				newActor objectOwner: baseActor.				newActor objectName: name.				parent _ self getChildNamed: parent from: baseActor.				parent addChild: newActor.				matrix ifNotNil:[newActor localTransform: matrix].				newActor translation: newActor translation * self scaleFactor.				newActor solid: false.				"end new actor with parent"			].		"end MakeObject parsing"		].	]. "end file parsing"	aFile close.	self fixTransformsIn: baseActor.	^baseActor! !!TLoadMDL methodsFor: 'parsing' stamp: 'ar 10/17/2004 22:59'!spell: misspelled in: aDirectory	"Correct spelling for a potentially mis-spelled file in aDirectory"	| corrected |	corrected := aDirectory fileNames detect:[:any| any sameAs: misspelled].	^aDirectory fullNameFor: corrected! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #86] on 17 October 2004 at 11:05:08 pm'!"Change Set:		FixAnnoyanceDate:			17 October 2004Author:			Andreas RaabFixes the annoyance of Browsers complaining about methods with positional arguments."!!CodeHolder methodsFor: 'message list' stamp: 'ar 10/17/2004 23:04' prior: 22369323!validateMessageSource: sourceString forSelector: aSelector	"Check whether there is evidence that method source is invalid"	| sourcesName parsedSelector |	parsedSelector := [self selectedClass parserClass new parseSelector: sourceString] 		on: Error do:[:ex| ex return: ''].	parsedSelector = aSelector 		ifFalse:[			sourcesName _ FileDirectory localNameFor: Smalltalk sourcesName.			self inform: 'There may be a problem with your sources file!!The source code for every method should (usually) start with themethod selector but this is not the case with this method!! You mayproceed with caution but it is recommended that you get a new source file.This can happen if you download the "' , sourcesName  , '" file, or the ".changes" file you use, as TEXT. It must be transfered in BINARY mode, even if it looks like a text file, to preserve the CR line ends.Mac users: This may have been caused by Stuffit Expander. To prevent the files above to be converted to Mac line ends when they are expanded, do this: Start the program, then from Preferences... in the File menu, choose the Cross Platform panel, then select "Never" and press OK. Then expand the compressed archive again.(Occasionally, the source code for a method may legitimatelystart with a non-alphabetic character -- for example, Behaviormethod #formalHeaderPartsFor:.  In such rare cases, you canhappily disregard this warning.)'].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #89] on 17 October 2004 at 11:12:38 pm'!"Change Set:		RemoveOldUpdatesDate:			17 October 2004Author:			Andreas RaabRemove all but jasmine updates from the update urls"Utilities updateUrlLists copy do:[:spec|	(spec first beginsWith: 'Squeak Public Updates') ifTrue:[Utilities updateUrlLists remove: spec].].!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #45] on 13 October 2004 at 2:55:01 am'!!TeapotMorph methodsFor: 'toys' stamp: 'jm 10/13/2004 02:11' prior: 33656670!makeFlash: sp	| win teaWorld player tm |	tm _ TMorphic new initializeOpaque: false extent: 512@256.	teaWorld _ TMorphMonitor new initializeWithWorld: nil extent: 512@256.	teaWorld eventsTo: tm.	[player _ (FlashMorphReader on: (FileStream readOnlyFileNamed: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'actinMyosin2.swf'}))) processFile.	player useTimeSync: false.	player color: Color transparent.	player startPlaying.	player lock.	teaWorld world addMorphCentered: player.	] on: FileDoesNotExistException do:[:ex| ex return].	teaWorld world color: Color transparent.	win _ TWindow new.	win translationX: 31 y: 0.0 z: 28.0.	win rotationAroundY: -90.	win contents: tm.	win closeContents.	sp addChild: win.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #91] on 18 October 2004 at 10:50:58 am'!"Change Set:		fixDrag-bfDate:			18 October 2004Author:			Bert FreudenbergDragging a window in TMorphic produces odd results if fastWindowDrag is on"!!SystemWindow methodsFor: 'resize/collapse' stamp: 'bf 10/18/2004 10:43' prior: 51465739!fastFramingOn	^ Preferences fastDragWindowForMorphic		and: [self isFlexed not			and: [self world canvas form == Display]]! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #92] on 18 October 2004 at 9:02:24 am'!"Change Set:		StepFixDate:			18 October 2004Author:			David A. SmithCleans up a lot of uneccessary future message sends."!TFrame subclass: #TParticle	instanceVariableNames: 'size pPosition pVelocity pAcceleration pLifetime pColor pDeltaColor positionRange velocityRange accelerationRange lifetimeRange maxTime lastTime material boundsChanged boundSphere boundBox deltaTime billBoard startColor endColor tar tvr lengthArray lastGlobalPosition attrArray tpr pLastPosition globalVelocity attractors '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TParticle commentStamp: 'das 10/17/2004 16:24' prior: 33611426!TParticleThis is a very simple particle system.size - the length or the particle array, determines max number of particles.pPosition - B3DVector3Array of particle positionspVelocity - B3DVector3Array of particle velocitiespAcceleration - B3DVector3Array of particle accelerationspLifetime - number of seconds (floating point) of life that each particle has leftpositionRange - the TBox within which new particles get created (see TBox >> #atRandom:)velocityRange - the 3D velocity range within which the new particles start life.accelerationRange - the 3D acceleration range applied to each particle on creation.lifetimeRange - the lifespan range of each particle.lastTime - for #the stepAt: method, used to determine time between this and the last cycle.material - what color are the particles.To use the particle system you do the following:	ps _ TParticle initialize: ogl size: 1000	ps setPositionRangeMin:(-0.1@-0.1@-0.1) max: (0.1@0.1@0.1).	ps setVelocityRangeMin:(-1.2@6.4@-1.2) max:(1.2@9.6@1.2).	ps setAccelerationRangeMin:(0@-10@0) max:(0@-8@0).	ps setLifetimeRange: (1500 to: 2000).These values are called inside of the initialize method, but this is how you would set your one.If you want the particle system to move, call  self startStepping.DAS!!TButton methodsFor: 'accessing' stamp: 'das 10/17/2004 16:51'!action	^ action! !!TButton methodsFor: 'accessing' stamp: 'das 10/17/2004 16:41' prior: 51570459!persist: bool	persist _ bool.	persist ifTrue:[ 			self color: TButton overColor.		self enable.].	persist ifFalse:[self disable.].! !!TButton methodsFor: 'accessing' stamp: 'das 10/17/2004 16:40'!target		^ target.! !!TButton methodsFor: 'action' stamp: 'das 10/17/2004 16:42' prior: 33683493!enable	self color: TButton overColor.	switch ifNil:[ frame solidVisibleTree: true. ] ifNotNil:[		frame solidVisibleTree: switch not.		frame2 solidVisibleTree: switch.		].	animateTime _ nil.	persist ifFalse:[self startStepping.].! !!TButton methodsFor: 'events' stamp: 'das 10/17/2004 16:43' prior: 51570990!pointerEnter: pointer	self enable.	persist ifTrue:[self startStepping].	self color: TButton hiliteColor.	spin ifTrue:[		deltaSpin _ -1.		doSpin _ doSpin + deltaSpin.	].	^ true.! !!TButton methodsFor: 'stepping' stamp: 'das 10/17/2004 16:55' prior: 33683793!stepAt: msecs	"interpolate color"	| timeLeft |	persist ifFalse:[		animateTime ifNotNil: [			timeLeft _ animateTime - msecs.			timeLeft <= 0 ifTrue: [ 				self stopStepping.				animateTime _ nil. 				frame solidVisibleTree: false. 				frame2 ifNotNil:[frame2 solidVisibleTree: false. ].]			ifFalse: [ color at: 4 put: timeLeft asFloat / self fadeDelay.].			self color: color.].] ifTrue:[		].	spin ifTrue:[ doSpin ~= 0 ifTrue:[ 		doSpin _ doSpin + deltaSpin. 		doSpin < -360 ifTrue:[doSpin _ 0.].		self rotationAroundY: doSpin.].		doSpin = 0 ifTrue:[persist ifTrue:[self stopStepping]].] ifFalse:[persist ifTrue:[self stopStepping]].! !!TLazySusan methodsFor: 'accessing' stamp: 'das 10/17/2004 16:18' prior: 51826942!spin: aNumber	spin _ aNumber.	spin = 0 ifTrue:[self stopStepping] ifFalse:[self startStepping].! !!TSpinner methodsFor: 'accessing' stamp: 'das 10/17/2004 16:10' prior: 52377852!spin: aNumber	spin _ aNumber.	spin = 0 ifTrue:[self stopStepping.] ifFalse:[self startStepping].! !!TWaves methodsFor: 'actions' stamp: 'das 10/17/2004 16:29' prior: 52560345!impulse: index	(index >=1 and:[index <= (surface size - (size x+1))]) ifTrue:[			surface at: index put: 2.0.			surface at: index+1 put: 2.0.			surface at: index + size x put: 2.0.			surface at: index + size x + 1 put: 2.0. ].		countDown _ 300.	self startStepping.! !!TWaves methodsFor: 'stepping' stamp: 'das 10/17/2004 16:31' prior: 52563331!step" Calculates the wave function for the surface if countDown is non-zero. It is a simple cellular based spring function. We assume that the restoring force is based only on the difference of the z-values. Given that every action has a corresponding reaction, we need only test for delta z in three directions - down, to the right, and diagonal down and to the right. The resulting difference is added to the current cell and subtracted from the adjacent cell."countDown = 0 ifFalse:[		countDown _ countDown-1.	fVert replaceFrom: (size x+1) to: (fVert size) with: surface startingAt: 1.	fVert replaceFrom: 1 to: size x with: surface startingAt: 1.	fVert -= surface.	fHorz replaceFrom: 2 to: (fHorz size) with: surface startingAt: 1.	1 to: size y do:[:i | | dy |		dy _ (i-1) * size x + 1.		fHorz at: dy put: (surface at: dy).].	fHorz -= surface.	fDiag1 replaceFrom: (size x + 2) to: (fDiag1 size) with: surface startingAt:1.	fDiag1 -= surface.	fDiag2 replaceFrom: (size x -1) to: (fDiag2 size) with: surface startingAt: 1.	fDiag2 -= surface.	force replaceFrom: 1 to: force size with: fVert."	force +=fVert."	fVert replaceFrom: 1 to: (fVert size - size x) with: fVert startingAt:(size x + 1).	force -=fVert.	force +=fHorz.	fHorz replaceFrom: 1 to: (fHorz size - 1) with: fHorz startingAt: 2.	force -=fHorz.	fDiag1 *= oneOverSqrtTwo.	force += fDiag1.	fDiag1 replaceFrom: 1 to: (fDiag1 size - (size x +2)) with: fDiag1 startingAt: (size x + 2).	force -= fDiag1.	fDiag2 *= oneOverSqrtTwo.	force += fDiag2.	fDiag2 replaceFrom: 1 to: (fDiag2 size - (size x -1)) with: fDiag2 startingAt: (size x - 1).	force -= fDiag2.	force *= 0.02.	velocity += force.	surface += velocity.	surface *= 0.97.	"n _ B3DVector3 new.	1 to: normals size do:[ :i |		n x: (fHorz at: i) y: (fVert at: i) z: 1.0.		normals at: i put: n.]."		] ifTrue:[self stopStepping].! !!TWindow methodsFor: 'stepping' stamp: 'das 10/17/2004 16:15' prior: 52587572!spin: x	spin _ x.	spin ifNotNil:[self startStepping] ifNil:[ self stopStepping].! !!TWindow methodsFor: 'stepping' stamp: 'das 10/17/2004 16:14' prior: 52587743!stepAt: msecs	| trans ticks transform |"hack approximation:  spin as many times as there would have been 20 msec ticks in the last time interval"		spin ifNotNil:[		ticks _ (msecs // 20) - (self lastStepTime // 20).		trans _ self translation.		self translationX: 0.0 y:0.0 z:0.0.		transform _ self localTransform.		[ ticks > 0 ] whileTrue: [ ticks _ ticks - 1. transform _ transform composeWith: spin.].		self localTransform: transform.		self translation: trans.	].! !TWindow removeSelector: #wantsSteps!TWindow removeSelector: #wantsSteps!TWaves removeSelector: #wantsSteps!TWaves removeSelector: #wantsSteps!TSpinner removeSelector: #wantsSteps!TSpinner removeSelector: #wantsSteps!TParticle removeSelector: #wantsSteps!TParticle removeSelector: #wantsSteps!TLazySusan removeSelector: #wantsSteps!TLazySusan removeSelector: #wantsSteps!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #92] on 18 October 2004 at 9:02:29 am'!"Change Set:		MetaCommentDate:			18 October 2004Author:			David A. SmithFixes comments in TMeta classes to reflect the new architecture."!!TMetaSend commentStamp: 'das 10/18/2004 09:01' prior: 51948872!See TMeta comment.!!TMeta commentStamp: 'das 10/18/2004 09:00' prior: 51943876!***** Meta *****David A. SmithThis set of classes implements "meta", which is an extension to the syntax of Croquet and the TeaTime collaboration architecture. To use it, you simply add meta between the object and it's message. The messages of interest are:*************  meta  **************To send a message locally and remotely simply do:	tframe meta translationX: 1 y: 2 z: 3.	tframe meta setSolid: true.	tframe meta addChild: newFrame.Warning: the following (and messages like it) will NOT work.	tframe meta localTransform rotateAroundY: 32.The reason is the meta message that gets sent is #localTransform. This returns a pure B3DMatrix4x4 that knows nothing about teatime. But of course, this:	tframe meta localTransform: (tframe localTransform rotateAroundY: 32)works just fine.*************  metaSend  **************To send a message remotely only do:	tframe metaSend localTransform: trans.	tframe metaSend translation: (1@2@3).This does nothing locally.*************  Class meta  **************To construct local and remote objects do:	tframe := TRover meta new.	tframe meta initialize: glx terrain: terrain.	tframe meta translation: (self translation)+(10@0@0).or this:	tframe := TRover meta new meta initialize: glx terrain: terrain.	tframe meta translation: (self translation)+(10@0@0).You can use meta to send messages to remote classes as well. Hence, 	TRover meta new.is actually a message sent to the class TRover.The second meta is sent to the result of the construction - or the TRover object.!!TObject commentStamp: 'das 10/18/2004 09:01' prior: 52019321!Base class for Croquet objects. Supports the construction and message handling of the Croquet collaboration architecture.!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #94] on 18 October 2004 at 10:19:32 am'!"Change Set:		LazySusanDate:			18 October 2004Author:			David A. SmithNeeded meta sends"!!TLazySusan methodsFor: 'events' stamp: 'das 10/18/2004 10:11' prior: 51822224!keyDown: pointer		| c |	c_pointer event2D keyCharacter.	c _ c asInteger - $0 asInteger.	(c >=0 and: [c<=9]) ifTrue:[contents meta value: c.].	^ true.! !!TLazySusan methodsFor: 'events' stamp: 'das 10/18/2004 10:11' prior: 51822441!keyStroke: pointer		| c |	c_pointer event2D keyCharacter.	c _ c asInteger - $0 asInteger.	(c >=0 and: [c<=9]) ifTrue:[contents meta value: c.].	^ true.! !!TLazySusan methodsFor: 'events' stamp: 'das 10/18/2004 10:12' prior: 51822660!pointerDown: pointer"	dalpha _ dalpha negated."	pointer event2D shiftPressed ifTrue:[].	selectedPoint _ pointer selectedPoint.	tinyCube translation: selectedPoint.	tinyCube visible: true.	matDown ifNotNil:[		contents material: matDown.		contents materialAlpha: nil.].	cameraNorm _ (pointer camera frameLookAt: self) negated.	selectedNorm _ pointer selectedNormal.	selectedRadiusSquared _ selectedPoint dot: selectedPoint.	self meta spin: nil.	self meta localTransform: self localTransform.	^ true.! !!TLazySusan methodsFor: 'events' stamp: 'das 10/18/2004 10:13' prior: 51823473!pointerMove: pointer	| delta trans spfrom spto deltaLoc theta radius |	pointer event2D shiftPressed ifTrue:[		(pointer frame: self pickPlane: selectedPoint normal: cameraNorm) ifTrue:[			delta _ selectedPoint - pointer selectedPoint.			self meta translation: (self translation - (self orientation localPointToGlobal: delta)).		^ true.]. ^ false.].		" Rotate around the y-axis "		radius _ selectedRadiusSquared sqrt.		(pointer frame: self pickCylinderFrom: (B3DVector3 x: 0.0 y: 100.0 z: 0.0)				to: (B3DVector3 x: 0.0 y: -100.0 z: 0.0) radius: radius)			ifFalse: [ "we are not on the cylinder anymore...."			delta _ 2*radius.			(pointer framePointer row1 dot: (pointer framePosition))  > 0 				ifFalse:[  delta _ delta negated.].			deltaLoc _ pointer framePointer row1 * delta.			(pointer frame: self pickCylinderFrom: (B3DVector3 x: deltaLoc x y: 100.0 z: deltaLoc z)				to: (B3DVector3 x: deltaLoc x y: -100.0 z: deltaLoc z) radius: radius)				ifFalse:[^ false.].			spto _ pointer selectedPoint copy- deltaLoc.			spto x: spto x negated				y: 0				z: spto z negated.			]	ifTrue: [spto _ pointer selectedPoint copy.].	spfrom _ selectedPoint copy.	spfrom y: 0.0.	spfrom normalize.	spto y: 0.0.	spto normalize.	theta _ ((spfrom z * spto x) - (spto z * spfrom x))"/selectedRadiusSquared".	theta < -1.0 ifTrue:[theta_ -1.0].	theta > 1.0 ifTrue:[theta _ 1.0].	theta _ theta arcSin radiansToDegrees/2.0.	lastSpin _ B3DMatrix4x4 identity rotationAroundY: theta.	trans _ self translation.	self translationX: 0.0 y:0.0 z:0.0.	self localTransform: (self localTransform composeWith: lastSpin).	self translation: trans.	self metaSend localTransform: localTransform clone.	^ true.! !!TLazySusan methodsFor: 'events' stamp: 'das 10/18/2004 10:17' prior: 51825297!pointerUp: pointer	matNorm ifNotNil:[contents material: matNorm.].	tinyCube visible: false.	self meta spin: lastSpin.	lastSpin _  nil.	^ true.! !!TLazySusan methodsFor: 'accessing' stamp: 'das 10/18/2004 10:15' prior: 33823090!spin: aNumber	spin _ aNumber.	spin = 0 ifTrue:[self stopStepping] ifFalse:[self startStepping].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #95] on 18 October 2004 at 11:01:08 am'!"Change Set:		FixUrlAgain3Date:			18 October 2004Author:			Andreas RaabA third attempt at fixing FileUrl>>pathForFile."!!FileDirectory methodsFor: '*Croquet' stamp: 'ar 10/13/2004 17:54' prior: 33716396!pathFromUrl: aFileUrl	| first |	^String streamContents: [ :s |		first := false.		aFileUrl path do: [ :p |			first ifTrue: [ s nextPut: self pathNameDelimiter ].			first _ true.			s nextPutAll: p ] ].! !!FileUrl methodsFor: 'access' stamp: 'ar 10/13/2004 17:54' prior: 33716682!pathForFile	"Path using local file system's delimiter.  $\ or $:"	^FileDirectory default pathFromUrl: self! !!UnixFileDirectory methodsFor: '*Croquet' stamp: 'ar 10/18/2004 10:58' prior: 33716866!pathFromUrl: aFileUrl	^'/', (super pathFromUrl: aFileUrl)! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #96] on 18 October 2004 at 11:20:16 pm'!"Change Set:		FixMorphHandsDate:			18 October 2004Author:			Andreas RaabRemove the hands when we switch between projects."!!TMorphMonitor methodsFor: 'project switches' stamp: 'ar 10/18/2004 23:16' prior: 52013156!enter: returnFlag project: aProject	| oldProject ptrHand |	oldProject := world project.	aProject == oldProject ifTrue:[^self].	aProject mayEnterTeaProject ifFalse:[^self].	world canvas: nil.	oldProject leaveTeaProject.	hands keys do:[:ptr|		ptrHand := hands at: ptr.		ptrHand world removeHand: ptr.		hands removeKey: ptr.	].	aProject enterTeaProject.	world := aProject world.	world viewBox: (0@0 extent: form extent "* self uvScale").	world canvas: (TWorldCanvas on: self).	world fullDrawOn: world canvas.	world canvas finish.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #97] on 18 October 2004 at 11:53:03 pm'!"Change Set:		FixIntoWorldDate:			18 October 2004Author:			Andreas RaabAdd a workaround for the broken intoWorld:/outOfWorld: notification in Squeak 3.6 which I cannot possibly be bothered to fix properly."!Morph subclass: #TeapotMorph	instanceVariableNames: 'inWorld ogl txtr activeCamera avatarPath pdaClient loader statusString myImage widgetDictionary dock myColor messenger people messageList mutex '	classVariableNames: 'Current '	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Morphic'!!TeapotMorph methodsFor: 'drawing' stamp: 'ar 10/18/2004 23:53' prior: 52849448!drawOn: aCanvas	"Figure out if we can use HWA or if we need to punt"	inWorld == true ifFalse:[		"Squeak 3.6 has a horrible bug in the intoWorld:/outOfWorld: notification which we use to suspend and restore hardware accelleration. The problem shows by being sent #outOfWorld: once too often, thereby loosing the notifications about project enter/leave. What we do here is using the fact that rarely ever a teapot will be redrawn when it is not inside a world and treat that as a trigger to check whether we have unexpectedly reappeared in the world. If so, we call intoWorld: manually."		| w |		(w := self world) ifNotNil:[self intoWorld: w].	].	(aCanvas form == Display and:[self accelerationEnabled and:[self isFlexed not]])		ifTrue:[self drawAcceleratedOn: aCanvas]		ifFalse:[self drawSimulatedOn: aCanvas].! !!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/18/2004 23:42' prior: 33693786!initialize	| logo space avatar |	super initialize.	inWorld := false.	mutex _ Semaphore forMutualExclusion.	TeaHost initHostName.	CroquetGlobals theTeapotMorph: self.	CroquetGlobals snapshots: OrderedCollection new.	messageList _ SortedCollection sortBlock:[:m1 :m2 | m1 teaTime < m2 teaTime].	self registerTeaObject: nil.	self registerTeaObject: self.	people := OrderedCollection new.	myColor _ {2 atRandom-1. 2 atRandom-1. 2 atRandom-1. 1.0}asFloatArray.	self clipSubmorphs: true.	self scriptScheduler: ScriptScheduler new.	self scriptScheduler runActiveScripts. "to get started"	Current _ self.	self accelerationEnabled: true.	self		color: (Color				r: 0.7				g: 0.9				b: 1.0).	bounds _ 0 @ 0 corner: 640 @ 480.	"Temporary hostName""	TeaHost pushHostName: UUID new asString."	space _ TSpace new.	activeCamera _ TUserCamera new initializeWithViewPort: self.	activeCamera viewClip: false.	avatarPath := #('Content' 'Alice' 'Animals' 'WhiteRabbit.mdl').	avatar _ TAvatar new.	avatar loadAvatar: avatarPath.	avatar translationX: 0 y: 0 z: 30.	space addChild: avatar.	activeCamera avatar: avatar.	logo _ TTexture				new initializeWithFileName: 'squeaklogo2.bmp'				mipmap: true				shrinkFit: false.	activeCamera texture: logo.	activeCamera translationX: 0 y: 0 z: 30.	"self openConnectionDialog."	self addZoomNavigator.	TeaHost popHostName.	TeaHost initHostName.	space _ TSpace new.	self makeLight: space."	self makeFloor: space fileName:'stone.BMP'."	avatar enter: space.	self setProperty: #openTeaFileOnDrop toValue: true.! !!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/18/2004 23:50' prior: 52862625!intoWorld: aWorld	"The receiver is showing in the given world"	aWorld ifNil:[^self].	super intoWorld: aWorld.	aWorld when: #aboutToLeaveWorld send: #suspendAcceleration to: self.	aWorld when: #aboutToEnterWorld send: #restoreAcceleration to: self.	inWorld := true.	self restoreAcceleration.! !!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/18/2004 23:50' prior: 52865572!outOfWorld: aWorld	"The receiver is leaving the given world"	aWorld ifNil:[^self].	self suspendAcceleration.	inWorld := false.	aWorld removeActionsWithReceiver: self.	super outOfWorld: aWorld.! !!TeapotMorph methodsFor: 'step' stamp: 'ar 10/18/2004 23:49' prior: 52871168!step	| now last |	self checkMessages.	ogl ifNil:[		self accelerationEnabled ifTrue:[self changed].		^nil].	self fpsMorph ifNotNil:[self fpsMorph step].	now _ TeaTime now.	last _ self valueOfProperty: #lastStepTime ifAbsent:[now].	self setProperty: #lastStepTime toValue: now."	delta _ now - last.	delta > 0 ifTrue:[		df _ (self valueOfProperty: #fwdSpeed ifAbsent:[0]) * delta * 0.001.		dt _ (self valueOfProperty: #turnSpeed ifAbsent:[0]) * delta * 0.001.		ogl activeCamera forwardOnY: df.		ogl activeCamera yaw: dt.	]."	pdaClient ifNotNil:[self updatePDAClient].	self changed.	loader ifNotNil:[		loader stepFor: 100.		statusString := loader currentUrl.		statusString ifNotNil:[statusString := 'Loading ', statusString,'...'].		loader isDone ifTrue:[loader := nil. statusString := nil].	].	"NOTE: When tweakWorld is present its scheduler is aliased to my scheduler.	All script activity is then run from there."	self tweakWorld ifNil:[		self scriptScheduler ifNotNilDo:[:scheduler| scheduler runActiveScripts].	] ifNotNil:[		self runTweakCycle.	]."	activeCamera avatar meta driveStep.""	activeCamera avatar meta localTransform: activeCamera avatar localTransform."! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #95] on 19 October 2004 at 9:38:49 am'!"Change Set:		AvatarInfoDate:			19 October 2004Author:			David A. SmithThis adds back the avatar info overlay. It does NOT work on the Mac properly. Some kind of rendering issue, but we had this before and it is a different bug."!!TAvatar methodsFor: 'initialize' stamp: 'das 10/19/2004 08:40' prior: 33636939!initialize	| downMatrix |	super initialize.	sticky _ false.	doRender _ true.	carrying _ nil.	height _ 4.6.	lastDownPosition _ B3DVector3 new.	footFrame _ TGroup new.	footFrame singleParent: true.	gotoCount _ 0.	driving _ false.	controlPitch _ false.	currentSpace _ nil.	laser _ TLaser new.	laser translation:(B3DVector3 x: 0.5 y:-0.3 z:-0.2).	laser length: 0.5.	self addChild: laser.	transparency _ 1.0.	downMatrix _ B3DMatrix4x4 identity rotationAroundX: -90.	downPointer _ TRay new.	downPointer localTransform: downMatrix.	downPointer downRay: true.	self addChild: downPointer.	self fall.	pointer _ TPointer new.	camera _ TCamera new.	camera addChild: pointer.	pointer camera: camera.	pointer avatar: self.	self startScript: #showIDScript when:{self. #pointerEnter}.	^self! !!TAvatar methodsFor: 'events' stamp: 'das 10/19/2004 09:02'!showIDScript	" This script is triggered on pointer enter"	| myText |	myText := TPrimitiveText new initialize.	myText text: 'Name: ' asText allBold, nickname printString, ' Host: ' asText allBold, host printString.	myText textAlign: #bottomCenter.	myText translationX: 0 y: 1 z: 0.	self addChild: myText.	" wait until mouse leaves "	self waitUntil: #pointerLeave.	self removeChild: myText.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #99] on 19 October 2004 at 10:47:33 am'!"Change Set:		TTapestry5Date:			19 October 2004Author:			David A. SmithAdd a restoration point to the flag. The flag uses 0.0 TMass mass values as infinite - they don't move. We can release a point by setting it to a non-zero value, and can freeze it in place by setting it to 0. Usually, we want to have it freeze in it's original position. This code will restore it to that position properly. The corners of the TTapestry object are more readily available now."!Object subclass: #TMass	instanceVariableNames: 'location velocity mass force uv normal iLocation '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs texture tuv normals boundSphere time wire xsize ysize topRight bottomLeft topLeft bottomRight '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!!TTapestry commentStamp: 'das 10/19/2004 10:46' prior: 33730318!TTapestry is a simpler version of the TFlag object. It is made up of three clases that are working together - this class is the main one, and sets up and uses the other two. These are:TMass, which includes information about the mass of the object and controls it's trajectories, and TSpring, which controls the spring relationship between two masses.The four corners of the TTapestry are available as topLeft, bottomLeft, topRight, bottomRight.The #compute method is where the real action happens.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe.DAS!!TMass methodsFor: 'accessing' stamp: 'das 10/19/2004 09:51' prior: 33731757!location: loc	location _ loc.	iLocation _ loc.	velocity _ 0@0@0.	force _ 0@0@0.! !!TMass methodsFor: 'compute' stamp: 'das 10/19/2004 10:40' prior: 33781350!compute	| accel t v l |	mass ~= 0.0 ifTrue:[		t _ 0.03.		accel _ force. " mass = 1.0"		velocity _ velocity + (0.90 *accel * t). "acceleration increases velocity"		velocity _ velocity * 0.995.  "damp velocity"		location _ location + (velocity * t). "change location"	] ifFalse:[		location ~= iLocation ifTrue:[			"move the point slowly towards the iLocation"			v _ (iLocation - location).			l _ v length.			l <= 0.02 ifTrue:[location _ iLocation]			ifFalse:[				location := location + (0.06*v/l).			].		].	].	force _ 0.0@0.0@0.0.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/19/2004 10:27' prior: 33769140!reset	| m s scl |	masses _ OrderedCollection new.	springs _ OrderedCollection new.	tuv _ OrderedCollection new.	xsize _ 15.	ysize _ 10.	scl _ 0.5.	1 to: xsize do:[:i |		1 to: ysize do:[:j |			m _ TMass new.			m force: 0@0@0.			m location: scl*((i-1)@(j-1)@0).			m mass: 1.0.			m uv: ((m location x/(xsize-1))@(1-(m location y/(ysize-1))))/scl.			m normal: (0@0@1).			masses add: m.		].	].	1 to: xsize do:[:i |		1 to: ysize do:[:j |			j~=ysize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i-1*ysize+j+1).				springs add: s.				].			i~=xsize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i*ysize+j).				springs add: s.				].			(i ~= xsize and:[j~=ysize])ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j+1) mass: (masses at:i*ysize+j).				springs add: s.					].		"	s _ TSpring new.			s mass: (masses at:i-1*xsize+j+1) mass: (masses at:i*xsize+j).			springs add: s."		]	].	topLeft _ masses at:ysize.	topRight _ masses at: masses size.	bottomLeft _ masses at:1.	bottomRight _ masses at: masses size -ysize+1."set the tack points""	(masses at: 1) mass:0.0."	(masses at: ysize) mass:0.0.	(masses at: masses size) mass:0.0.	boundSphere _ TBoundSphere new.	boundSphere frame: self.	self initBounds.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/19/2004 10:46'!bottomLeft	^ bottomLeft.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/19/2004 10:46'!bottomRight	^ bottomRight.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/19/2004 10:46'!topLeft	^ topLeft.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/19/2004 10:46'!topRight	^ topRight.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/19/2004 10:39' prior: 33782830!compute	true ifTrue:[ self addWind: 0.7.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute:-500.0. ]. "set the -k value"		masses do:[ :m | m compute. ].		].		self initBounds.	self future: 20 perform: #compute.! !TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs texture tuv normals boundSphere time wire xsize ysize topLeft topRight bottomLeft bottomRight '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!Object subclass: #TMass	instanceVariableNames: 'location iLocation velocity mass force uv normal '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!----End fileIn of a stream----!----SNAPSHOT----#(19 October 2004 10:28:01 am) Croquet0.1-100-FlagTest.image priorSource: 219602!----QUIT----#(19 October 2004 10:28:07 am) Croquet0.1-100-FlagTest.image priorSource: 291846!----STARTUP----#(19 October 2004 1:33:34 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-100-FlagTest.image!'From Vancouver1.0 of 28 September 2004 [latest update: #311] on 19 October 2004 at 12:18:03 pm'!----STARTUP----#(20 October 2004 3:18:14 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-100-FlagTest.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #100] on 19 October 2004 at 10:33:51 pm'!"Change Set:		TransformHellDate:			19 October 2004Author:			David A. SmithThis fixes a number of selection bugs that I just noticed when I was trying to improve performance. Notably, you could not select buttons in mirrors or through portals before - though no one noticed, and dragging windows around in portals and mirrors was incorrect - though no one noticed this either. The main reason I fixed this is because the overlay buttons were undergoing a full global transform every frame, which was somewhat expensive. Not a big deal, but I am trying to eliminate all possible performance drags. This is not optimization - there is really a bug here somewhere."!!TSelection commentStamp: 'das 10/19/2004 22:28' prior: 33624498!TSelection is a holder for data generated by the ray testing in Croquet. See TRay.object - this is the frame object ownerframe - this is the frame object that is selected.framePosition - this is the ray location relative to the selected object.parent - this is the parent of the selectedFrame at the time of rendering/selection.parentCameraTransform - this is the transform of the camera frame at selection timedistance - this is the distance from the ray position.distanceSquared - this is the squared distance from the ray position.index - this may be used by the selectedObject. It is usually the surface index.normal - this is the surface normal at the selectedPoint.point - this is the selected point in the local selectedFrame reference.triangle - used by TSelectionTrackercameraTransform - used to copy the current camera transform between pointers. A hack.DAS!TGroup subclass: #TWindow	instanceVariableNames: 'windowFrame windowButtons rectFront rectBack splitRect frameOn tinyCube alpha dalpha matNorm matOver matDown matRectNorm matRectOver matRectDown matHilite matTiny selectedPoint selectedFrame pointerXY selectedNorm selectedObject cameraNorm selectedRadiusSquared selectedRadius eventNum spin lastSpin spinTime lastTime deltaTime contents saveContents contentsOn isBrowser contents3D '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Window'!!B3DMatrix4x4 methodsFor: 'row-access' stamp: 'das 10/19/2004 22:00'!lookAt	"Return column 3"	^ (B3DVector3 x: (self a13) y: (self a23) z: (self a33)).! !!B3DMatrix4x4 methodsFor: 'row-access' stamp: 'das 10/19/2004 22:01'!lookSide	"Return column 1"	^ (B3DVector3 x: (self a11) y: (self a21) z: (self a31)).! !!B3DMatrix4x4 methodsFor: 'row-access' stamp: 'das 10/19/2004 22:01'!lookUp	"Return column 2"	^ (B3DVector3 x: (self a12) y: (self a22) z: (self a32)).! !!TOverlayButtons methodsFor: 'render' stamp: 'das 10/19/2004 22:05' prior: 52025145!renderOverlay: ogl	| ac currentFrame currentDistance gt |	ac _ ogl camera.	gt _ ac globalTransform.	ac globalTransform: B3DMatrix4x4 identity.	ac pointer globalTransform: ac pointer localTransform."	camLoc localTransform: ac globalTransform."" Save the current frame and current distance if we don't find one of the buttons."	currentFrame _ ac pointer selectedFrame.	currentDistance _ ac pointer selectedDistance.	ac pointer selectedDistance: Float infinity.	space renderSpace: ogl."If this is still the same frame as before, restore the distance value."	ac pointer selectedFrame = currentFrame ifTrue:[		ac pointer selectedDistance: currentDistance].	ac globalTransform: gt.! !!TRay methodsFor: 'accessing' stamp: 'das 10/19/2004 22:27'!selectedCameraTransform	^ selection parentCameraTransform.! !!TRay methodsFor: 'accessing' stamp: 'das 10/19/2004 22:26'!selectedCameraTransform: spt	selection parentCameraTransform: spt.! !!TRay methodsFor: 'picking' stamp: 'das 10/19/2004 21:56' prior: 52161917!pointerPick: bnds	| position frame gpAt dp d |	doSelect ifTrue:[		bnds ifNil:[^ false.].		bnds frame objectOwner isComponent ifTrue:[			position _ bnds globalPosition - self globalPosition.			self selectedDistance > ((position length - bnds radius) * CroquetGlobals frameScale) ifTrue:[				gpAt _ self globalTransform column3.				dp _ position - ((gpAt dot: position)*gpAt).				d _ dp dot: dp.				d < bnds radiusSquared ifFalse:[ ^ false ].				self sphereDistSquared: d.				frame _ bnds frame.				self currentFrame: frame.				(frame pick: self) ifTrue:[					self selectedPoint ifNil:[self selectedPoint: B3DVector3 new.].					self selectedFrame: frame.					self selectedParent: frame parent.					self selectedFramePosition:  self framePosition.					self selectedObject: frame objectOwner.					self selectedCameraTransform: self parent globalTransform.					^ true.					].				].			].		].	^ false.! !!TRay methodsFor: 'picking' stamp: 'das 10/19/2004 21:56' prior: 52163232!pointerPickTree: frame	| rval trans |	rval _ false.	trans _ self selectedCameraTransform.	frame visible ifTrue:[(self pointerPick: frame boundSphere) ifTrue:[ rval _ true].].	frame frameChildren ifNotNil:[		frame frameChildren do:[ :fc | (self pointerPickTree: fc) ifTrue:[rval _ true.].].].	self selectedCameraTransform: trans.	^ rval.! !!TPointer methodsFor: 'events' stamp: 'das 10/19/2004 21:55' prior: 52083956!pointerMove: evt	| cf frame gt spt |	self signal: #pointerMove with: self.	self event2D: evt.	(frame := self selectedObject) ifNotNil:[		frame isComponent ifTrue:[			(frame handlesPointerDown: self) ifTrue:[				self testDistance: false.				cf _ self currentFrame.				cf ifNotNil:[					cf pick: self.].				tool ifNotNil:[tool pointerMove: self.].				(spt _ self selectedCameraTransform) ifNotNil:[					gt _ self globalTransform.					self globalTransform: (spt composeWith: (self localTransform)).					frame pointerMove: self.					self globalTransform: gt.] 				ifNil: [ frame pointerMove: self.].				self currentFrame: cf.				self testDistance: true.]]]."	popUpUp ifTrue:[		selectedObject _ nil.		self pointerPick: popUp.		selectedObject = lastSelectedObject ifTrue:[			selectedObject = popUp ifTrue:[popUp pointerOver: self].]		ifFalse:[				Smalltalk beep.				lastSelectedObject _ selectedObject.				selectedObject = popUp ifTrue:[popUp pointerEnter: self].				lastSelectedObject = popUp ifTrue:[popUp pointerLeave: self].].]."! !!TPointer methodsFor: 'events' stamp: 'das 10/19/2004 22:13' prior: 52085363!pointerUp: evt	| frame spt gt |	self signal: #pointerUp with: self.	self event2D: evt.	spellClass ifNotNil:["need to test that the pointer is still over the object we are about to select here"		spellClass castSpell: self.		spellClass _ nil.		tool ifNotNil:[tool setSpell: false.].		doSelect _ true.		self resetTotal.		^ false.		].	isDown ifTrue:[		isDown _ false.		(frame := self selectedObject) ifNotNil:[			frame isComponent ifTrue:[				(frame handlesPointerDown: self) ifTrue:[					isDown _ false.					tool ifNotNil:[tool pointerUp:[self.].].				(spt _ self selectedCameraTransform) ifNotNil:[					gt _ self globalTransform.					self globalTransform: (spt composeWith: (self localTransform)).					frame pointerUp: self.					self globalTransform: gt.] 				ifNil: [ frame pointerUp: self.].]		]]].	doSelect _ true.	self resetTotal.! !!TSelection methodsFor: 'accessing' stamp: 'das 10/19/2004 22:27'!parentCameraTransform	^ parentTransform.! !!TSelection methodsFor: 'accessing' stamp: 'das 10/19/2004 22:26'!parentCameraTransform: pt	parentTransform _ pt.! !!TWindow methodsFor: 'actions' stamp: 'das 10/19/2004 22:22' prior: 52571551!moveWindow: pointer	| delta  |	(pointer frame: self pickPlane: selectedPoint normal: 		(self inverseGlobalOrientation localPointToGlobal: 		pointer selectedCameraTransform lookAt negated)) ifTrue:[		delta _ selectedPoint - pointer selectedPoint.		self meta translation: (self translation - (self orientation localPointToGlobal: delta)).		^ true.].	^ false.! !!TWindow methodsFor: 'actions' stamp: 'das 10/19/2004 22:22' prior: 33747440!zoomWindow: pointer 	"This allows you to pull a window towards you."	| delta p0 i0 i1 t p newTranslation plainNormal |	(pointer frame: self pickPlane: selectedPoint normal: 		(self inverseGlobalOrientation localPointToGlobal: 		pointer selectedCameraTransform lookAt negated)) ifTrue:[			"assumed just horizontal"			plainNormal _ 0 @ 1 @ 0.			"plainNormal _ pointer camera localToGlobal: (0@1@0)."			p0 _ self localToGlobal: selectedPoint.			i0 _ pointer globalPosition.			i1 _ pointer globalTransform localPointToGlobal: 0 @ 0 @ 1.			[t _ (p0 - i0 dot: plainNormal) / (i1 - i0 dot: plainNormal)]				on: ZeroDivide do: [^ false].			p _ i0 + (t abs negated * (i1 - i0)).			delta _ p - p0.			newTranslation _ self translation + delta.			(pointer globalToLocal: newTranslation) z < pointer camera zScreen negated				ifTrue: ["self moveWindow: pointer."					^ true].			self meta translation: newTranslation.			^ true].	^ false! !!TWindow methodsFor: 'events' stamp: 'das 10/19/2004 22:02' prior: 52579855!pointerDown: pointer"	pointer event2D shiftPressed ifTrue:[		self meta switchContents.		rectFront material: matRectDown.		^ true.]."	selectedFrame _ pointer selectedFrame.	selectedFrame isComponent ifTrue:[ selectedFrame pointerDown: pointer].	selectedPoint _ pointer selectedPoint copy.	selectedFrame = windowFrame ifTrue:[ 		eventNum _ pointer selectedIndex.		selectedRadiusSquared _ 			(selectedPoint x * selectedPoint x) + (selectedPoint z * selectedPoint z).		selectedRadius _ selectedRadiusSquared sqrt.		tinyCube translation: selectedPoint.		tinyCube visible: true.	] ifFalse:[ eventNum _ 0.].	windowFrame material: matDown."	windowFrame materialAlpha: nil."	rectFront material: matRectDown."	rectFront materialAlpha: nil."	rectBack material: matRectDown.	"	rectBack materialAlpha: nil."	selectedNorm _ pointer selectedNormal.	self metaSend localTransform: self localTransform.	self meta spin: nil.	lastSpin _ nil.	lastTime _ TeaTime now asFloat.	^ true.! !TGroup subclass: #TWindow	instanceVariableNames: 'windowFrame windowButtons rectFront rectBack splitRect frameOn tinyCube alpha dalpha matNorm matOver matDown matRectNorm matRectOver matRectDown matHilite matTiny selectedPoint selectedFrame pointerXY selectedNorm selectedObject selectedRadiusSquared selectedRadius eventNum spin lastSpin spinTime lastTime deltaTime contents saveContents contentsOn isBrowser contents3D '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Window'!TSelection removeSelector: #parentTransform!TSelection removeSelector: #parentTransform!TSelection removeSelector: #parentTransform:!TSelection removeSelector: #parentTransform:!TRay removeSelector: #selectedParentTransform!TRay removeSelector: #selectedParentTransform!TRay removeSelector: #selectedParentTransform:!TRay removeSelector: #selectedParentTransform:!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #101] on 19 October 2004 at 11:55:08 pm'!"Change Set:		FixMacTextDate:			19 October 2004Author:			Joshua GargusFixes the problem with displaying OGL text on big-endian machines (aka: Macs)."!!OGLFontManager methodsFor: 'displaying' stamp: 'jcg 10/20/2004 01:06' prior: 28901158!uploadFont: aFont	| glFontID form |	glFontID := glx glGenLists: 256.	0 to: 255 do:[:i|		form := aFont characterFormAt: (i asCharacter).		form flipVertically.		Smalltalk isLittleEndian ifTrue: [form bits swapEndianness].		glx glNewList: glFontID+i with: GLCompile.		glx glBitmap: form width			with: form height			with: 0			with: 0			with: form width			with: 0			with: form bits.		glx glEndList.	].	^glFontID! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #101] on 20 October 2004 at 12:06:12 am'!"Change Set:		DisableXTermDate:			20 October 2004Author:			Andreas RaabDisable the Xterm since it only works on hacked X-servers which are not very widely available."!!TOverlayButtons methodsFor: 'popups' stamp: 'ar 10/20/2004 00:05' prior: 33797461!makeXTerminal: ptr	"here we need to make an X terminal that can be opened"	"since this user is the one who must connect it up, we can use a regular Morph	to capture the display id, eventually.  For now, just assume a display ID of :1"	true ifTrue:["---- ar 10/20/2004: Disabled this for now. It works on no platform I know about and we get endless bug reports about crashes when people accidentally try it. If you re-enable this at some point please make sure this is bullet proof ----"		Smalltalk beep.		^self killPopup].	self makeX: ptr display: ':1'.	self killPopup.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #101] on 20 October 2004 at 12:11:49 am'!"Change Set:		FixCollapseDate:			20 October 2004Author:			Andreas RaabMake Teapot collapse work."!Morph subclass: #TeapotMorph	instanceVariableNames: 'inWorld splDelete ogl txtr activeCamera avatarPath pdaClient loader statusString myImage widgetDictionary dock myColor messenger people messageList mutex '	classVariableNames: 'Current '	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Morphic'!!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/20/2004 00:10'!collapse	splDelete := true.	[super collapse] ensure:[splDelete := false].! !!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/20/2004 00:09' prior: 52858656!delete	"Are we in a special delete operation?"	splDelete ifTrue:[^super delete].	activeCamera avatar meta destroy.	Current == self ifTrue:[Current _ nil].	CroquetGlobals snapshots: nil.	self teaParty ifNotNil: [		self teaParty resign. 		"TeaPartyStats _ self teaParty selectorHistogram"].	self localTeaHost ifNotNil: [		self localTeaHost shutdown.		"TeaHostStats _ self localTeaHost selectorHistogram."		"TeaHostTraffic _ self localTeaHost networkStatistics"].	ogl ifNotNil:[		activeCamera ifNotNil:[			activeCamera endChat.]].	ogl ifNotNil: [		"texture delete: gl." 		ogl destroy.		ogl _ nil.].	super delete.	self tweakWorld 		ifNil:[self scriptScheduler shutDown]		ifNotNil:[self shutdownTweakWorld].	CroquetGlobals theTeapotMorph: nil.	TCleanup run.! !!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/20/2004 00:10' prior: 33835893!initialize	| logo space avatar |	super initialize.	splDelete := false.	inWorld := false.	mutex _ Semaphore forMutualExclusion.	TeaHost initHostName.	CroquetGlobals theTeapotMorph: self.	CroquetGlobals snapshots: OrderedCollection new.	messageList _ SortedCollection sortBlock:[:m1 :m2 | m1 teaTime < m2 teaTime].	self registerTeaObject: nil.	self registerTeaObject: self.	people := OrderedCollection new.	myColor _ {2 atRandom-1. 2 atRandom-1. 2 atRandom-1. 1.0}asFloatArray.	self clipSubmorphs: true.	self scriptScheduler: ScriptScheduler new.	self scriptScheduler runActiveScripts. "to get started"	Current _ self.	self accelerationEnabled: true.	self		color: (Color				r: 0.7				g: 0.9				b: 1.0).	bounds _ 0 @ 0 corner: 640 @ 480.	"Temporary hostName""	TeaHost pushHostName: UUID new asString."	space _ TSpace new.	activeCamera _ TUserCamera new initializeWithViewPort: self.	activeCamera viewClip: false.	avatarPath := #('Content' 'Alice' 'Animals' 'WhiteRabbit.mdl').	avatar _ TAvatar new.	avatar loadAvatar: avatarPath.	avatar translationX: 0 y: 0 z: 30.	space addChild: avatar.	activeCamera avatar: avatar.	logo _ TTexture				new initializeWithFileName: 'squeaklogo2.bmp'				mipmap: true				shrinkFit: false.	activeCamera texture: logo.	activeCamera translationX: 0 y: 0 z: 30.	"self openConnectionDialog."	self addZoomNavigator.	TeaHost popHostName.	TeaHost initHostName.	space _ TSpace new.	self makeLight: space."	self makeFloor: space fileName:'stone.BMP'."	avatar enter: space.	self setProperty: #openTeaFileOnDrop toValue: true.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #96] on 20 October 2004 at 1:18:28 pm'!"Change Set:		MorphicCachingDate:			20 October 2004Author:			Andreas RaabThis CS uses morph texture backed rendering just like for tweak. This simplifies a whole lot of other issues."!Object subclass: #MorphCache	instanceVariableNames: 'valid form damageRecorder '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Morphic'!Morph subclass: #TeaBackingMorph	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Morphs'!!Canvas methodsFor: '*Croquet' stamp: 'ar 10/20/2004 11:54' prior: 21448976!cache: aRectangle using: aCache during: aBlock 	"Cache the execution of aBlock by the given cache.	Note: At some point we may want to actually *create* the cache here;		for now we're only using it."	aCache class == MorphCache ifTrue:[^aCache drawCached: aBlock on: self in: aRectangle].	(aCache notNil 		and: [(aCache isForm) and: [aCache extent = aRectangle extent]]) 			ifTrue: [^self paintImage: aCache at: aRectangle origin].	aBlock value: self! !!Morph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 11:54' prior: 28181298!fullDrawOn: aCanvas	"Draw the full Morphic structure on the given Canvas"	self visible ifFalse: [^ self].	(aCanvas isVisible: self fullBounds) ifFalse:[^self].	(self hasProperty: #errorOnDraw) ifTrue:[^self drawErrorOn: aCanvas].	"Note: At some point we should generalize this into some sort of 	multi-canvas so that we can cross-optimize some drawing operations."	"Pass 1: Draw eventual drop-shadow"	self hasDropShadow ifTrue: [self drawDropShadowOn: aCanvas].	(self hasRolloverBorder and: [(aCanvas seesNothingOutside: self bounds) not])		ifTrue: [self drawRolloverBorderOn: aCanvas].	"Pass 2: Draw receiver itself"	aCanvas cache: self fullBounds using: self localCache during:[:cc|		cc roundCornersOf: self during:[			(cc isVisible: self bounds) ifTrue:[cc drawMorph: self].			self drawSubmorphsOn: cc.			self drawDropHighlightOn: cc.			self drawMouseDownHighlightOn: cc]].! !!Morph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 11:55' prior: 28153795!invalidRect: aRectangle from: aMorph	| damageRect cache |	damageRect _ aRectangle.	aMorph == self ifFalse:[		"Clip to receiver's clipping bounds if the damage came from a child"		self clipSubmorphs 			ifTrue:[damageRect _ aRectangle intersect: self clippingBounds]].	"Notify our cache if any"	(cache := self localCache) ifNotNil:[cache invalidate: damageRect].	owner ifNotNil: [owner invalidRect: damageRect from: self].	self wonderlandTexture ifNotNil:[self isValidWonderlandTexture: false].! !!Morph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 11:55'!localCache	extension == nil ifTrue:[^nil].	^self valueOfProperty: #localCache ifAbsent:[nil].! !!Morph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 11:55'!localCache: aMorphCache	extension == nil ifTrue:[^nil].	^self setProperty: #localCache toValue: aMorphCache! !!Morph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 09:32'!localFullBounds	^self fullBounds! !!Morph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 11:56'!localFullDrawOn: aCanvas	"Draw the full Morphic structure on the given Canvas"	self visible ifFalse: [^ self].	(aCanvas isVisible: self fullBounds) ifFalse:[^self].	"Pass 1: Draw eventual drop-shadow"	self hasDropShadow ifTrue: [self drawDropShadowOn: aCanvas].	(self hasRolloverBorder and: [(aCanvas seesNothingOutside: self bounds) not])		ifTrue: [self drawRolloverBorderOn: aCanvas].	"Pass 2: Draw receiver itself"	aCanvas roundCornersOf: self during:[		(aCanvas isVisible: self bounds) ifTrue:[aCanvas drawMorph: self].		self drawSubmorphsOn: aCanvas.		self drawDropHighlightOn: aCanvas.		self drawMouseDownHighlightOn: aCanvas].! !!MorphCache methodsFor: 'accessing' stamp: 'ar 10/20/2004 10:36'!damageRecorder	^damageRecorder! !!MorphCache methodsFor: 'accessing' stamp: 'ar 10/20/2004 10:36'!form	^form! !!MorphCache methodsFor: 'accessing' stamp: 'ar 10/20/2004 10:36'!form: aForm	form _ aForm.	damageRecorder doFullRepaint.! !!MorphCache methodsFor: 'accessing' stamp: 'ar 10/20/2004 10:36'!isValid	^valid! !!MorphCache methodsFor: 'accessing' stamp: 'ar 10/20/2004 10:36'!isValid: aBool	valid _ aBool! !!MorphCache methodsFor: 'invalidating' stamp: 'ar 10/20/2004 10:47'!invalidate: aRectangle	damageRecorder recordInvalidRect: aRectangle.	valid := false.! !!MorphCache methodsFor: 'initialize' stamp: 'ar 10/20/2004 10:36'!initialize	valid := false.	damageRecorder := DamageRecorder new.	damageRecorder doFullRepaint.! !!MorphCache methodsFor: 'initialize' stamp: 'ar 10/20/2004 10:36'!release	"Flush the cache"	form := nil.! !!MorphCache methodsFor: 'drawing' stamp: 'ar 10/20/2004 10:36'!drawCached: aBlock on: aCanvas in: bounds	(valid and:[form notNil and:[form extent = bounds extent and:[form depth = aCanvas depth]]])		ifTrue:[^aCanvas paintImage: form at: bounds origin].	(form == nil or:[form extent ~= bounds extent or:[form depth ~= aCanvas depth]]) ifTrue:[		form := nil.		form := Form extent: bounds extent depth: aCanvas depth.		damageRecorder doFullRepaint.	].	self repairDamage: bounds using: aBlock.	valid := true.	aCanvas paintImage: form at: bounds origin.! !!MorphCache methodsFor: 'drawing' stamp: 'ar 10/20/2004 10:38'!repairDamage: bounds using: drawingBlock	| myCanvas rectList validList rectToFill |	damageRecorder updateIsNeeded ifFalse:[^#()].	myCanvas := FormCanvas on: form.	myCanvas := myCanvas copyOffset: bounds origin negated.	rectList := damageRecorder invalidRectsFullBounds: bounds.	"sort by areas to draw largest portions first"	rectList := rectList asArray sort:[:r1 :r2| r1 area > r2 area].	damageRecorder reset.	validList := OrderedCollection new: rectList size.	rectToFill := nil.	rectList do: [:dirtyRect |		dirtyRect allAreasOutsideList: validList do:[:r| 			rectToFill 				ifNil:[rectToFill := r copy]				ifNotNil:[rectToFill := rectToFill quickMerge: r].			validList add: r]].	rectToFill ifNotNil:[		validList do:[:rect|			myCanvas clipBy: rect during:[:cc| 				cc fillColor: Color transparent.				drawingBlock value: cc].		].	].	myCanvas finish.	^validList! !!MorphCache class methodsFor: 'instance creation' stamp: 'ar 10/20/2004 10:36'!new	^super new initialize! !!TeapotMorph methodsFor: 'drawing' stamp: 'ar 10/20/2004 11:57'!morphCache	^self valueOfProperty: #morphCache ifAbsentPut:[IdentityDictionary new]! !!TeapotMorph methodsFor: 'drawing' stamp: 'ar 10/20/2004 12:15' prior: 33717271!renderOn: aRenderer	"(color isTransparent or:[color isTranslucent]) 		ifTrue:[aRenderer restoreMorphicBackground: self bounds under: self]."	aRenderer viewport: self bounds.	aRenderer isOpenGLRenderer		ifTrue:[self glRenderOn: aRenderer].	aRenderer isValid ifTrue:[		aRenderer restoreMorphicForeground: self bounds above: self.	].! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/20/2004 12:04'!glCleanupMorphCache: ogl	"remove obsolete costumes from texture dictionary"	| myWorld textureDict myBounds texCache |	myWorld := self world.	myBounds := self boundsInWorld.	textureDict := self morphCache.	textureDict keys "need a copy" do:[:aMorph|		(aMorph world == myWorld and:[aMorph boundsInWorld intersects: myBounds]) ifFalse:[			"it got removed"			aMorph localCache: nil.			texCache := textureDict removeKey: aMorph.			ogl releaseTexture: texCache tform.		].	].! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/20/2004 12:04'!glRenderForegroundMorphsOn: ogl	self morphsInFrontOverlapping: self bounds do:[:m|		self glRenderMorph: m on: ogl.	].! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/20/2004 12:04'!glRenderMorph: aMorph on: aRenderer	| box formCache texCache textureDict mat rectList bb tfm m44 tw th |	aMorph visible ifFalse:[^self].	textureDict := self morphCache.	box := aMorph localFullBounds.	box := box origin asIntegerPoint corner: box corner asIntegerPoint.	formCache := aMorph localCache.	formCache ifNil:[aMorph localCache: (formCache := MorphCache new)].	"figure out changes in size/depth"	(formCache form == nil 		or:[formCache form extent isPowerOfTwo not			or:[formCache form extent asLargerPowerOfTwo ~= box extent asLargerPowerOfTwo]]) ifTrue:[		formCache form: (Form extent: box extent asLargerPowerOfTwo depth: 32).	].	"grab the texture cache"	texCache := textureDict at: aMorph ifAbsent:[nil].	"make sure it hasn't changed"	(texCache == nil or:[texCache textureForm ~~ formCache form]) ifTrue:[		texCache ifNotNil:[aRenderer releaseTexture: texCache tform].		texCache := TTexture new 				initializeWithForm: formCache form				mipmap: false 				shrinkFit: true.		mat _ TMaterial new.		mat ambientColor: #(1.0 1.0 1.0 0.9) asFloatArray.		mat diffuseColor: #(1.0 1.0 1.0 0.9) asFloatArray.		mat emissiveColor: #(1.0 1.0 1.0 1.0) asFloatArray.		texCache material: mat.		textureDict at: aMorph put: texCache.	].	"repair damage"	rectList := formCache 		repairDamage: aMorph localFullBounds 		using:[:cc| aMorph localFullDrawOn: cc].	"fix up alpha and remember upload rectangle"	bb := BitBlt toForm: texCache textureForm.	bb combinationRule: 40 "fixAlpha:with:".	bb halftoneForm: (Bitmap with: 16rFF000000).	rectList do:[:r|		| aRect |		aRect := r translateBy: box origin negated.		bb destRect: aRect.		bb copyBits.		texCache invalidate: aRect.	].	"draw the costume"	texCache enable: aRenderer.	tfm := aMorph transformFrom: nil.	aRenderer glPushMatrix.	aRenderer glTranslatef: bounds left negated with: bounds top negated with: 0.0.	tfm isPureTranslation ifFalse:[		tfm := tfm asMatrixTransform2x3.		m44 := B3DMatrix4x4 identity.		m44 a11: tfm a11; a12: tfm a21; a21: tfm a12; a22: tfm a22.		aRenderer glMultMatrixf: m44.	].	tw := box width asFloat / texCache textureForm width asFloat.	th := box height asFloat / texCache textureForm height asFloat.	aRenderer glBegin: GLQuads;		glTexCoord2f: 0.0 with: 0.0;		glVertex2f: box left with: box top;		glTexCoord2f: tw with: 0.0;		glVertex2f: box right with: box top;		glTexCoord2f: tw with: th;		glVertex2f: box right with: box bottom;		glTexCoord2f: 0.0 with: th;		glVertex2f: box left with: box bottom;	glEnd.	aRenderer glPopMatrix.	texCache disable: aRenderer.! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/20/2004 12:04' prior: 52869431!glRenderSubmorphsOn: aRenderer 	aRenderer glDisable: GLLighting.	aRenderer glColor4f: 1.0 with: 1.0 with: 1.0 with: 1.0.	submorphs reverseDo:[:aMorph|		self glRenderMorph: aMorph on: aRenderer.	].	aRenderer glEnable: GLLighting.! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/20/2004 12:15' prior: 52870108!renderOverlay: ogl	"Set up gl to provide overlay drawing - this is done in pixel coordinates"	ogl glDisable: GLLighting.	ogl beginMorphicOverlay: bounds.	self glRenderMorphicOverlayOn: ogl.	"self glRenderForegroundMorphsOn: ogl."	self glCleanupMorphCache: ogl.	ogl endMorphicOverlay.	CroquetGlobals snapshots do:[ :ss | ss glRenderOn: ogl].	ogl glEnable: GLLighting.! !!TransformMorph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 09:33'!localFullBounds	^self localSubmorphBounds! !TWindowMorph removeSelector: #extent:!TWindowMorph removeSelector: #extent:!TeaBackingMorph removeSelector: #extent:!TeaBackingMorph removeSelector: #extent:!TeaBackingMorph removeSelector: #glRenderOn:!TeaBackingMorph removeSelector: #glRenderOn:!TeaBackingMorph removeSelector: #initialize!TeaBackingMorph removeSelector: #initialize!TeaBackingMorph removeSelector: #invalidRect:from:!TeaBackingMorph removeSelector: #invalidRect:from:!TeaBackingMorph removeSelector: #position:!TeaBackingMorph removeSelector: #position:!TeaBackingMorph removeSelector: #repairDamage!TeaBackingMorph removeSelector: #repairDamage!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:21:14 pm'!"Change Set:		MiscDemoHacksDate:			20 October 2004Author:			Andreas RaabAdd a few hooks which we need for some demos."!!TMass class methodsFor: 'demo' stamp: 'ar 10/20/2004 14:18'!openScriptor! !!TSpring class methodsFor: 'demo' stamp: 'ar 10/20/2004 14:18'!openScriptor! !!TTapestry methodsFor: 'events' stamp: 'ar 10/20/2004 13:54' prior: 33738156!keyDown: pointer	| c |	c _ pointer event2D keyCharacter.	c = $w ifTrue:[		self meta wire: wire not.		].	c = $r ifTrue:[		self meta reset.		].	c = $m ifTrue:[		masses anyOne class openScriptor.	].	c = $s ifTrue:[		springs anyOne class openScriptor.	].! !!TextMorph methodsFor: '*Croquet' stamp: 'ar 10/20/2004 14:21' prior: 53106518!acceptContents	"The message is sent when the user hits enter or Cmd-S.	Accept the current contents and end editing.	This default implementation does nothing."	| action |	self updateFromParagraph.	action := self valueOfProperty: #acceptAction.	action ifNotNil:[action value].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:34:50 pm'!"Change Set:		VeraFontsDate:			20 October 2004Author:			Andreas RaabInstall the Vera Fonts (see post script)."!"Postscript:Install the fonts"| data zip |data := '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QU+BXP85aK9fgN77JWitX6Gn0a+ZbqDagGqGg+i3oFVeAon/CjqEXkWH0WugH14HjfEGehM03e9B3/0BtJys3Y4yzUb12UnQPadA05xWtM5Z0DkfgQ46h/7K9NGn6DPQr38DffZ30Fz9oLsugDa8yHTrf4MmvQQc8C3TXldBZ1Otdg2DvqEr8DBdASSCPaLGGqzFOrAtDNiITZrejr7OVUs62xcbl7T3zO9ua21f3Nfe097Gly3r6RZac7Nz8ul3bgb7zmTfWeyb3c9jd/K87HsU+5bv57LvPMaC0crfQsB3P+7DF7l7uR9z73EDpJwsJU+QF8hZ8i3/Mn9NmC28IUaIG8RzKpNqrerPaoe6Sb1K/Zj6kGaM5h1tlPYn2qu6abqf6D7Rz9K/asCGCYZfGP5s7DSeMBWZfmSOMe+1lFq2W65Z86xPWL+1FduW235pO25X25PsRfaOoISgFxxGxxNOp3NbsC/4g5DxIX8IzQp9POxn4fnhy8KvRTwY8Y/ILVGGqJ+5TK4Nbpv7Afdn0fdEPx5TGHNnzJZYS2xkbHLsqNiy2MbY2bFdsati74l9OHZX7C9jX4x9K/ZE7LnYC7FXPWpPkCfak+4p8FR6mj2tniWeNZ77PY96Po6LjNsUJ8Xvjz+bkJIwkPh4UlJSd9IjSX9ODkvelGJO6Ul5KuVkKkntS5XSpqXdn/bLtP9Jr03/Y0ZoxtLM2zL/J6sv65Wsv3i13g3ZQnZx9ursF3Is8BeZk5wzKuenub25W3Kfyv02rzxved5P8/4rb2CUZpRjVOaoX456f9TF/L78v46uG903+iejL47ZOeapMc+OeW3M+2POjPnbmH8WcAWmgvCCxILcgtKChoKZBfsKThVOLryj8N3Cy2Pzxy4ae3Ds34ucRfOL+ou+84k+m8/lK/a9VFxSXF88o/jdkuqSlpLHSs6WppduK32y9DelR0qPlX5Y+mXpt+OEcdZxUeNSxuWPOz3um7LgssfKzo73jN8z/q/jr5SHlI8qn1i+q/zt8nOyxAIZVQdyqQIkFMeWPKjAgThAHmD+BaSrFkkRTAssuDZL6L1exsHTGCThyyDdeKGcfxchqUQ+cxPRZa5DzXHgpBHC6zj+ToR+ZUauKv+zJfP7ekG6ua5yol2y452qRfgTFODKQA4U8TJPI6vhmFb6UuHm9p6WiS2Le2u7F3eXtNXPBZv7Wu61a1Ju1qiqjAwCwLMP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KHE4hMnwvD9I34sQ1rL7mex+O7t/lt1TSe8PEkTvz7LwAxZeZ++0QziA6c8BwMn/A6GD3UcDvQYAjWiYCLUbwMoaAGXRcDiUPgDoFQthKXtSzu4nsefT2fu17PlMFs5mz+ewcC4L57GwgYXzWbiA5bCQhU0sbGbhMhYuZ+EKFt7BwpUsXMXSrmbhGhauZeF2Vu4+dv8Ye/MQg+owC59lsUdY+ByLfR5sygDQPzQ8xd45zcL32TtnWfgBC6+zkOJtIFBhD3jHNrgvZparGHiAhs+Dr1oM/uU0CI+x+xfhfgK8ORxCqosmwJvDwXOm/DOZcU4V3K+E0AHhFLivgdAOlJoCT6hHTe3pdGZPpzMtN51puenMnk5n9nQ6s6fTmT2dzuxpLbObtcxu1jK7WcvsZi2zmzOZ5pzJNOdMludMludMpjm3sRptZ+9sZzpwO3tzO3tzO3tzO7z5GfjVFLZDDLZDLPYQiz3EYDvEYDvEYDvEYDvEYDvMUh1mqQ6zVIdZqsMs1WGW6jBLdZilOsxSPcvgeZZB8ixL9SxL9SyD+XngVQuE+dBeeR5RC/E8cCN9sk07B+Ehdn+YhSdY7Cl2f5qFl6gFYjkcYzkcYzkcYzkcYzkcYzkcYzkcYzkcYzkcYzkcYzm8zGj3MqPdy4x2J5h8nWDydYLJ1wkmXyeYfJ1g8nWCydcJJl8nmHydYPJ1gsnXCSZfJ5h8nWDydYLJ1wkmXyeYfJ1g8nWCydcJJl8nmHydYPJ1gsnXCSZfJ5h8nWDydYLJ1wkmXyeYfJ1g8nWCydcJJl8nmHydYPJ1gsnXCSZfJ5h8nWDydYLJ1wkmXyeYfJ1g8nWCydcJJl8nmHydYPJ1gsnXCSZfJ5h8nWDydYLJ1wkmX62AE9pjl8XCvizMg9xaUT7gsBV4Yy6EA7RDEBaz2MkgWa1gSen9FPBtWgFL9H4mC6kv1Mq0YivARsOX2TsnWA6vsydvsPB9Fp5l4QcsvMTe+Rt7/zp70g7hSQbhSQbhSQbhSQbhSQbhSQbhSQbhSQbhSYCQPqli91MA2pMMwpMMwpMMwpMMwpMMwpMAIX3nBMvhdfbkDRa+z8KzLPyAhZfYO39j719nTyiEp5iUnWJSdorJyykmL6eYlJ1iUnaKSdkpJmWnmJSdZqlOs1SnWarTLNVpluo0S3WapTrNUp1mqd5nsvk+k833War3War3mWyeZbFnWexZFnuWxZ5lsR+w2A9Y7Acs9gMW+wGLvcAs7AXmZ15gfuYF5mdeYH7mBeZnXmB+5gXmZ15gfuYF5mdeYH7mBeZnXmB+5gXmZ15gfuYF5mdeYH7mBeZnXmB+5gXmZ15gfuYF5md+yTzAL5kH+CXzAL9i+v+vTDdeYjJ+icn4JSbjl5iMX2IyfonJ+CUm45eYjF9iMn6JyfglJuOXmIxfYjJ+icn4JSbjl5iMX2IyfonJ+CUm45eYjF9iMn6JyfglJuOXmIxfYjJ+icn4JSbjl5iMX2IyfonJ+CUm45eYjF9iMn6JyfglJuOXmIxfYjJ+icn4JSbjl5iMX2IyfonJ+CUm45eYjF9iMn6JyfglJuOXmIxfYjJ+icn4JSbjl5iM/41py78xbfk3pi0vw5O5ENpBA1+GJ3PBVlHM/8gw/yPD/HVm164zu3ad2bXrzK5dZ3atncW2s9h2FtvOYttZLGvVYjMajSRUhHjEsWMtJYSIlTezsTGIlxo0aAGr77Z/3f6N6uwcJOvqpcO8FW9DAuKFkfw7CGlD9W9uPNrK1cscZxIJIbyJ49cg9Kwd+UcF0w6d3dIM+fmvc6Jbc+M9UgP+EoUMw8EbKPoot4WvRjhhhnAeocq6pprxNfOby6brr3TAJ7ejQ8vN6lecmYkAePZxQ2K7YhYQlMvLoiJxPC/IAAUROz+EyLIsKCI9CVCQJIgSZEmip8PAhz7m6WJyulQf3qWvC4Q+FXmBp0v4IYaIMn0gSUaOgp5taCEsPVyKogiCrEhQpExf1HdbUtgZwSwXBoeqCPAaAMYLIifyvEh33BfMYjBfiRVFhK4PAA3vSKwQWeZ5HgqSRPYU/mid2IcXBKCgVaT4EGRRlQnDB38zPlQog4IEyJJEGW5lehKUpEp0VrOOD/jw9HWRqOwe8CGySgE+KISSHERIEO6uXwY+RVVVAR+qbOADyhHobwMfkF6FQmWTKqgMH5CkCx9WiR7pQfOFxFBgCD5ozSWBMLLo+ICCZPaUpuG74cNkkxg+FMA74ENU4HVe6vwwXIomCqEkKgwfClBQgSJl2QSoodhm1Id3Gf8QE00niPBLoY+BwDSxTJNIDDMUWp2OxkfnHkkymUzAAyaFfhgKKapkkyTyCstMMkGhitkkwmtQLPArJ1FgKVJsUISeLySGAkPQLVIisjzgo9AKQkGKxJ7KIs1Bfw0wi5DZLtG1PsAdJnqatqhSfMidH4ZL0Qx3UB+a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DnbfffmPXgaEubivQ6wdIWiND8l94kfC8vBILD3kNm/oDzTIUbHRLolEKSS2/U1F5rq7dqmLZdT5pn42SOTORIRM5NsQ8Mr6y+Yd+mNaJ4eFDb36DNM5RjJ/SVqCt+AnhXROgopIVglvupJEizWsZdihDDZglS30irGKrqFrAF42FEMR11w7de0EXySkXv3o6vtCNkgq3OuMu4Fmtu8GGor7q/COHdyx1i8sqXiyAyQVNe5pO8e9Ay3Cs5N+HM9eV8Tj+4pKSU3H2tj589dt0GUrXYWbr02EQfwP/8LZLDJTOCA8D9I8h9SH+ntlPkbIjifpiXabxy3kupRsNS6W42litpqemBvvUoiQmRIXy8JivJlRMp9it1GeS5Eyo3Jxz9DR9mUGV/uLqpi/dtTf4Yu7HnNpod/cEGLxW9JNI4otLOBukPRCcwre3flVF2vfm/1e94yM7FOlp3ovGxZa2f/tOe9kZGRmnZpzqvetwwY33/xEw6KtTyxevJX/8NTs9/o1Dx62tOjU7HeyMjMy3pl9akBzaPgy+H0qK7ObsXrR448vatj6JO7hIOu5RtSsySGNLWyJksBZUJ1zFjaQRC1+/Diz+9+MqG+u8UcKm+UFWprbHMlL4CXWKqIFlTPLK6yTI3m5TS187EaqNzwnJaZLHhijrAz1tMSSKK3ZSpKEDQmLfS4nb2sOWLd6FHavQ3/VnWVR0+1ZRI72ZumW9Bh/brJ5Xivv9HFzhgpHCpEzu+3XPIRkLSUHL9oUOk7uJeMCZTL8hRco0yM3PPxoXi1yz4OQM5tvXvHYA9wJNpPa+g88or/vwhdTD04XJTpl8gOPVVwbEp7mYpNepW/8NhATqWM03oOwJNRDibH61WaHtZks9ups6360Y6tbkIlT7G9hs8SuLKempNMoT1bAx87esv1v0NnPM+WqhzfQth9KZtU7qCXkJGz/Twdw2+uUfKMrLLhP6Pq9rd/sO/vsXTTd+NCs1d8lz5Up7LD1HU9WRG6wKD15vPP+PS+ZGerp4Xd4ObewQ3TKOxw21bpDs9hdIim3+6y8XaIjbRaR53SFjHQ7vS6Nd/i0034w086HF9rz8O11xy+D4fZBvy9xe5/Gdvl92b7Lr2OrH99lv1/nXX/Jnff+GR8aH8XB1zDaAl9gBabjTkAKg7fB9CQ/BiSr69cwzuz07jR2Q1MnoXk48j4M7kRYQkLqGcY39Mz/wXveZsyZ2uU9bxzLgS/FHHSSF4pWeNnUa/+bWjttqjX/j9RauAjad86045aNmyJFTYgUCVJ2cds525j291nmgowNkTHkttDggXyof6g/P2DggLHKiJRaEl87Iqq2f6articZWCiVDupfMzZlQC6fnR5KjElX+ngVXlXkbKXPTYnK0JtilFH2sZr5iss3L53BV1rqrogoZC+67MdWlsx3Xf7o9UOdVvn9nXZd/tRbMJP/02swrZfDb73cNrWiYuqU8rnf3zFtLjr4F6eVs/dilk3mbvRiTF6LvAVzRuS9mNwnOx956Lmdmx5+rjVxJ/pten7mjd+VeUOr3BK2vX+8o9ti7ui+QRqhS5qZndLw4V3gP85N6gjhDmFIViS3ts0YMhVCznQJsYRD5kDIO1hOJIQPh/w4NykcYo4l6jqNJYTwbvMfh1h+MkTqskOdhUR2qAvhHeo/DrH8ZIjEQkzJypUK6e23TWz9f+W2if3hy1dqzStXmM4TLvEDpSrQebeEZLCeiEXgpMi1aKfZtWhdNuhYMG8L/HXZoIPbaJwdm2R+FC3fnWynyfSF5//a9NZbTWyrDhWMaxDnoBjHj5IKwSL8Ldu+YXGy8yYW1Ws/IriORFtiVeokFu8tPsst1tguWwNO92NDtY6lh9zQIJkoNsWuKIpDcSqqoim64lLcqkf1qj7VL8dEk1hbrD1WYfevxqqxWqwe64p1J3gSvAm+BH90TBBp6CjpuHbtBscCCQsN7xky7zKOxfXLWBazs8K1JOMUcniGNDJ3fK0okOjOzBVLuapb0kKpRf4kb/dcwfwlziiMUsePWbcpNrHQr00YDQ7I+IxYzncXvwMjsdv1b9GM7D26flMUu5XvDDeldZf43cMQcELM4IukkcRBFoYcFgKkdQI56S3sWNjFsJ4wLxZ2ltzg8BcJ38p4A/92Spi7p5xICSeLaeKR37nuJ0od1RUV1Y5S21MbNz4ljRw/YsT4DQ8+CFxI7xMLuSW4Zyv7JYmAAunYx0vMFrFhAQoWoBAlQupOEpMjbGNVl/1UoJsuCZ/zLouEemJmyKkekb1H+CjlFuK6RYrqqD67w88sSAnfvXeDrV7EPC4q33gfWKf5ZEtnw9e1rbFxG3uap4UGTZ06KDRNvNy4fTt6Dpw2FfzYSbNkYwl3DCSAG0YmqizZHEck4pZBC/OaB8hw3GW+hACGbMDqiR1bsSP7YdK5waGBty/KnNYjY3xy0eCsrNCinjdPV5Q7db0gO3ZaPzZeuAx9/QXchWchfUKKxAmgsnkRRKX5avB2pdy1z1uxplb4i3RmPpkNRui+XZcbOGm/8bnZoW9l++8oHWMsC9ckLaTbnTYQKUechOgctQls4ffj40XhuuDhNqhNviUy5W6JLA/Sd2bTqUN6x/SJpylDgotv68etyOnR2+FYJcvTb+5Z01VyjQmxkTS18CJtl1z93v7fJRdy+4/8+fwYqCF9ASXVX4VLUK9rIKxY3cgU0FkZaCHeHMpWnQ4RRgkWt2631MvlOnurhep02USfwBFbiuJSPVaSAlJIwjfq9IvcH6+H70g155fwXRdsRMWWm2EIFV5yTvVTnE9acfjJ4ecOc8OP0PzhxjruhRW19LPFM5/hNrE3v/xlpvG31mfCb8JgL6lfAba4TspCqWzmHIhJbM0K3lNkdYG5qhKN0iwHSbfzWbKY60ITHC+RCk8nh/UJw2b/BHcnlXL9qz/DKiWMrg5jQfoCu/3k3v4n9tCqTf1OgYLhBpROWc+tqm3dUj5lPeg6vJsedV2vsK6zksMRncrvx9M+U8wQ8hkIEXbWBu9LxTT929OcxDR4/hXP58xqTxNH2MqL1XiG7hK3IJeDRUuoKFCrQEZInDXyEkB2gO9dPMDpNg9xPvMM3dJq474TCIOsrzDrxICWViDXsaFUl7xas3ss9b5yJ6l36PEOG/SaOD8RnAGvIwUMX7eaGN/exrhIoYfpednckJl7IDdhNXs5Vvtbp9h8FA0fFkmOvH2K416FntXbOGl8/Cq+K3j54d/+9kbvoGr9y8rWnrVc5UouvuNNVFz4FJQH6JcNfJCfndU9PSU5yZKodovnN8TIG7ylMXd3W9wjO8ulJCdFJSrp3aLiU7qrgqQEXEOlQFRmD1wbjNy2F54O6MnuxmF7DotwL2LugWBOfQ7XaR3QFEI8W2omHVODPWi6mJ4KsDCe+lP9fEH2zd12//zJBx58Imf+r1uMr775wjhHA+eTR9/kK84zDqfS1P5PznEte28mHZzKb5flDz77w/kvzix6n/7xOWP5h4bxDs25fBFMaGtBXeEj49b1udk3JTB76OZx7bMtdZ1mWwQ229I+Q1PVaYZmPZ7T6/wGDtbGaZZ6F6mP1pR6Z3mMrT5attBotxCrsrdw+BxySkBnr+GID993xDpyXuRFHMfxTRxsVJC7f07CDd7F4U32Rt7H4f3R+zgWfUWL2Cs5fvjUOPEV3f/0Y1uevvoRvuXmo3NHXzv/Ma4n4Q1N0K6KecMRu6FJsD3sER4OsAuaHM3qYnZBk+f+/6MLmvAalf37Uul19zPxydfdbvp/cj8T92yX603xhiZKPuR6ih9x70Ov9IRkrgHEdRTxC9rlyCg18spJ7v1nQIfEkKHi48Ix0No5oVgbuzCFAw0k8naZ3RRiAbHL9kFa8dXmb0c2PuNgUuYslKZTWkip+LjRk55qNPKN/Ab6tnFTA32HviNMMHoa+YvY70Xw+9RiI5++A/ht4rZym8VPwWgeGIoT2Iu3JfPF26KVvkaOilK1XbbM7Pzqbe3ycTwOFNlaKJxkz/QkNxOMBYX5QLN9L5z8tmo3t7WEa66dvaZVL2FyegaUdABGrjGkLtRLOeZyu2xUth9zu11juWibXbS7ifN1l/KGRl6Pfk07KlbH2uxWt2InvplWh6oTyjarvH2aHanDI8jm7Ct71YLx5nlzJT+CUvvqJ2AV3mfj9agcNCU0Z2pkI9uu4YPvH3bvL19zX6JrRrXupHFTRpWVjJstak8Fk35W3bxHPzv/+GhjbPPgyXPZfEEFtx5nLzPJxFCWy6+SNF5OeC3O/br/NTXj9bTX1KNxb/LV4Rdqk+SZUmCm4gm/TvttPCv+bsSGv3we0T4PciVsxHd9pbZp4vjb9/x2eaX2yuK7+t77SO2cZcv3PjvyvqHDxfKZs6uqKgtiyubePGbiVMtw8dVAYP7ckRW6tqyioTk2dhcdNXbaxFlzRo0aNWRkaBDTL5vazlnWQF3SybcoG9LJq3wBSg9ZuK+1Ihxj4I1ikH+EY1S05/HPn8gD33tnWQCyKTMsm2xgP+HZZXZjqjQSQkaFZdOfyIbI6WkYtc7uNGq1h0etLxhL2DteOvQo+YQcxjSNxhJ2v1YnPfpJWI/iOx1ROoZPacPYtKD99HQc6t7ICeXIOeQfp7H+ZJrPWJqw9jmHN9lmkIpQXrygxfGJJNrdHKMnPuxIf9jibfa33xmc4suK82g8nx6gWVGkICVgy8xkyocZJf5+58374yO3B7NNvLorfIVwd637qu77ut/wCmG2TZZJ3Hxv8n+6Sth4hQ4HU2XfvhtfKExH1S6p/bS21dN+qTDrufQsN4NrBBmmXT8SY/JrBkcMwjVu/X86I9f2PVBxMXDUTWRRqG+21Njdmuhq1HpWEj6wKroivtJXw5cmawXZ3VP4bslZSS5rgSY7eiRmuSVHUla3mOibSDdJtzgKQFLlXWQXf2jHj6M2N3cMYF8Lb6KIvLoTNMInQGHzuBXhkwvz09JxLh9crvBN0uauiURLooT2OjtUYu6aEBZ3/2r3b4xvcw5nr6OU47gD2RtzqHp47onbaj2PNd/9cy/9PgdkMQTRZTnGUf+OdU2PBuh973xEc6m1Wo3q6UzK9VcDf/UYMMzYdeC1S19UO/35ujw0uvrLvz/3FJ7qEQy+UPwKx3F1/+lUj6P9Qp8bnOVxtN9wcoNjPNqNrkH7T8d4huT1HILHeIb0zBsyTPxqeI+8IUPyegyPfJPwyScBR+8T2k8+mcsIuSHHdS+QZ7jd+BDUjf3ZgtDAN4wrS8TvjO9xLsXJjxK/ITHUEkp0qi57DMVJFOGI1x5LVa8lxkd+PJuiRwYjQMJrYKlGNpKE8uzETu2calPtqqI6VVXVVF11qeEZFXuMhtdQiOEI4GWdFX6HA47XIyOv6+dHQhkBYt6QFBACYnhK5gYTMoEYz6zwMS28C1/5qfkYT8cdTj8xFZPeeSqmAKcj0um/cj0ZevpNbPJlcsqAwp7+LD0jp4ybN3vISHFArMNZ1INWLHUlBBzOwpyaBnwDwHfCJW5xuDXpDVqTh9bkoTX5/9iazhvd2E/dyZS+8uslxhXWmjDOCY9woTSJLOkyN4erttC3cYSr3GgQG3Iz1lIFxlwJAmOvHEGe9ZND3jDvWxAlCwtvn7VLtyTT5/d9xcbCDK+nn+6C19wuI28Tr37H/wNe0YAVx5gG3xwvJIiAGZcj5IjKT2PH5/sLYUD+PCLxFQzIrc88A/zOkQKwpL4Dm42DMe+EUDp3TLbJ9Bi+vcmmkNecYPm8xh+1Vbs4q+DgVftMqyARF8OQrTuFD3VfvnytHxufRWbzI29zpDpltxyBNqHMlEv25tPXjbe5EmPcQ0YDfXD9jh0b+bfoo0aN8V7JPSWcq/XixHsA75OiBHLqe+Ig40IO+xHBQn4019YPdEB4Kgn52nbDK5dM6aBaVKtDdjikWV3n0k7OdtXNnFnnmu3ZfufPtonfF/bqVbhk5W3mXBrhloAUuMFcGm0vlc2lYYEKm1O7wVxazvAheXlDhovfdAgz1PAUvz3QA9hOiwA8Egl7wjePcbp+IBAkoGSxyja74nCqmu5ye7w+f1R0ICY2Lj4hmJiUnJKalt4tI7N7VnaPnNyeefk3FfQq7F3Up2+//gMGhgYNHjJ02PARI4tHjR4zdtz4CTdPnFQyecrUadNn3DJz1uw5pWWkfG5FZdW86prauvkLFtYvWtzQ2LRk6bJblzevuG3l7atWr7njzp+tvWvd3ffce9/96x/Y8ODGhzY9/MjmR7c89vgTW598atv2p595dsfPdz73/C92/fKF3Xv27ntx/68OvHTw14defqXl1d8cPnL02GuvH3/jzRO/Pfm7t95+591Tv3+P/OH902c+OPvHD//00cef/PnTz4jADYCa9iFB6NABcjtpoxbgnwTakw6mk2gZvZXeTh/iTnCf8L/gjwbTgrnBPsEXEpOSpKT4pO5JI5MqU393lQPLikAO26lEFZBUuXQQnUhnQ9qVkPZN7o+Y1g1pizAtl6Ri2lJIS2Gcew6stn/D80d4trcxG25IW3WbhzXBte+ufUTIZ5s/W/vZlE9rmc+fF/95DiF/+rt4BBuPrT5cZhGxxa6EW+6K+Zu2tygNUlyroYPDHi+QZ8nPyFryG7KZfEXuIg+Q+8iT5Bcw8ibkXvIhuZNsIv8Au3g9eZTcTV4He/Rb8hTZRf4Fpf2bPEN2k5PkBNlDyslc8iCpIG+RSvJb8jtyirxN3iHvkq9JFfkD+T15j+wl88jfyUZyhrxPTpNqcoFcJPeQWlJD6sgCMp8sJNtJPVjNi0gDaSRLSBNZSpaRb8itpJksJyvISnIbOUSeJqugdVaTNeSv5G/kFdIKFpv5aSPfkw/ID1Dnc+Q8OQsW7Z/IR+Rj8in5I/kz2U9+FY53kPyaHIfvA+Ql8gZ830FeI+vCYb8kW8Ku58njAB8jl/DXq6YnpeTn4fCHmJWPn4fJI8I77C220HHuMx++kPr5PeSkdIA8JfrJHsvjZLElAUao+eQkKJhn4NkoEJII4R9C/FHcARhT3keOcfsJgfjr4LkCz33wbIVnIMsDnnvgeSH8vQbinoFnFMsj8gijyH1WAulPtF0WPyeLpQTSKNWSxeJZeNbD7wr4fYUs5jPgKWgrEcEtTiCLrT1JlYWQCmkDaRTLIR58SxKErYDyphCPdJiUQp4XrUXEJu4nijiy7RtxA5kJ9djHcIbvp7B8oAE8u4Q3SJWYQPoKK/C7SniVVHHfkVHMLcJIidsAz4q2vsKHpC+4+1o2Qxj4C++Z6Vg8/n34HUMa+UL4nU4KhbVtV6QPSaJwJ4lmbqGQTBT9lHD7qZV9s/Kx3vCwerM6R+rE8Gc43fBZYeLX+UH8NrT9E75lePQIbtc/DK/OD9S9CJ7XoX0eZ+0E7pnCIZoP7qfEaaQvmAQx5kP+KRDKwhmPfGjl2j4BPCukXeSTzu0p+tu+FfOBjsmkWjxINGk2KRAHAy7dwUB5h6zkXyezpWfISstaxGcMa3/Ge5g2mvSHcpPRvZnkC1+Qp+A5BmW/B/6knVZAHzmaLLN8A3lA+7EbRgQ/eQ+ejcCT78GzkeXBXyYSoztrezrFYDxYzeeTp+A5Bjwyij2s/hD/MDwzhFQyw/Yq8BAr52yn77Nh/ssgU+GZw9zYRpEH2irysHaAPI/BcxCeM/CcALrdB9+X4DsZvi/D9xgWR5xBpnBbSDbjWcY3jD8ZjzD+kJaQxdhegDvWoRrwAD4z6UxjYLS/CZ4Z8FRYjpFN4aeC9RfkxQyzL7B8GW8xnol8s/Bw/z0M7fU9a9Nw2zKcvwvjfwzyLgiH3RfRsG3dQfLe4EMVBiAWmGZEBCvNAs3S8UowJ1GJFrkGhniJD0ZUUSQaD8zHkjgSTxIiB+dJCkmF0T9boc8gmaQ7ySLZpAfJIbkEr42BEWoB6UUKQX8UgfbrS/qR/mQAGQh25CAymAwhQ8kwMpyMICNJMRlFRpMxZCwZR8aTCeRmMpFMIiVkMplCppJpZDqZQW4hM8ksMpvMIaWkDHVCBeiDKpD81SDna0HSzwdZvxDk/CKQ9EzON4GkZ3L+VpDxzSDlbwM5fzvIeCbh7wDtw3TTXSCf7wZdcS/opvtBEz0AsvdB0CQPgW4C6Qua61GQ24+BxH6CbAXt9RTZBrrkadBOz5IdILF3kudAnv8CtNYvQd/tBm21l+wjL6JOYFqAaYRD5GXQJi0g6X9DDpMj5Cg5BnrhddAUb5A3QcP9FvTc70C7mVrtFGo0psfOgM45Cxrmw7C2+QR0zaegez4nf0E99AX5EvTq16DHLoDGugg66xJowW9Rp/4LNOhl8h3oLaa1roKuZtqsjYKeoRzlqUBFsCTYrI1MbdQONoVDbqxqql6+qLpyoXNRZUNNfcXcyoVNlQ2VFcKwJQ314txeNxUUMdgrF2FPhHkI8xH2QliIsDfCImS5pPBfCbTHx3QO/TP3MLeLO8tz/Hj+Vv4xfg//Lv8PIU9YK3wiDhJfkgZKe6RWy1zL762itcg627ra+qz1O/kZW7StyXbc7rTPtD9tb1UmK3cpf3Y84XjLebvzrNpNXaKe1ibqqfrt+ueuke6+nipvkrfRu8X7qvdTH/X5fGW+j/03+Vf4P4jKjtoYLUXXRL8Y8MaQmJti3o7NiV0Y+25cTtzT8aPidyRYEtYE1yc+kjQi6dGkK8lackPy4eS3Uu5L2ZLy85T9KUdS3k75MOXLlH+xoyupgdT01JtSB6WOS70ltTp1SeodqRtSt6b+IvVg6uupv0/9JPVC6v+kCWl62si01WmfpRek/y79m25x3V7LWJ+ZmvlU5unuhd1XZHmyHsum2b2yq7I39Wjo8Zec/jkbct7NdeWW5n7UM77nPXkD8t7I9+ePzK/I33ST/6Znbvq0IL6gtOAX8Hew4PWC3/fq2+tor9O9vi5MLJxZeHvh9sLPe9t7R/VO7V3c+63e/yiKKrq36B99xvaZ32d9nxN9m/qu6ftA3yf6Pt/3pb6v9T3V9+O+3/T9rh/fT+sX1y+zX2G/un6/7N+v/6z+e/p/NCBnQNmAhwf8diA3cMLA7QN3D3xl4ImBpwf+T2hS6FTo49A3gwYO2jbo4KC/D04Z/LPBFwZfHaIMiRuSOaRwyNAhNw+ZPaRuyK1D1g55aCgd6htaMPTIsJhhNw/nhhcNXzv85Aj3iJIRa0xxRIh7GgwNCkEsyZZRIHsK234NsKitDmCftgcB9kWffm0JAFsQXgCYAjEfBFjU9jjAPm272a1PCIvbPgY4FeF09JnRtgPgTHS/ZLwP8NcIX0GfFoRHMf4xhBfQ568AU6G0NJRzDGYizEPYD2Kmggxi7nkINyLci3AfwhaM83t0v4fwDwgvoP936L6KsBVLUKGmaUQHmI7udCw9PexTBKm6oU8GUY1jADWoVwbR0R0HcTJIPMKUtnEAh7YtATgSqJRBJiIsR/8a9K9FWIdwPsIFCBciXITxFyNsQNiIcDnCZoQrEN6GcCXC7Zj2aXTvxrL2IHwRfU6g+yTATKxdJtYlE2uXifTMRIplIn2yIc7dAPW2MoBx0BbZULvdoGE04I0eUEfmTms7CTAPYW/IpwdwAoP90GckwokIp7W9D3Bm20qA5Zi2Av3nIazGVIvQvRhhA8JGhMsRNiNcgfA2hCsR3o45r0K4GuEahBsx9GmoSw+gBitxD8K96L8P4YsIX0GsWtB9AuOcRPh79HkP4R8Qvo94nkZ4BuEF9P8r5nAV3a0Ac6B3TAfYGyifA5zjANgHKJ8DlFkJcCZglQO1ZqEvGV6Av0b4Cvq3YJz3MfQ0wjMIL6D/XyFOT2idlQB1hIz3eiLv5WGr5UHLjgaoo5vxbR704o/BJlCNMoAa5JYPfMvcLG0+ps2HNh0KsDfGHAq8nQ8tyOBEoEY+mQL1yoe2Y3GqMU4NhtYirEM4H+EChAsRLkK4GGEDwkaEyzHPZoQrEN6GcCXC7RjnaXTvxhL3IHwRfU6g+yTC9xGT0wjPIDyPeF4BeBNQ43GAjBo3ATWY+yXg+ZsI6+cF0EYfAyyCuhdA67wPsF/bMYBDgcoF2EYFYNswdy3COoTzES5AuBDhdoRPY54vAW0LyK8RvoI5tGCeFxCytuuFva8XYtULe18v0gv9zyH8AWAhtNT7ADXje4A6ullLFWJLFUJLPQiwEEoshJYqAzgc4UiEExFOgX5aCLKXxS/H+DXoX4uwDuF8hAsQLkRYj3ARwsUIGxA2IlyOsBnhCoS3IVyJcDvCpxHuxhL3IHwRfU6g+yTC84jbFYTXMNQA2BsoMxSgBhToDZRhblbr3ljr3lDrYwCzoWV7Q42YezfCPQhPIDwJsAio9zhADXIoAuoxd1wb9ATIh8EUkJNFILXYTcBDMc5IhGPQZyK6p0HPKkKdVQRlsfjzMLQGQ2sR1iGcj3ABwoUIFyFcjLABYSPC5QibEa5AeBvClQhvxxJXIVyNcA3CjVjudozzNMLdiM8ehHsxdB/CFzH0JeCrIuBwBl9B/E9gzJMIf48x30P4B4RMz/ZBivVB2d4HKdYHKDYOYDzClDbmMxTdI0Gy9UFa9QFaLQE4GXprH6AYy2cm9KM+QDEWvwbj1yKsQzgf4QKECxEuwtwWI2xA2IhwOebcjHAFwtsQrkR4O5a1CuFqhGsQbsfQpxHuRhz2IHwRfVjf74N9vw9QhuF5AkNPIvwr+PQFCvwaYArCNKhjX+STvlAj5lOB7nkINyLcjf57EO5Fn30IT6DPSYS/R5/3EP4B4VWErQD7AeW/B6iBTdUPKM/ccW08wHiEKdAv+iEm/bCn9wP6jwM4Bn0monsawnIMrUD/GnTXIqxDOB/hAoQLES7CVIsRNiBsRLgcYTPCFQhvQ7gS4e0IVyFcjXANwu1t/QA+je7dmP8ehC+2ZQA8ge6TCK8ihqzu/aG/M6gDLEapWIz0L0apWAwjuDSAL8EYsBha7VEYnTLJMBHjT4b4CQB1gNPB7QCoA5yB7hnovgXjzwQKfwtQB1iOVms5Wq3laLWWo9VajlZrOVqt5Wi1lqPVWo4SoByt1nK0WsuxT5Wj1VqOVms5Wq3laLWWY2+qwLpUYC0q0cqqQn1dhfq6CmVaFcq0eaiv56EumIf6eh7q63mor6tRHlZjLapRHlZj2mpMW43ysBrlYTXKw2qUh9UoD6tRHlajPFyOFGtGuALhbQhXInwQMdyImGxETDYiJhsRk42IydMYczdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbzdSbw+WsgdL2YOl7MFS9mApe7CUPVjKHixlD5ayB0vZg6XswVL2YCl7sJQ9WMoeLGUPlrIX67sX67sX67sX67sX67sPaXKApEB/PACWbw7AIvg7AHKCwb4I+yEsxzgPQrkHyG5070HYgqEn0H0S4QXwOYh5HsQ8D2Lag+RB4OGDmPYgpj2IqQ5iqleQe19B7m1BWdGCsqIFZUULyooWlBUtKCtaUFa0oKxoQVnRgrKiBWVFC8qKFpQVLSgrWlBWtKCsaEFZ0YKyogVlRQvKihaUFS0oK1pQVrSgrGhBWdGCsqIFZUULyooWlBUtKCtaUFa0oKxoQVnRgrKiBWVFC8qKFpQVLSgrWlBWtKCsaEFZ0YKy4g0cmb4BbfQgwD7oZq3wBvAGc0/HODMQtqDPBYAnkJdOIC+dQF46gbx0AnnpBPLSCeSlE8hLJ5CXTiAvnUBeOoG8dAJ56QTy0gnkpRPISyeQl36L3HISyzqJZZ3Esk5iWSexrJNY1kks6ySWdRLLOollncSyTmJZJ7Gsk1jWSSzrJJZ1Esv6HZb1FsLfIw//Hnn498jDv0ce/j3y8HsY+h6Gvoeh72Hoexj6Bwz9A4b+AUP/gKF/wND3UfK8j5LnfZQ876PkeR8lz/soed5HyfM+Sp73UfK8j5LnfZQ876PkOY35nMZ8TmM+pzGf05jPacznNOZzGvM5jfmcxnxOYz6nMZ8zmM8ZzOcM5nMG8zmD+ZzBfM5gPmcwnzOYzxnM5wzmcwbz+RzHZZ/jGOdzHJd9juOyz6Gl8gDORP9qhGxc9jmOyz5HS/5zaBcW5310n0Z4BuEF9Ge2/TmU/OeQqudQ/p9D2/4c2vbn0Lb/ArXeFyhRv8b4X2P8rzH+11AX5l+EsB/CcoS7Ee5B2ILwBMKTCNmY/RvM8wJKiQsoJS6glLiAUuICSokLKCUuoJS4gFLiAkqJCyglLqCUuIBS4gJKiQsoJS6glLiAUuICSokLKCUuoJS4gFLiAkqJCyglLqCUuIBS4gJKiQsoJS6glLiAUuICSokLKCUuoJS4gFLiAkqJCyglLqCUuIBS4gJKiQsoJS6glLiAUuICSokLKCX+itLyrygtL4J7N0DWUy6Cz27yN6T833Ak+B1S/jsM/Q4p/x1S+zuk7XdIzx8wzg/YOj9gnB+wNX/A1vwBW/MqxrmKoa3obkU3xbn+ycRChhGBcJBHCNxEsIuzcX0ewi0LjDhCbK8a9xj32Ma0L9R3rBRQIUAfJCIRxBHC24QYg81vbhJZy1WJHCdJvCjBt7CakL0aCY6KpB1c09QI5QWvcpLH8NDHLQvYFYsdWwEgBol7ibtPSCckuVE8Q8iUyoaySZUNNVXhKG3w6dXWZvTK6z0xN5ctpeLHA4k1WREJzwuCVZKtnCCIVh4+UvuH561Wqyhb2EeyWAXBIrFdwvBDslpkgAIvWEURMBdFwB+S8rIkgrcoSCIG8BARPlYL+xX5YCHoYoUwyB5ZlkXRKrN3LVrBR2KXJAkW8APsJPiXZCjYYpNFmeVgFUSJkwQBYvK8qCCKAnws+LJGvqMwQIFtM7aIDDEr1EGAgiwMQQv8iRFMREEUoQUdEqOHaJVsMv9T9LBhhSxWmZXGbnYCfAFvO/hF6AFlCRF6YBUFhr7UTg/ZKovtBJC6FmImlyw2mw3oYbOG6WGxMkStQF+kBxDfBvSw2m2iDekBBOugh6OdHuzNlbLciR4WntWctwJ9LSY9oCAr0oORvCs97KoF6SEDNkAPSQ6TOPxBWkp2VgZ7oDSLHYjLSCJb7bJJbYnxi0USGP9YBZuV/QQ0GD0kCzSw1UTRzBEpgHijy/TCx2q324GIkD9GBoozgsg2iC4zglosdmgIWbFLdpaDLEpWzsLqz4iiIhUFs/HhI3SQG1CA5gY0GWIyqyAUZDV9wYvxvImUhLtLLQTYAnqB3Q40lWxhEoc/SEtJYSUAKhAoWxUgrg2Y2iYr4AdUtbG6wJ9oRXooyD4S4zhWKQEiQmLIpoPKZjuiy+QFeMClKArwgN3GPuAj2xjJbHYgLvyEbmpRgKw2hyIpjB7ALFYOeNOkhyZbzdYRMLmtEz2sUGFGD4aklbGgCAXJzBcaFtswzKaMHg7divSwAzbAMBb79fQAWlocsg3QlO12aC7Zodhl+AHt6ADsgB52VqvO9DDZHTiJ1VcANoLkit1u5tiZr60RL5beKjscwPV2p519wEdmkkqyA31F+MmY0QH0sKsOi4PlYJcsMqMH8BI0sS7bZKyriMntnXhcFtibSgW7lfE1q4MIBdlBKoKvDelhxhMtoBOcbkYPCVjAgfQAAJ2n/YO0tDqBHNBsdgX4R3Yq7DCtLCs2FVBg1GaSBf5ExotWwQluxu5QNquUCBGBmCybzmRmnMY+Zt+AB1xOpxN4APJn7Qcd2M66mOIA6iqsOIjACKs5LE5GDwWScDKTwowebuQK0Wx8+HSlB9QbaCozngbekqAgOyAGAhA8RSHSkxk9VI9MoJtYHDanA8hidbAsbe0fpKVVtdsVBerkAD6yqQ6HzQEMotgZPYDLHIwLoXkkiA7CVWXpQBbaGD2sIPwckNrucChmjmEydy6EpWeb4lQVpIBDc7AP+NgV7CMqdBv46YCUKjSLQ1etEA0QA3rw0FftNtZpPMgVotn4QA+xg/iAAvQ2EQgK5TgcQA8oSGG+CnR5qKIpwUGYWAnRvLYwPVTnT9FD1vBoNdQJ6GEHfO1QOXg0JgBNerAuBGGiYBNVO2DNtA80p4z0YO2FVUR6mNkCX/+IHpqmddAD2s7BCOoAqiM9IL4GbOZwaVYN6WGV7UgPO6OHF7kiTA/4dKKHXYSubhUdiCTSAwpyMF9GD3tXeuh+Rg+L1WnXVOhAspNpaXv7B3lL1hUkutMJdLNrwGxOhx34WgcMgMug2tAh7DYLo45d0kx6gF4ETpFBGTjxnLrT2UFlGxNfJj1YISAU7GzPpK7r0CdcTvYBH8XJZIZTA+ENP53AXzqwqdOtyzrjMKfVpvAgoiAmCBE/0kMyOwN8pI4+DyhAvYGm0Ih21iUtQA8n8wVGtzGczXjQawlxRdkJ0w+qXdcYPVREtRM9gLdsLofDqUKdNKvFobh1tmkcEHO4HYoD6KFCkUykWBg+QA92Ul9meihMD+hgTuByU07abWa2ILHwpykroE7gdLlc0CdcKvvYQaA5WTaqDpSGDqtCt3MBi6oelwzRADHZpAekByEShVzBmhkSd6WHwoSjLKkMSUVVgR5AeKcCvcVpc9oYzp3o4Q4welihS7h0oIdNQ1TbP8hbNrfTCYU4VB2ay+HRVQejh+r0OB2MHhqTtPYwPRTJhfSAzmmH/gTFKcBQqlOHKnYmc2d6gJBU2JZatxukouZWoUjooTanymSo5gIBAT81YFA3sJnqc9vcjMM02e7gFaal4YctgFwRpgd8pA5mdEgK8AHQg/Vz1iWtQHhVYQ1mByIBJuFua7OB0R6jID10h9sFHcimMyvO0f5BWto9TnaEwKm5oDSH16U5NNXh1J1ep8MJilKH+kD/UdrpgVUEeuhQX1COOqOmS9NNCtsjfG3+NGUnPODyeDzQJzwaFKmDj1ODEFl3K3Yr/IQWVTwOp1Pze2weRg8dRBgPHAExgR4xTnbQgdEDiAnpu9AD8rJbNEAS+ji0qRUIrylWh0kPi+ToRA9vrIOAvoQu4XEDPewupnk60wNoafcCOaCBdaCH5vS5dKcObc4ugXaqQA8XtDL0HCgA+qbD4naa4hDlC6OHixHTpbs6uA4HG04swJQVIKIV9hZuL/QJrw5FuhxOu6o77Yw+IFahw7qg23kdgESU1w7RADGb4hSAHpAehEgscgWjBxAD0ls6mNEJ4ke1W3Tof06HC+pgBcLrDiYyFSAS4GzGA9uEEF88o4dsczm9HuhzJj2c7R+kh+IDkrugTm5gX9XvdkHtVNWt+TVVhV4H9MCirE6kB+MaJg6dwN4gZSxOF6TW3C63SWHFJHNXesADEsrn8wE9fIwcIFTtmovRw+V1KLKLkd/h8Dk1zRXts/uQHnZFBWNHho4I9IhnnUxjYgASQ/t3oodqYcdgLC4Hk3tMRMlAeJdTBpEJTQY4hyWbzOjhT3Ayetjdqo/RQ3Ezq1Zt/yBvKX5Gcl1zeWRZV6M8btWta/BEaSozk6HaTiZSZCarnBbGNUwcqg4P1B6MBTek1j1ut0lhh0lmi0XFn6wQJuUgC9XvBy3h9rvZB3w06OR2u9sHYtXNyO90+lVddwf8ip9xmNvuUAWV0QN+KAmsk+mMHpjcbelgRtXC+MDqBiQBa2hTGQjvUpnIdACRrBbVjAe2GiFRQSdh9oNH9XtBwCqeDpFk0gN4yxEF5HC7dLcX+EiL9no0D7S5R4/WNR3o4emgB+Rt9Zv0AHvGC7UHengYNb0eTyd6YCHX00OLiooCGRHlYR9VU3Q3WAl2j9/psHlUyEVVo4AenpgoJYoZux7QdwKoMJC9IFSDQHNsexmTe6wd9AB7RYHu4XZqTk1lIsoGhHd30MMapoeN0SM6SWX0ULxalA+GuA5vWCSFP1Yr8JYjGsjhgTb22WxuPeDz6l5oc68r4NJ1kEJeUIKsKJlFV62Ma6Bb2jSkByDjZcT0eb0mhZ2Rfq7hT1aIwwEPSKjo6GiQEdFe9gEfl4fpFG+U6rDBTy/QI1oDwsZGO6KZZvUqTl0A3QayF4RqEvYyJhYxudfaIQN1EMcQx6Myuef1QhQgvEezgQpxApEAEzMeSHVCAska0sOnR/sZPXxsKKK3f5C3nAG32+N1u7x+Ro8Yvxda26X73DFu3QX2pg/qo6u6amOyW7MyrgEDzqaDvAU9K0NEt8ft9/pMCnfIPfxp6hJ4oOkDgQDIiIAXivSBj9vLdIovSnPa4KcPWDKgu93e+IAjwOjhgySCHqFHMvaSMD0gfRd6AB84ZS8gCVhDm9qA8F6dqRAViCQz7dVOj5gUjTB7yq8HokAGOf2M5TrTA3jLGePxeH0ety8K2NcVG+VzwQ+X3xMLQhKkkB+UINADCA55a3KA0QPUg676TXr4IbUnyucP0yMi9zro4XTCAxI7JiYGZEQMe8+hX3c53SD0gD7RYEuCAPMDS8boHo8vIcYJ0QAxh+oSQaWD7AWrNgV7CROLPkwvd+gEl8z4QPZpTA/4/RAFCO/T7W6nV/UCPWTdjAdSnZDYNJ3Rw+F3xURbI/RwtX+QHmose7mlSQ+vOy7aD63tdkd54jwReoD2cQHBIboux7CODPRwaVFQezAmkR7R/iiTwlpE7rnwp6lL4NFd7tjYWKBHrJ99wMfjYzrFH9BVO/z0gxiKdXk8/mCsMxbpAfaQCLoNBDUI1bR2ekBi6A+d6OFm9FBlIDFoOaQHEN7nYvTQvBrg7OpED8LOYVkJO1OEJ7XYnnH2bqY5ar9/kwQrRnhl/+j1+H101X7jHiPONsaygLAt/OE53P8PUEsDBBQAAAAIAEdAkC6Cb69jn44AAHDlAAAMAAAAVmVyYVNlQmQudHRm1f0JfFRF1jCMV92tt9vdt/fO2p109oWEhCQEAmn2LQSEEBYBCSSBsCUkJBAQA6KDiIi7yCgiMogMIDqKDCjLGARGBBEYx3EbB5xxMIOOD+OjkFy+U+d2JwF1nnne9///fr8vnXvuUtupc06dc6puVV1CCSE2AAJRxozPynn9nn/lEnKmDJ6Wjx1UUrbM8u4UuN8F9/mzFlTUbXvryy2E7FEI4SfNalrs/8VXOzYQ4oN7uq26bvaCv933z1ZCknpB/HWzKxrqiA5+5IsMuJdnz2+uztM9+hsIP0LImtI5lQuWPvbbtRMg/0uEuIbPqaqovHN/5u8gfm9W3hx4oLTpj0J4NtwnzFmweOnavNlnCXl5DiCcPa+qfuHfen35OiEHBhPi/P382lkVjz5Q/wQh+1MI4SIXVCytE6dJ0yE94Ef8CysWVI1rjzIDrtGExPyzrrZh8avl2XD92kaI/2BdfVXdI+UP94GorxIitkAaN7UQRiH2B89D15Q44U675oByY0LXPInofC50uxaJTMaHriXiIXeErnUkm/wmdK0nFn196NpEvIa1oWuzwUGaIGcqGOBuseG50DUlKUZX6JojemNx6JonOZ3PhW7XIvEah4WuJdLDeEfoWkdmmHShaz2Jjrw3dG0i2dG/CV2b7UnG9YNq65rra2bPWexPmZXqz8nOzvXPbPYPrFncsLi+qmJBhn/Ewlk9/APmz/ePY7Ea/OOqGqrqm6oqe3TG8ZdX1Vf4x1fV11T7B9bOrxxXNb+qoqHK37NHz+zOSCwORslkUf6jUs3GnyrWbLyl4JoGf4V/cX1FZdWCivp5/trqH+djNo6tql9Q09BQU7uQxZ9TVV8F5c2ur1i4uKoyw19dX1XFEs6aU1E/uyrDv7jWX7Gw2V9XVd8ACWpnLq6oWVizcDaUMwsQZzEXz6nyV9cuBMQqZs2qXVAH0VmExXMg9/k1s6oWQv1T4oeyGPGpkFmlv6KhoXZWTQWU56+sndW4oGrh4orFDJ/qmvlVDf4UliMm8I+vrV68pKK+Kj4VMQHxra+tbJxVhdlU1kDVamY2Lq5CHG5KkOGvWThrfmMlw2RJzeI5tY2LAZkFNaGCWPx6jZqQbWMDxGfVyfAvqMJa1zXOnF/TMCejWxkZrMys2np/QxWwAmLXAKqh6t9SNEMOsq1jhF4cIh0WtGRO7YIfJ2BsqG6sXwgFVmHCylp/Q22Gv6Fx5tyqWYvZE43G8+fXLmEVmlW7sLKG1aOhD2NoGQRWzKxtqsI6aLKEKHQKwsLaxcCIBu0p40tdlwxoYf6GORVQrZlVIboBIjUL/RU31bR2IUhGvX9BbX3VT1bcv7i5rqq6AgrqEUbr5vAFFc2shAW1lTXVNUzYKuYvBvGDC8i2orISa6+RDwqvq6gHzBrnV9RjUZVVDTWzFyIioGbr5jSwRExKK2ZBJg0sRRijhltL0qSuUiNaxfyfziCUJoxHV26A3sL5zf6am0QdqlNfxfQtxmUXDYyUjDfhJlIFclelIb+ktr6ywR/f2RrjWdnhAH88a7zxIaIBd0pCrWZmFbQnlm8j8IFVoam2phO1qqWLod34K+rqoJFVzJxfxQK02kPetzBmTsVi/5yKBsixauHNVIHiumS80t+4sDKEcvzNuiVeq+O/52wD6DNo3cg6xqgK/3ymRaDNhCPWVcyaVzEbqgbtcWFtpw75z0XrpqJAcQGSVfOrNbSGD/EPHVNa5h8/ZmjZxAHjhvhHjPePHTemfMTgIYP98QPGw318hn/iiLLhYyaU+SHGuAGlZZP9Y4b6B5RO9o8aUTo4wz9k0thxQ8aP948Z5x8xemzJiCHwbETpoJIJg0eUDvMPhHSlY8r8JSNGjyiDTMvGYNJQViOGjGeZjR4ybtBwuB0wcETJiLLJGf6hI8pKWZ5DIdMB/rEDxpWNGDShZMA4/9gJ48aOGT8E8hgM2ZaOKB06DkoZMnoIVAIyGjRm7ORxI4YNL8uARGXwMMNfNm7A4CGjB4wblcEwHANVHufHKD0AS8jDP6ScJR4/fEBJiX/giLLxZeOGDBjN4jLqDCsdM5rRaELp4AFlI8aU+gcOgaoMGFgyRMMNqjKoZMCI0Rn+wQNGDxg2ZHxXISxaqDpd5GAJhg0pHTJuQEmGf/zYIYNGsAug44hxQwaVYUygPVCiBNEdNKZ0/JDbJsADiBcuAhgyfAgWARUYAP+DEDOsfilUl+VTNmZcWScqE0eMH5LhHzBuxHiGwtBxYwBdxk9Iweo4AejJmFcawpfxiD37sXRALJY6VMHBQwaUQIbjGRo/iovyNWTprKq6xUy+Q41cU5KoUDUtmoGSqykDEONhC6H5as/wEmQa2hdaIE3LdTUxZpwzQkqYqRGQcLBKmhKubKoCTdjAVAq0kVqmVJbUNGB7B3O4oDZk/xoq5kNhkKozFujMivmQrKETzZsbVdgw1tXXQJIl9TWLQaX4KxrhaX3NspBJrg+ZrFtrwEq5Ff/6qoY6sFg1TVXzm3tA3Hpm1xCTmoXVtfULQlVH8s1a3CesSxf7Z2PmlVDx2vrZPeYsXlzXJytryZIlPWaGS+gBqpAMIrWkjjSTelJDZpM5ZDHxkxQyi6TCOQdczWySC1czIYafDIQ4i0kDHPWkilSQBSQDno4gCyF+D7gaQObDz0/GdebVgHdVcK6CNE0AKyHmj/Pxk3KMUQFX4/GqhlRjibWQYyXmMR/jspz8pCfk0hNw+3FO4Xy6csnszOX/d3U1E+N/XFsW99/XuAZTsqvF+KQSQhbAuZ7Mg2e1IUr8T/iwYyzmuQBzbABYC+Hh/OdgWFWofrOxpIWQH8OS5VWNoVWdJc6CFAyH2fAsA3GrRSwXYvo6zK0hVEIt5LoYwmrgjh2zQ/WZFaJ4OM/FiAUrqxbL1uo9C+MtgJha7uEcWGwN9/lwngUpF4b4n0LiydDOPOKRgyxtJZ4bEK9ZkKYiVD8/HOxJI5RShalYSJg+1XA1H/nGcg7j2FUCk0mG/2KyBClShSV20YQ9qQNYC6U0Ip5d2FRiDRajzM2E0MUYGi7j50tgudcgd+dDqspOmixBOZgDsRsxHaPMAnzWvUbh/LskvaET20akYUY37rDrBcjPMK/rINZMzLsBUmf8TD0yOuuZBTnVwx3LWWsVWt41IarezP1/X+sw5TRs6zolejG5Weq6arQE6bHgPyoh3BqqoQ71KK0NmKarxEqErIwMPDNKzIUYszA/LU53OWb1rUW+aByahWVXIsY1IUz7dLbQslDKCsi1FnVEFx+666UuKvxYIyyE+ItDLaLhprjh9tJFte56oHs6P9a7IsStmSHKdMmbRpEaTFfxb3jKctZ0BuP/Ajx36ZD/hB+LoeYM32rUBCzvHj+i1r9Lz+jS3FkHhgGjfTXiWRmSqPkor/WdTzRsGV3DNV0c4neYllrN67AUjWaNkEsFpgvXqhKxZTxb2I0isyEeq9Gc0LN60qVLK1CKNBkOl3ErjRr+xzp113WVN0laBfLpP8fg5nJupcdP4aZRbyGW4Cc1/0ara9xhkOG14KZ8w08aSFgqw+3mVitSRWpC+Xen/BKsVSWmj/8J2xjfWe9bU7D4Ycsbf4ukaW2nhNxsaxhtNPsUxrcx1B7CXGiC0JqfoFoVWYq01iS3AjhSF7JkFahdqzpTdOe9hve/bzGMlyyMnRtCOFahNP28rGi1+yk9zkIbMdbNVP4pyvq7Ua87H/9v2izTtfNJ2HZ3tbpwi2KehNb2ZocwbPhRjnUo2fMAzg5xTbOPC5G+t/oh///QWj9fq5mhtrKYaPax+iZqDSdDsKwxpBTuWFlj4K6MTAQPcxyGjYBnfvDtxkFIOdwNhqeDCePPAAxh4fHYMifCNctxDJmAeWl5jAPI8p4MT1jefrxnd6MgfinkxdIOIZOwjCGQ23iMOQ7zHg1PS+A8JBSPpRgETybAPbseRph3qpVXCqnYuQTTMVw0TMvgeVepN2M1AksMYzYa7sZB/sNDoQMg7xGYH8M/AynFrks78RwawnQA0ojlzPIcBBiV4B17OgHOYyHeeKTnAKyzhm0p1mEohGt1GYIYaJzQMBoE57FQNosxDPAqQyxYSWWhmBlYQ1afwZielToKn2qYjQlxmV135dIjREsND0b/8s6Sx2P9S+Dnx/qXwZMy5M0AyD+cb1h2hmEOozvlaALWbwDSYQyWMBDDGBUZPUs6Y47rxpVBSC/GN4b5YCxpAFKkSxq61ySc283c+SnpCJcwDOs3BClVgrHHAx2HQPwRnU80eRyBdR0Uoq2Wpyb3mkyUdKPuIKwj4+xtUOqQkEwNQNrdXAuthTD8u2qhcWBACA7qRrMu7peGuBvGpwxLLvsJqrD2xzDJwNzG4V2YCkzGxoSoG26fWhlhPk4IyeeYTsxupm+4HYXj/Se6Q8srXPbNHByM8lQSwnB8JzX+53y79NcQsHFM/9WFbBzTgzdb8u6eZJeH2t0XzSBdOre7Z6Bp42EYd8Et8bqeanpas19dfaDuvtxPWbFwz1nz8bs84bA3oulwra/U3ROuRJ9d8wkbOr0UzY7UkrCnsgRDu+y71jtcgDHCFlyzERXoB2R0lvXjvDQ/swI9B1bazZ6jRs1/Z6lu7THWoe3XSlmC14uJ5qWw+jWG4rLny8jNvWStDv85D8J1+Z/oX4/8ZtZ0FqZtQivZjBpyaCgPrb/WRRNGgWoMW3AL17ukj+XWh9zqlzIazO6GeWWI47XoX/Qgc5AedZAyC35L8NcD5OHWOvQIeYX4PpejyxmE3wzyHVWgw9iMz8shZCplDsAagBvIDLqcboS4pWQq6UfuJd/C81WY3kdXwW8Xvr89BE8OaVfwfBfkQqDxLSKryEYs47gwVagWlgvVdCZdR9fBk09YmJAJv1SIuwqO5RA2k13TYvilAhEGk1SyFZ58B+HNZBM1iu9CzsdoIlT5EC2FYxuVqB5wuUAtXDWVIW6DwLCIYfUTL0CtGkkzpLuAv2/gvpI0ixckJ/cd1Gs4hEnCDPIF5L6ILKJGmsvnct9D2lJ4spbViu4kHD+XEGEG/JLxNxi719shRjN5mpvJ5QrJLBbi3o98RPYh3tXkYbgfR3YiJHw7Ocfn0WrAn9EmQjxKynUjaZxkoVm6FqAVkWLIKq6a+PjBwDTiJPu5lcFLZ1T+9Cj+XZU/ZeRPWvgTOfzxg/zbB/lj1/jWJ/jfqfxRlT9yeJh4ZAV/eBh/KJt/cwX/hok/qPIHVP63Kr/fyu8z8q+5+FeT+N8Y+d8EhVdejhRfjuT3vhQp7o3lX4rk9zxrFvcU8LvhtDuO31XA/9rE73zRJu7M4V+08S+uFHb04F/YFCu+oPLbf2UXt8fwv7Lz255PF7cd5J9fHCM+n85vhdPWg/xzWyLF51R+SyT/rJnf/MxBcbPKP/P0NPGZg/wzK4Wnf5koPj2Nfzoo/BJy+2Uiv+kpm7gplt+0/8aR4A3hKRu/UeY3BoUnY/gnTPzjT/CPmflHI/hHHq4UH1H5h6GIhyv5hzaYxIec/AYTvyEoPLjeLD7o5Neb+QfWGcUHcvh1Rv7+GH7tfSvEtSp/H6S4bwX/CxN/byx/D9zck8Ovvtshrlb5uxdZxbsd/MoWs7hS5VvMfEtQuAti3KXyK+70iStU/k4fv3zZQXG5yi9rniYuO8gvWyk0L00Um6fxzUFhaSK/pIBvghRN8/hGODVe4xfH8A0qXw8516v8Iiu/aKVQV9tDrFP52h78QpVfoPLzFX7eKH6ukZ+j8rON/OygUB3HV63gK1U+uH7WPH7mQb5iBT9D5ae7+WkmqzhN5W+38ZMnxYiTM/lJMfzEHL7cxJeNjxTLnuDHR/LjIvnbxrrF2xL5sRZFHOvmx8BpjIcvHR0tlq7gR48wi6Oj+dFBocQaLZb05EdB8KgcfiQ8H7mCH2Hmhw8zisNX8MOM/NAhZnFoDj9ksCwOMfNDNJYMlvlBA73ioCf4gV5+QNAiDljBB/MNYtDCB1cKxf1SxeKDfH849Z/G94Mi+qXyRX29YpGd79vHLvb18n0KjWIfO19o5HsXWMXeK/gCSF1g5QtWCvkGPj8o5PXyinlP8L3SDWIvL59riBFzn+BzUs1ijsr3tPDZsknMjuWzElLFrAK+R5xR7BHLZ2bYxMwn+AxIk2HjM4JCuoFPS9KLaTF8qplPDQopyTYx5Qk+GZ4l2/jkoJCk5xMhi8SDfIIjTkxI5QNwCqh8PGQY/wQf59eLcUY+bqXg1/P+oOCDUF8aH3w11pYpxvbhY+L46BV8lIuPzOEjcngvBHtV3uNOFT3zeDfcuVN5l2gUXbG808s7gMiOON4Oae0reBtUyZbJK0AdReWtEGaN5i0Kb1kpmKFy5mu8bOLloGCy8kaIajzIG2J4vc4h6g/yOgcvQbaSkxeNvBgUBN4uCh5eWCnw1Crydp4PChxccSrc83SlQCw83U8r711P0/+/+Uf+5yj/b/3FkH2SKPAcJRl+ZS+XOKJyb/C2Sf4Tk+MyM2659Ss6/14ydq+52b//xo2xk4QocfJeMXovn6jfKyQGPv+5wM8zM0aNneTfe3bI4FCuQ2YMhmfjJ8Elu4PH8HzI4Exml6vVJ4RqcRvhiY5EBmXhDJHOUL24gBNIVuv5tp5EOd92vi3bYYuzJcbZ4qoF0t7AR7V/oT6hs3z/bb2UChZKuHGRawGraCI2khp0Wfl6Q53cYDdbJJlYBIVIHLFDNlfb7IU2eyFkeelq+6nsxF75uTlul1MKxCeBZLsCeVSoLS2tqystreXokiXrtrLrMXV14t3t+w4xT+Atfic/B8rRcDWJVCANekEinF45//H5U5Dx1aJTOdnUFgBsAza69x/cr/4hXui4wKWzA3JYB/YwVTwEOfhIWTA3xiASj8PKRZmITogwcy6bLzY6KtIDWFHO5HXYFItZNuh1jGXEYrQbvX7l/KlWm6cQ/nuSrKLWnJzzDCintSObxvFxPB/nyOXjXHF4gFJgR14cHgJRvx9K9ekzqL7ikwrqUvcNodHq3hmfzFC/n/HZDPXvdPhQ9Qs6bgYo8ytwtNBVassF9coH6irawo4PqP0COEpQg33qBeFvkockkHSSQ+YE++oi0nMEJ10iOpd4SYbY5PclehstDsUc76vLFVMkl9FhytJHZ/i8vNUocUaSok+MM/OSUcpVrrZ6coDPiuopOn/l6pUQm1jlWttylLev5LytXFIuQa2zC2y5bnduri0pKa9XPtzY3G6PLZCUlGwTGDN1QPikJCpJLqfb48jPz+uVlPzWUtszD1l++OO/Pm6ue7eiWXnqTmr+U8fl5oV/oWMnzJowq7lqTsX8vjTwi3vo4wWHnn/1jETN6n9J6cnqN4tXceoDfY+/+tt3JfVbcMYyhLWmsn5Dy6M7LKaJI0fO8LH5gT1vXNTNAS/MRDwkiiSTXDIxmBEZ5Y3yRkRGpKWsiJZW2MkKuceK6PjIOq+8vFe6PrGnPsJn0Ft9vD7K1Us539oGwq60XvnDFaz31aLWNgVulCvZ0G50iniSHZPjaTyrV24OVissvECHuFwaoN3uPd3i0QPB3r2DA3r3HnD4nXcOH3rnHaF0V/uUXULfw7//Pbs9NKB3IQsW163b/sIDD7ywfV3V2WPH3n//2LGzP/wXn3m29di5c8daz1aGQ1mrHQc1dkKNe5De5HqwChSKyDkyMjOoIzMzI6cnl5vt8Mf5C3pzWY64OH9aVkYcz+VnJ5j8rpSEpqR80RVxl9O2PLNJrEsi2bn+aHdcYoIzOZWYcrOi3RkJnNvZg6S67c5oiyXBlpqrWPTmQpARJiGMKkeOgIBgY7YhsBdq19Ak3r505bu31VbltHIlBx6zpyA0SETLPzyFDNrYSfxH6HJy/Cv6bEqmBbNNWYZsa4Gpd1RWZHZEz9iCqN4GQ5YRH3mzIrIj4VFk7zGuMe7q7KasxmzLNDotlSZbaMBPmCj2oHm9EkCjgDT2oAHGAI/bQ/vTgkBenCtgoTpPbiK1UI0vOqca11L57Qb1vLp7929zc6njh5HH7lxlXzyvavFvnEZ6qmiwYR+9utd2+8jTOzsGd7xT0PvCttJHV48dS8mfn//b+EHLCrft83rUE3fWzxg3dZ/ToMYOfmXR0qWP/GXiB/O5kkFPjn/xTz3ZXFfQWXQv6izbPsp6EZygaKrqFCoqUFKahoK4R9Wj/HTJScwkJmgxNxFdk7TSIhGjA0z7+fbWHEjVzpQxTSA2hSS6JM6m2D38dPUl9VU6nE7YvG7dZvXoCvo+nQK/U/csnaGuUV9Qd6hrZkDucyB3KZw7ZbnrV1pMDh0RIPfWnLZw7o68fLtN4ZLzBFbKHJYpnUBHqL9Rjy6dQZvpJDqZNs9Yeo/aS90Ovx6slplcocCBPNqg5WUpZhMRZINO4ATeJot63kgty+162cgbJBtPeZEjVlERnBbJZDDrwDKABm3NaUfIVKud6VblKj5uzYE7+M+moqhLdAQcYnJiYoHI5/KJAqdupHNmqvujXo9S98+kNeqTM+lwuKHDhTd27Pzl1+pyeu/Xv9y5Y/O39D516bcMzw8JJ34kCqAp4oNWUccTA10lg6nTGyWZ4fFxUStakVa4BvaA/ma2JC/Oxr/LWTq+/WvHt5xFFEIXf+UsLM8odQ/H0WJiIHFBq8QLxCCsNhqISAlvZIoFVWn7x622wsJsDyhEkEYnp4uaM5PG/PbIsbL37i/Xf6IeXQA51dLN3EVuF8iK8hpHBEoE5WMmKudPZTvA9tZyizse4HapWJPtYHMDdAbUxBk0oMEFKwt1YGy82pZd0M24bkcrOqa0LmxQcSb2jYFcG8qlN2jkQDA5Hh7yWa3KEUSYiScoNc7yacc/PxEv/LCA9ehvXBR7hvRsfNBOGmWp0b5crvPyHpfBY3V5oWRE4NJV0BPZiTn5NiUJWqJNcXv8TJjiEHInl06evJQd6gX1d9BC02ka7a/+btKf6Ov01U//pA5XR/ypkW6gS+D3kFqnroXfIsD5GvSXj0H5RtInGCXcI0oif48kiWkCL+lpk7ScGHReaGAmoHprOzAy61JbDqM6ah/hH+yYHM+4KeYxX8ZFI6hXPQmF9KURzcL+/Y//5draZihnLZTzIZQTRSYF02WH02GkBpPT6UhzyCZikUlEIycul+9V2K3bozfbrTZipFI0VL+VeUtQJlOFbVcBCwX4bisMWxFN9TFDErDl5+f6BWYxaVxeLghZQYIdrAWQi1qWLvt6GY2hxXu/V2dwb629vvcTGvXGhrVNDwqVdGBi4t/fe+yr59Sv96ojrz71FrW/vvu1DYD1BuCOBbBOIxOCmQZfjMMT0+TzNNqtqUmNhF9urfOl+2MCsYZIKdVIYgMeKdIjO43E7krXNDtoGOVKSJsDD1svIfpvgw2EOtgLsx2dCLtBsIS4eDD5zBVAIxcI5IUu4iVdYO893zeBqo3bvuWtI+pr6ttN19c2m56+f+P23c8O7PXoY+vubrrf0izuDASOvrpmR4zv1MtnP0tJocMffPzFX27du/S+NS1rVrFRpDIw7v2gRhbQKyXBRNs9kk5S7tHppDRFZxKarAYz16RbTmwi9FO8RiLrRZcd9UYrKBO0Rpfai84XtYEh6pIBkcmARnEahy08l9qoGNX++087HuYW0aWU3CCfduxQBzVTpYG/2h65Sv2GPsxd6Ehn7WbHjYvCd9BufGRYMClG4SMlxRnZKDkbrbJE7yUNcp0/xsYZY4nHY7AZYyOskl+5egnIy4gb8n27URVEA9QMygJxOcktRGW0tAmr2z8fuHUKddKgekT987J/rl4qrb//0QfXrS9ZklspXlCvqftze6l//+aq+k1KGh366EPHfn/8WPFA7iLzFFaBVASAhhEkkeQHY4m/kY9sNDiYXCw31CU5jfbIGI9E3AGP7EoCAW5jfjqiybgPxh4QBOxyEDutEedoDh9g5wijCUaVfj/guTu+oKL6J/Wf6mn1GJ1OJ0053dQcsW7hK89+OnvSpNmzJ07kG3v1Uq9e/m/1v+giWk2fpM/GxqrfV9dcvX72pT/+8SV2AI23Qvv7G9BYTwqCkTw84CglaSJ/r66BQteJJ4KdSJKBia3mhwNJb/HTwB0Do2+LE/7WsfEdblKHb60wRPjgeqpw4Pf0C+Y9zw3RxUMCJIsMCibKJLkxLrNRigKVJtVlkwSXnBbrsXo9rqgED5/msUYZXNkaK5l26+rKoEsEWoZqzcKfwJwR5h0nxGFz4cMUAqY6ul3z+1/5rXpS/Qh+Jw68/MzTNJpaodHEPPPXkqnTRo2aNm1U8rT6hqnT6hdN56NiTv3q9Mcfn/7VqZiEF+8+dOLEobtfpMmblyzZ/ExjY8eF1++///Xfrl/P+F0L9VJQRyeSYDAgWyVfQGq0Bhpjo6yk0bU8qi7Jb4yV3QYPaO3YSDtjOqsT1EKrTfcm393ddUhgS8DRCktBl6RyB4Czs4HDSwc+N/2Sep0mQEVyaJG6Vd2hSUDt3i3i8jCD27/Iy6Omr76nsvqg+ku1Rq2IjaX66pp/AfZvgFUr4NvQwviDiqGet9a76vhfeO0SJxOvwhozoIkcyHZ0s3G2btdvsF5k7ZgxC8O9ST5zTN2i0tKFCzve6rSAHMlT94XKcpIeQY9VkaE42ams5n/hcsqEk2xUtrrAlrQzjc5KBSOOGvKmknk06WDRO4tdUwOm/cDhzlLbq8afuX/S5+obC9ADGSh+JLxFJOaFiQJHiSjxOgrmXgd2PqcQzT34OwbORfOo+FF7Jn/umipy/Dl1j7r3a/reX+gZhv2HNFP8iP8A+8KQE7eGrBHWSKv0rFMM3WHoB6Mj0A7+HNNxcHwociyjayqnXOR2XrwVFzCmHDgtgk4Cf0jHcujExZFHGTKYAX+OP/eN2vMvavbXdCzgcS/owzKUt3hSGIz1utzgjMTFrpWZegm4oj1RjHceEhdtlwPMHTrPelYhYWMqRv3kD6dvGgvgmbqBhiPoXMxIhvUgLQ+7MWfv/HNNO7Wo1/+17oG7ly1ZuMTQ3DlUMDk+/pN3f/93+7s0PX3/poceveduwHGN+rSuVtxCZFJK5gZ79xrTk0YLeT0VEmHmo4VIYbHbeH/04tHKAz3v7+1+IPH+3oPH9MrzjY4ATzlKF+OI8o10pI/sP0b5uBUE4NNjDP2cnELNTIJ4QK+5o+gKPGxlrqtmQbH15HVr7S4p1DVkPRSwPlrPGLUoUNzltHvcAkQr8EhCID4hOYnL62UvyIf+jOBx213Q3gLC93dWzWpunlV1Z8aGKYf/9KfDUzZkfLTh6YWLpn7/wN1/mf7gUxWT51HP88suzS5cqX710O/UN1ruuueeu1bSYe++QhMa7r1HbVUv+ej3Jaueeemxx/b+8hfDS745d+7rkmErOiKTL+/dcHlGadnQIXPV/cd+qf6jasmywYOml5XdddeddNSRI3TkirvurJhZq17ao7appwh34xtCpBLQ0VZiJw8Eb7P7FLsgCjafKJjg0Bs4o08UBSWW4zl7rM3O85zVwpljeU5mj9LsvKlJMRtEnjbxDTpix5EWk1HPxsbMDok4QPJCYyyX2jw559vCJhz6jeI/PDk6Rf8PrROJd/iUPZscD44IOK65LjDxfByf6wKgLONyvuZyH+wY8sjyjjMrXhHomb82i1OvbWtupj3VM81cgOvLbMIMqNM4qJMdPL8EMi6YIjuaAg9G8k1iQzR0mCKdDtkv2QMxgsMTMPgTrQJJiXYEuPhEaGg5l3LQ9fOwLrHm/uXA0/a2wux9vqSxSXVJPJ2WC4yH3qjmRcVSZi54TbumU1v4Ysbhw3wjuCT2Nw98/o36MqjI1bu2P/fy6g2H9x94c0OzcLF5/2/vfdrpenvbp+/z1StW3d10PWbjs1s2M++kHLT/d9AaI0lxMII85LmLN2+w3SUblvN1URa7HEmciZI5irnpp86HrTyIb1t20JwdXRvdyC2PWB75bLREp1FJCJt7IdSjZr1NJqLid33BwKvqL9QR4LAvu5f6n2tJPv3in86f//jxN9Ppzr/9mT5Hq8C8PxccoD78xkH1MPQdf6Me2b4D3woSaRPadhfpHYyQdU2WBiNpMuioy0qERLvZkEICpng34MgoylzpTmJmv/qS57CHo9MSc3NYFzWd0hBBEVFuy7rLH/7xq3UdRw4f5lT6CN2pTlBrm2kGHUaH0HRgN9BOXak+qT6utjBqAS4i65t7oNfaw/yYyfWow9Rkfcyme9TwCN9ke1BscDwCfFdkuyVVb5ecdjdw3G4Ejnu7OH6VWaSsNjiDslUuXVEAZL86NqI2gutkOB5xoWt2Bh6L/e/veICuWbtWbebWrEXUtnygxh3qaD/Use0DdUsIv0cBPxcZE0wF/B65GbfuqKUBWhJgxzHKXcoBB/iScuXqFYbalZzvrlxRASsV8LJ6fJ6fwSvXxbDKXduxkS4HrO796macHmvW5EvKBfmKJYODcbLN3GS1Ge5ykg38XTGRy511PkuKTOwxskOREj1mH3YHz0PJnZJ25Q9/AC84+1XFP9YPaNDuYoVIgPbrkjpxVeb7h7/88L2Pyx7q+yoXuUN9+SVgHxO6lVto/jMCeftl9Zi6W92rvpWURDctBfNeQjfTObSGbmaiF+KxLhdoGEWmQ6/oEc+DVpOO55vMYkOEywbax0GccqYxUsrU2y0pbmNAASJ69cDi6DCLASj4z5TRFU/OdwyoV7KDJl/M2JiVMc/GvBQjdpLUhWPPeEYdZAsRlidHuHEMHukghzv2HGHEbVaN9Lvm5usxzc1cZcfTzSF8+Rk4ll4YdOqY6jEAn41Sij6A7JUZe9sRGa1NBK1Wc7Y5aB5rnmGuM68067qjEi5aKw4KIvTGXLWcZ++wnWRVMEZvNdAnxLsItLsmU4P9cRdnJ3KKJWBM0/dwQVHtl1BPMClX3lYvsd500JxFsmiWM9sddI91M1Uxaq+lbNRea9nto/YqDNjKbp/0JnHdOAL1ccEv2NtW0Hty0HYHuYPewd3BTxbucNa5H3Lrp/F5ubGUKb4Qvk4J/Mon7pZGl1SM/pCPOvwv9V/jd6ibvpo+6fF3xfTm5mvv/tef47tx1Us9wf6yCfpbVsVqiFWsLp9iU5w+m01JcykGnlqMjNuy2OC2MV4rZpNRsHukFBeS087FR0AvAghadCknZG7acnKuFoHJsXm6LA7rOAohWzM5/hWdgY1XbjIYRZMoG50ek2LyyIrsMStmj0WxOK1exWVz2V0OjzPDmGRKktPMaZZUa6qSbCtUhhuHmIKmIXJQHmQeZBlkHa4MsAXtQUfQOdE43jReHm8ebxlvnaI0G1tMLfIa40u2l+wvOV5yvmF7w/6G4x3bO/Z3HP10BqPLafAoka44Q5KSZ8hXBhqGKbcZypUmw30G67TuMkDxZGAmkXbJYvMWLvN4x5fch4+qUsdsTT46PuPiQChz2y83Q3d3W1gexQagtJn0C0aaDJpEMq0IEmm0y0BE1lgsIXXNmnrWlSvfXclRWrODhmxjtilbzjYLNzUPTf8xJErWaHKZ2aauY9qFED2TTC85FhzsiNXpdfZYvV7n8oGL5PSxfr/LruMdRr5JDwxVZNZ8LcTpkHSCR29NsXlSXGA+bAETYOXSeItYsdarXOp8Z6O14R8xuHN04BW9k9Jpwf4ml9UVq/Pava4U+3hXnUsvSka95JCdLsnp8DmTpCRdkqOPs1waG1ntnBHZKC3RNTmanHWRKyOfjXRPI+E6G2iXNoB+KVyVHzrEzaE76S5u9uHDHeSQ2rNDzT3EaNE+kD+ECkFouP61YLu+nmndKWAzVaCLg9wVzLQyQkg+RbGmKToq6/kmo9gAwm0hhhSdPUUxATQDARQggDNMAFZ/VF9Y865BMTFcZZ2OiXR00DXWNUeqc62RVrqedel0OrcuSVegK1DmKFKXUNEwJ1ldphw+TM/x9x7ijIfVa+0LsBbXP+N3QGPdJhS0D2zG2T9gN7aERg6zgnZylyzdpY0cJroMiVbzLSOHQUNtREvE4YgzESA5iWjrNTvRfRiRX374wIHDhw4ePKSuUcvobrqUNtNd6vipdCAdRUvoQPWg+rq6Xz3YTJ+mc+H3jFoJlv8JtZJofoh4FmgKnQAyMhhva5K9TLTZwLgsubx2q9mVZbCm2cwBA+rdyC6ziq870CthpjXnD1ey942NqotaGdXl4WH/JcBUP9/drRv3A01SP/xevfLPf9bd/ctNq+sYsf5x/MTXqrWZu7j74Yd+zWilbkBaOYmfDAnGyK67iNUWdZe03Ebq4hQDkWOtdm+iITaRN8ch2RAbbWypFch3WrlSyCgY3xJ/OP5MPFBQTOiimhhL+1IX62Z1IyvfCM7c7Z0kfF19L29jc27MIbUkROIYiW4Euxqm4e/UxVmFOd9to6m30jrk4b2CFjeBPBYcbjIaeFnv4wVe5xMEPk0vkGheiG4yPRlwNLkabGahySrp/ILIR+iJm/ebAjG8RZbECPAl/AkRTiUlWg7Yu3xsEGX2+glfweL7p0JNsBkr1CvstZT9JuHWXjERKzTpV006q5WbRmOpxwHNke9BmdvtiuvmlSeG2SUUT16W+aenVNeVIRXl/ZjRPsyXUYFGnex4YvUDTz75wGruQ/PUieqMZvrWA6M7PmlmrDx75OnX4jauX/8E05xrwBcvAT6mUl2wGOicEOeTTbE+LsbvM8mmNJPsjxPcdCMY32T3xsi7XPblyXVpfpMcF6P32Jkd1jtcPRNiHMSanYYjtJew48ykr7Cw06N6W22zdb1gY+PL4bdqJJ1psfukWMmni08xpphS5BRziiXFl+JPiUuJTwn0MfYx9ZH7mPtY+vj6+PvE9YnvE5hknGSaJE8yT7JM8k3yT4qbFD8pMM84zzRPnmeeZ5nnm+efFzcvfl5gp3Gnaae807zTstO3078zbmf8zsCbxjdNb8pvmt+0vOl70/9m3JvxbwaKs9PHpm9J35sugD4ssIWsfa+kLIqv67o6F6yb7KNanyg+YXNLzB8P/3Lrwl1//ugVmkyNq2nUxpaY1tcee3LOO39+76B6Qj37iPrn4XTmju1N9VMq0wt6H9//6X9nZKj7Nm2YXT2toldBr4+P/uWrHMYHD7T0z7CnWhuMMojUxD+iazBDOxfsktGuBzELkBSJU6Arj+4OG5uAlg3OM1OT4NzIZczB0Zwb8GsU9GsU+IX8Gg94NrYZtg3CBnGDtEG3Ur/SsNK40mSahu5f2CEEQaMNb6uz14on1qiVx5uFc220UV3Xdj0T7exQ0JDvApYRpDSYIEuOCGJwQ9vgSZOVa3DXRfIpImBqV1LsNEUMkB6RTLWfB4RD3jVzWZTT2F2Cxl8c9WzUS1GHo6Dxa+bfprBBiIjwDSoDKhziyeE9507vPsTpD6t/VJ9Xf6X+QZwKjoBL/ftnn1MX9xVcE3Wn+glNohPAd7wa6iFbyP3BQotZ68ybYo0m6N+bQLyFrq5/momXsX+vIw18Z9/eYCWStbNvrzlanc013K3Xd7laegMT4kjeRE16o0EyOcwOi6IEzAGLXwkqYxUTiBWoMzCrIS8nkCeNW9Hx7pWOd9dzbzxMH6VPgC4CU8Sq1R7gP2Ee8BVCDE70gC8Hp/Kx0Bq5WMrJcPLxnNlipj6LxQzK0RrrJE5LrNlCiPPW2llMHE8cVgMvNtlkXQNPnIq1awiDEqvLLrm6BjGuFt3iU95aV01ddT1hNtnM6j7YyEVxbku8ZRA31DKeK7foJU4vR5AI6uKj9FEGj8lrUdxJNMmcbAkoAdsQOpQbyg+zDLcG3WV0knmiZaw7AqiUSsEPCVMpzqBdSWehH78Hfqpa/jDXuoXGgEKPpsNp4BV6+imh+PpRpNs8wXL9c357M0qqEWQAe1Q0NVjNcxyNBfeMxEYR8EuIDzx+tysikovyud0ujYYupKELTj6rBZw6k8yZfeDXpbksOiJQh1Xm9U02Y0Okm4mLl4+KcNkZMU06Njxq8RiicRgSnXPPj5zznyLkTwmSwojZS7JEEocljSRaRJETeckiK2ab3umgDslhjrVGOaOilJgkmm5NV9JtqfZUR7rTyURs1F5TGdMEoAXMDFhQFUSjKoiGX0gVOHsT2s/UT+6r9LX1iugVWRwzJkYP6Q3agJShS0rDLnleLrdPPbm/48p+ulbNXMv9dRtwKXYPp9+vbqCX13d4tnPFah/oIPblwKVSp9Jt0CS/7MhDXjBJFk+iJLcHB5hlaIrQ/THGGozQATL6TEZmdfWcAQ2vkVpNel5oMksNdubl2EwO6B3ZDByxOGwBkXAu7b2p9lqqc0JHW87/2EqBOoYwdVBRYlfQ+dO9wLGSkUoGt8ENPSY39Jj87pG6kfrbdbfrJ8uTzXe4F+oW6ucYauVacwtpoUt1Lbql+hb9UsMyuUVeZm4x1znqoPO4Q95h3uI+LB82JwF5Nc+6G2mZWaczTqqDW7hT2+lYWvo43dWizjzZTP/JfQsEPM4VAhzY8RFKdAlQcT32cZqD8QYf5Sjn0xv0aSaDwD0iQXeHGDjeaNfJvF2UCZstgXOFQj7gd2qr0nqzOx0iiJGRwcRAWHCAIBYkiAV+GkFe9VnHgFOSm6e9sHLh2+ASfnlH3lpRad/Afbt2vXD4Mzpn/fUBZ9XthFKifssXSE5t3F9okrgmslIvUl5h4/7dZ4mEeh2UcAUXLnSclJxLfzi99Efv/nFSCk857qZ3/w7QqJ9w1k87vmXv/qVHIdXD6rfcyXC5fBMVWblEkThBf9P8ERoaUeJOdpy4cEFyfv/pUikHyz3D7xC/gHIlVi4vQMk6norsvYdWag6YWygX/vl3Oe8FdaQ68gLnEy90nKN91WNcJuKuxghE/Qhwt7xKqEC4rNAMCQptSSDtEHboEMRbL1zhtkvVEC/zNQpahg9Nu4GYROOO1oQFZIcAP40dBobANsptU9dJ1ep9dCl7Dw2eHBEGkxiSQh4I9oxNIj7FbRGTqG+rJek5vftZx1pv1Ga6VV9n4f2WgODO9XB5sVZBIQHFY8pJ1d6v5+SE+g7aLCn1bfVSyJ/TJlOB3c7wpfVxFruK3cWeYm9xRGHkmLSWNGO6K8ud5WmRW8wtlhZri6/F3xLXEm+C/pjmvVqo9mahLw2/K8nrT3P9As3rfPsgzNmoSkN3LXz+pesdB5atnNvgXXTHqUWg7Q3q5ntnzR09Zlwlt76jrXlN2diXnv/NK8Wrlk+c9UV8/PmOTy/Mr6qqnM96TFlAhaHAfyeJI8OCCXEu0eaN3ab3brPQrfxKstVSp99sj+pvKnJweS4bVL53PPPZwWlnL5Sz2i6x8VFWYfRRXikGOk/TBv0A2xzWN4FqJEN9aPiVI0P/+EZ6LXNj3UUqqtcv1m3MVCV67Y65CyZPXjD3jmYxsLTjgfG3qRfU6/A7f9v4Nc20+sD2vV988dL2A0xagHPCauBcJMkJeohnLW+2rZUNm9loeC4bDe8v5XQfDW/HF1Kt2a9YowE5ilPLOt94h71UNlYprE766vfqJfUE7UXttX9prFPuqn9sxbL7562y0JJ9vwFvyUT1NCUtTf1wzeoT//3PMyvDcjQHKCgDBUuCiZTYYozCtkjjNmfsVv9K81ZnXeRmqy8vBnxLS565SNffk8NIePVSe1HRpR+TcF9xoCXwUgB6nTe9aRLDMsFQ1+bD5cXxtTNqFk6esqBmBp35pKrLfKruL2oH5f9S91QmEJh+VnNg+0tffLF3+67mNeNvoxlUpBJNu208bQ/hLRwAKurA0FUF4yWeGBWyVa88a17r1G/n10ZudtbFKDbSX19okIo9OTGM74yqSNO2NoVJuvZOLBg/I7Yl9tnYM7HCYXJYOqw7rD9sOGw8Q85IZ3Rn9GcMZ4wyE2ysTwwV40IEz+0cGPYTPq90+u1juI86Eu+8v+FB5/b0G+Svapv6IXQpzED1SG7S+y9uf8u+RH/69WWLX9sJDdrCmKGeZBJRTAj/GfCA1SRJ5yZ241Y9eVZYGx2xUpG3OvUvWGguMacbTDrFmkccLtuAGDYfDLoGRa2XQl0D6Ghi42UTHFkHwVgGiiSGBCH7GBJz44im17MN2UbobGpyE0Nxpkmor5kbeg/If1anHzVk7HBqUv/1bkefJzdv/stHE7aWisbSkoZVa5vb32lu5vOa7335dYeDtcAytVCcA3zwkQyyONgjw69EB6w0dZuDbI3Ry2t1QmBbxOaYF4QdjrpMQ64uNs8fbVVIUVJ/nTsnkymhq5oSYmzBtxVsoiaIEw4gsH5DtN7oNaYYi3sIRE8MglHRKwan0a/3GxKMBtQ32ryf0KhtP9pdzMDu0m5imCecVY+qn8z9U8Mi67pV29Z0Fzn6g6oLyyO/p33Gn/8VF6fWVD9zvLm78K1pVjeFxPKAxjlxK3AuhiwNZkQ6wTv2PGfkt4oro+wWnm41blaIbaQjerhkzXMo5qEkL1JShEHcgFg2wSHn0tVuo2BXPDntXc2I+Hzgt/I4kI2sjEVWxpLYECv3Zfk2+Pb6+M7XJkxhgXersVOrM9wMfXIzR4LbVvzm9Y0d964aMmFe5d2ooVbcUXbu3Y4L4MPlral55tdqoBl4ORQY+gHUxgSeUd+gl99psG91vgAiaCGjJHOerDisebYBbm20/zwq0Jz2to/b2GsHT5ZnhmeDZ69HpNO6T0WgnWMZb9TdNqa2dsxtdXT1xo7aJ5+kP4hlt9XWwsOF1xtRqKD4G3PUQq4f4hDL9JE7yhGryJ5fRwEyUWsdBsDlBccOnzfXDSi5rQpgNcDH3gm0ap1kBUToFJMf5ZLmL2a/6vNnsfc63ZFyMILhVXKeR+v+v1I7js2UuK0uFRD72+dF941YxPUdOKIPw7FuLOCo7my+PvX5F5yOv9Cxw6Yvx/4xcH8P4BpBfhscbr1HsRr0lnsMBr27xAOoWR1Ozu4qYYOibqseOnGGrSZhq7TS61R4bqvpBTsxuKCfYZRsbjLcA04azbPxAyLDY//hoeE2cHSZhu3ev8Ape6GXzez98itWF+tJZBvdVrdb73MLJofVYXZanSaXwR1tiDBGmGIcPkeM0+eMcvlcMW5fVFZUcZQDu2Ah+dGcVFHjF9XZcrljHasYl+juFvrFMfUKPdLQsXmF+uGsXzAJao+gq5qbv+s42txMl09SPwnRA+XHQHoG7dJW/UqBbOVoHlF0fJ44wKjJTUhqmMyYskwzTBtMe00ie30alhOuOCQezc2sIC1f/XDQMdnkzmCxP9JhFqR0wiu65K2pMcpzPfjNiXFep0nUbU19IeA2kAiHcbjsKY3Qg8RKrtIIxRE/PM2vpCTkJQ3oiUgUgfReCg1B45SprCJsgGrRlRzm/XjY/PCgmeRk5QRzZuTU5WzIYe+UfrqJ/eiGERKjCh+N3NXw+msbO9a09Bs/fU5Lx5aW/uPugPN9rHr9tyy8eyvfPLfizFnWEOl3x+c8/IuOb7tfQZt4Ylr5rLCsbUV/r1nTNB4Kega0zWZN1Ygv3KxqBNQ1qGna0N25SdOonYN2/weqxvVzqgYqdYuqYRX4KU3DvA4BasPG3jODDrJWltbaN7Ox9/6uvob+1hw2+K7N+WOyn71PiQhGzIjg2ch7aAIvW8vRfQLvrrrbpyxaNHXqIvVv6lFaTCNoJO2vHi07QqEyh4+q6u8W0XRQ4jqaqn6g/qBeUy+gB6mWi0MBE5kEyKJgetj/MW+1xoMDBG7QZusL/scj6xJ8vQg4P0VxFvSFzL0TOh1JbbQLjRcTn7AOD5MzAcmZQBJC5AwalMTixJbElxKFadTVza9MDNM27HdqFOZSw76luvkWx3Nbx8yN3PCakHeJflKX36kOb27WLHQ5Wmg31HB8MC3g0Tki/duMZKtTBCc5cpuy2fkC/7ixLkHo5XFIiovLI0Ux/c05Cejm5Wh+3k/U79VaqAQXdvhzbf/e7j7ZMWvbz5vb63Eg9vt/1tAC/foSIpRALbxkQjCRuG16g4OK1q028Tn3ZtCsthdMxl56Lpcog+x6Rc6zDIjQTGzn+z+UeaVVWx0CjdsXmRVZHDkm8o7IlkjWuMPO9I8acckiaWzJ4l8c7Rj65FZO6PXrO32ThVz1rQnjT72mTsU2+mbtPAPDcRL4pJmAYyq1BQdZzJxVvi3ObzByetNt/jh/eHR9t+jeHSmuJbuSI9e6dtk34wh7nF6O4Ty5LqiBfowrIWYMseZoI+yt4RF2W2iIvf1Sm/LXK+GlTz8eZA+aTQaT0WQyySazySKRacGVLenPph9O51MNqcZUU4acYU615AeGBCYbJhsnm9gQx2TLZN9k/+S4yfGTA3MNc41zTXPluea5lrm+uf65cXPj5wbuN9xvvN90v3y/+X7L/f774+6Pvz/wlOEp41Omp+SnzE9ZnvI/FfdU/FOBFw0vGl80vSi/aH7R8qL/xbgX418MFE2jPx5nz79pWUzXOHvSjEWWJ1bNbxhR88ivHvvm2vQLqxYZ1q6cXxsc//DZLeoN9Z+zPvXR1CUrRg0NDo1MTH3q7t0v+uLUqwsWDhmY39+VmPf0uld/Hcu40fPGRejbLwINMz0Y4wG/kWwVOOwf1EncC15FZ6MGUeFJb9A1RW05p863sr4BdBLaLymtnQPtJm3MBNqxF9uxl3jDanFMxB0RLRH8NPAm2JQK5kyHOgZa7/edTZvoTJqsfpjRJ9ife9zwzJGPnub3NNOR6r7mjsZ1g8unbFm19nXIk/Vi1wnJ4EfUBANuRTTJjuf0HuZ2vaCvgzbqHe4WFGiWQ815VsXUG4fZWQdM63+1A/KdPVgSRUOKHEd5AO1IRDuSRIb7ABui9kZxN3XT0f5rDRUuhatPqlIx6nF6beCkebNWCcnt4zQ9zqU3dzz69rzNuyiOUt34iK1KAMwtZEWwj9HA6e8xW8y6eySdBU4leh0bxhA5Xiphk6V1bDY884r5F4jFzJYwCpQYrCaua/C9/eZhvU4/p9ugaYrIXB1zhpAujhJGibcLt4vStLibR9roSXVNIzdzFfS95HV0w3J1DdC9uWMGt6W5uX2cNkapkwFvJ/k0eLvpHqfDeI/ByBZVlJiMgLOB4SvwHHePTq+j9xCq1+scJU6HbJYVG2cvMZvlNIeR8nqbWQJfziqQF0x6p8OusMF2qJg22C5aug22t/+vBtu1sXYTq2kfqzHdWEB5SW8y6IyiySh75SQS4ANCmpJmS3EW0Hw+XyiUh5FhdBA/SBiqHylPJBMNk2U2wk6jQiQJmMLvI6KoMPbbE+vo+hXq4aufX/xWPbSYm7Ki9YqQ3NGXK2EE4jZ1VCPBjnL7cXwLuHwOqBVFc4NVbPz8HjZ+fo82fl7SOX5eomc15yhbEkHu0cbeSzrH3kvcbpc2uq7HQfWtXv4FHGbfajNGRXhc3UbXDfasrrH19v+zsXWGN2g+gVg5K280WYFuVtlqli16qxhBIkRoECTKRXwmn+wzR1tsEbZIW1QiSTely+mgHuMj4iPjowppIVfMFfLFfKG5tyVPybPlR+RHltAR3Ai+RBpsHeycQqdz0/kp0iTzxKil1qWu3laLnURbEkiaJY8UWnSsg+roPrJuumnUnTvzxmq6eb36T1q0vmPq2hMnN6gjN9JI9cwSbu0qbjvVNzer96pDwTh61S8Brqc7mtnboi/UQuED4Eg0+WdwKut5kGjZzFnuISQ6wst57okm0e57XG647eqLhLoiMYpk4i0K0ZnW8lEeJ69sjbC/wO+IifZ63C6HxaqP1CsxEonU50qRthgcVw4tqPRoE87xrZ7a2rnM8n9gDPZPiJNxY6Bo1lt4B3HwTuLkXYJXiPCYFYfidLlc7kRHojPPkecs8hR5iyKKIouiiqKHeodGjHeMd5Z7yyNirU6XG/TWNBGVVrjjVkxDAq5RmWvJvq+h59Jhi/hBgwaMTVHUng1cVQu1tK+nG1Z90zjT7fqUjh45bFaikAfyvY5r1N4fDQcJHwr0NJN7gwnQ+jnKleBo+x6DsIfbKr1g2Irj7bk6PleUdTjezt77h8fbVRXM8f/5eHtQlvTJlDNzM6wtVh5n6XQfeR/OzVTzlvCfdjxD25Y084X7aPqS9uNH1JOQyS71FWEB9LnSyNRgls8eZTGky35HVMCiT0rmZXIfBTMSdV/EyvSAzyqb9WnREVwkSfIpZrs+na0uZEscmemw4cJYbby8HecMd75xYSNKIpuekZyUlNe1rootKcnPz811odekLcFiVkRY8FjbtpyYiHnr+/VbPy8iJmdb22Oz68bNWrW6Ylzdheae/RMW1l17sqG54clrdQsS+/VcOv0+9dtn18TG3/Os+s810wmlejWGfibF4JpDNg7OdY2T4/LUzz6QYr4nesI4dwDq34z1nx7Mjk+PjZCt+liTN9oqiAE+lmxNjd0aDW7iynRfdIzea6WpdoHExHsVhZgEJABb5Kl1hWyh6fOdFNAm1YTGETxoHrVlNLYQEdweqDNzcTUisBnUkhQIHKiqHT/znrsrx9dWPaKR4oH+/R/QSPHIhelrqPWZX8TH3reZWu6bvrRnv8QFnfRYmNAfV+h+SI+JH/HF0L4zgy6vx0GVSJk4hDWR8hpHjNdDrDHsBQXO9WeTWY+Epv9kU5zSn5zEfmzUPY+tW/C4PR4chP1o2sGqOzba9DrzrorRL8yY8dvKO5606627q0a/wBefLh/XR+J5ceDwEacn3lao46XBw2/c0ObU61aTZOjBsD8d9BQF2kj4UMgC6MMlkVSyL1iZ6ktOjYqOSvFFR8XD4fNzcb7o6KjkWIvVkhqbkmq1WpISuYRYqyXAHqWlRln5+KZkgyuZX5rgj+bNTbFydIw3YElOTBDT7HFR8bxXstpTU3w8kbwxbBJvGtNHp5TzpzX5tHtCR2FoHuxf3/7DaTas220u2b+fmd99XJ/m5dKk0HIIXAN504R97uHSvILRpfl5pR13LON0fYpfaGx6oV8RJ3Wfwn9JGps/enQ+HD8saxa+Tmwe2bhjR+PIppTrtu7z+m/cIOVqLZsVzyUD9ZCu5BNaS1gIzgDXzYOQlBDFBZpFGyEE59zpaiGkZyhEpDswBOey6VZDSE4nl1ZgCM7hwJDenSF7MQTfIEnVEDI4hMF6Mgkx+HHIoJ8N+eCmkNJuIQ/eFFLeLeSP3UN0Ud1CPg6HqLXsHQmEDA2FfML2ydDSCAcQg+GdWP9cyKCfDfngppDSbiEPhkLYWNb3mOYP4XJu3Ishdhzl6h4yKBQiQ4h6U8gH3dJ8j+WEQx4MheC4DlLntlDIHwG7MHUEzG1cZ013/UzIoJ8N+eCmkNJuIQ/eFFLeLeSPoRDsl2BukzoxeOtnQgb9bMgHN4WUdgt5kIWAtiu80Zf/DueX9w7GGPm9Ju4Vg7BXL5IGSeYlWiZy43SkzGDS43p4bWY0WxPfevV8kXaXTXP5RBeuxc8T6faLqfQJdW7qxVR1Ln1CvKCODPwxcH2PMA5ObETkFb6SLxFVYiMxJDpo9sp2siw2aoLkmmCNRYWKb36ZtdE0vKbWf7SJBkcGLsvO6tkzM/vOwesPH10/vHLWiOGVVaKam5W9dPCg5szs3MPr1x/dWjl8+MxZw4ZXQslb1AvCWbGESCSejA+mux2xEdRnNJNIqiONJjNtdEY4NpvrAlHGiFiX0eiQSXyETuivSAH2RrD11PkiNhdce1vS3traprSqb+OySG1qRHaiDTc5SZRwzxNtS4bu26Hk5xdwF2dNLOfG+d/c2Kx+pb4PfXFXc9/nmhZZF1bePkeezs+LOHnu3Ilzz/zGobZRi0QTqQS/gA6s8n8JSYnqh3etMrXfqyybyzj3KPhN7bj2oiSYovPqiWCRncYmvdAYG7Xc3iQ/4tYrBh01ErPd6rKZdGDKRB92t1u1pUlMcbfmtLVdbcXBJVyaDmZMW8rrwj41zljTXlHZ2Ow8t0f4bKk0q6yxms5Qt9Bta68/efToUWqi9gGvLRVeqZj/+Evq1eaOc5fUR5u5fs3U9cfzdhvQvvhGP/4bwDUPZPXt4PzUFC4teWJRv6KERC6QNLFfvyIcsZk4KH8QDtlMzM8flDaoX1F+siyZ7EmZQjQVo/1ro7ziWpK7fHC/YCC/MAlEMhjIjEkuHFQU0Nu5ySQw0RUzOUo/MdsVnEjKrdmFE6PK0wYr5y+1tbID30ywt1u20D4k+JpdOzOhY+M9uD7fU3jz2M5PncB6uUKEcjIT7w6vg9debHQu2U5O1vbFCdu20EY4Hm25H79qiTSn4rbb86eseXN9ff340X86Mf616ib9nLkTp+XdvuaNBxsaxo/5U+vIPWp9Ro/bF+7IzJpWJ771TXn5yEFZA7OGz9zRMOex9KyWKWs3etzfTBk3cgh7OmtH/exHMnqsmnzfU56OXXGlmf2q+0wKjEkrqu4L/l0yfZj/TphBPODf2SUvLqIN+3eaU3lzuwP8KdQn7+4RI1bn9MoDn3P1yBF3s1W+10benZObl5/Ta9WIkatzc5k7uhrl8kZfYRPOrwT/yShI3MNsVyaFgCzyotkg6tjMSrZwslUjfCtbtsLWvTOvW/vhammulktftPH5jR+0UUG8sOKHi1LMDxf5Utsn+w99iaPyoNPeBe+zF2kI9snySkQw2W0RPUQ+8GtD8tp4H7/WstJXZ9iqy+qR4LJH2LxpJCE33mXJIbY0a3SOpETr84wD8pSrl1rbTylXzoPzcv5K51wn7FpcUq+w1c+XNJEIGrLyW/I35L+UL4SWKrFWorUMv+DpPpYmaUPIoVG35PCwG/+Fbkbdgpmq7knqpWaqo+Yo9y+f7TF+0sszf/jz2Jcqm80zp5dM3+YyTa6eskU4duesJWuuT2kWuJPvnfvi9skpg/oVr9w8f8ursbGUmzdz0vCaRqs+OPKZml/8ClQBjQIP5QvxXZxnXUTKyKbgeG2udU8266tn11xr06vRNrPwqlUaEXC8Gv0bV7/EET0FcYyOJ3yE3q1NuJ4m+6dHRMvTnco0e8TtY6ak228fNCV9asEE0NFsheA/lEs5OCB9iS1wZDuyaL2x03/49EIbBFxgM7BZF63bbhdd068pKEUP+O1svWuga9AXXb/QjOtAwKEtdXVyupuXwHrYCllsRdjICsIrZ4UHk4sclUWfNfr7FkSWqxvKy+mxpffPUl8fNGbChDGDpm6kugUL5s9fsED9YeNG9Qftmuo2Nr83sZz9nW1efhqvJp3hvjXlpX4wTh2crn4xbhy3etzCOyZXJwwfNGg43bgQMri2aaN6fcGChXBNxY2bqATXmyZOLD+zfNkZyGACXC1bfqZ8UjkhfCdfPCSLjGS7RGT/etiruf32Dch9LWHAq0WFr3lJgty/aPD0/JFF2WlTpPzYKdJU+yhG6FZFvdAKcqmc1kj7LxDGL5RLinoJzOP/jjqO7uuNu1QXTl4h/wvSfBf1+i/f+PJy65gtE2vkmtvmLGmqGTHTI777vyJLh23dA9++/ft/JiZ/Nn3u688999rUycw3uMI/Ku1HzZFCVgaH2WJ80QKX4I90G0Xp9Ri9hduf5JR54fV4r96ukIbU2BjFJsTZoyLMJGJaVNw0n8cxLcqVHJjmS+QpMUwzUd00MRUMQOvHl1qV0xdOX8r5w2lt8Y9ymml/bWOhIrZjW7sHXBmFrQXSzANbJh/I6xROVyDR4cjtXLbDB/hOsb3C5ZWsLlffKF89il+7ffu/ysvVN8u3LnquHNy7MvHCqzPVGWPH0i0zX1U/oonj8Ga2epHGqE+xx+NAJ08RrvANoblp3P9ibhqbv8tNpR513TY2Nw0ouF5MhZxK8d3eqKDsMlh5r/0OWbqDqfl2bfs+tiUeYUMibFwdc/Sy8XXMkYTem9063t79BX73tfnrJxUVTSjvWzSJHp5YVDQJ7iaKbxSVl8N5Ul927jtpEvapb3wnfiRCN5r0D8abnUaeI7LFuEbRrxHIGru0ymm3mGW9wHN6g2glTkQyxJw2NgqZ00M5giMBjjiHRweU17Gt9JLZVl4FcR/yUdcefuJbtXw/N7P9r9ceeeJbunN/x2b+A5q3Yv/FSxfVky1wItyNo+D4foTzHAPkSHAyYT1hPha6xiYjZ4CusR67xhGPeXRNJO5Rn+NRl6cp6rGYB12PWLkmWwPYribfI8QkKFaL0aAnugReoNFee2Sq02732+OFFDnWHZBoAm5L0XoptBqYmZTQSrM2tpiwLaeNvUZivyvdBq66xqFDI1hW4Luja+JsArIqgb3SDDHfFuCZe8ZrswYCP7GsmD5Mz45qONTx3YZtalk9N/akZL2/YzutXbNGfZirXcPF8X2vbWumWerZ5p9YcAx0GnzjFekVKY4YgHPp5M5gP1+GOT3JYQQpjPGnOgWzkJYUa74rUrgraXlkXYYvI5Dm9Cj+2ABG0aV6lJiALl1J9OgSA+YMXJ10JDTB0RM2tLaufVOOKEe0CQChyWGG2syWzMOZZzLB4BpCi4NBszGzareBWqPaVgig/nTJBaABtXXCBR7Ow/0q7fnFhw4aszKfXfzWftlMrVOmqOPV+zar/z331JQTt+Pipi3UOOedKfQzbvuS5WzBUsk97yxbSktp9YCqdOqbo/5rG1sdVlr67pST1dT0PFvuNHr0O1OALu+S4+JnvKqtXyP9gr7MqASvgU+Oc/EHog5aDQfifpstkwSvXZqRZp8Rm62Et4HSxrhy4F8bOLLjPjGdwyC6bnrZ011j53e1OX5P5vLS6Y3zbxt553c9lpVOa5p/26i7nh3y9Ix1R399/7SnJg3ecse6o7vWTnuS6zmqpHZy+aL6hJKRiyZNWLR4yL0rvtq7/y+N6+9Z2bb39b8swn1DoA/MdkDjQeumBh0Gk26NYBbJGk6iekEmFqOCA3UfF7XiEmNt1DK7II4tHu3aDg23AuGudu6JdhG6teqmS+omWn2JVneWI7B9RY0kIWg36CVREI06soaKkkD0bJMuaPM5+CIKNxlJZDM/RVHb9YRtVNLezK9h54sXL3Lnzp37Bx37Oe44Es5Z0nLu3LdkjUHSczqBsJyLTnXLWdu+JJGG90Dh17Q343nfFXXv5+ref5xTyUWmtZIhZ7a6JYG0B6eCqXXEeiO8bPeKCDg5HHaTbLIqnM0hy6Y0e5S+KcL4hp9vihWpx6HwcpPL0hBPm0h0hMMpxHgDkXablY/hZMGk54gv0h2Ii/EaBDORuERG4lYcDQUY6p6Etg7xdJtzD9GuQKQrOf9uhQyxsTdXwzm7wz7YzriqCHbFqiiKzWl3OB2uDHOGJeAOeHLlPGuekmvr6yh2FruKvCXWEmWIbZh9klxrrrW0OFtcj1sfV/yh2fTA5LxkAHz3d31sP1OdS5vISIceUhfQR/upO2nsZ2u5fTspR8mT9NU1n9AEdWsefVRdcKiZTmnsu6aRftLc3PEhl9zcrAYaF5c2qtvxPUChWi4+ISQTH9j+ntFuuxhh4mnEc3o2By7GvtXJXshaHqdbeXOeKXZ4tPZW1mHNc5kU2wB/aKoNezOrTTpgL2eZh4qTirQB9exXSNytr2j9aOn8xB+ydK8E426aR53c5Z52e02rblSlggUjfX3jNnYs3LiRXhs8ae6s1fiudsX4YU6X+hYo1M+aO3Z9vPDZX+P7Wo6U3Pgbr4pDSQxJBY0RS5LjDFFS8psu6ZA17s0oq+tImpzgJXwsb0/wpoHt/7j1VLhveunUx50zEey4AZemLsL6wa5NWgEPELSEjgVxqEPs3DWHs1dGxqk+aX1233nksnr8m19/+uWvq++zjR5ede/oEVX3cE/M+s3AyoZHitKD89U31X+qu9WhX7z8NtVN/MfiO9WrZxqbqQno41SXiJ+JR4mbFAYTrCaXInCCR2dqtb+l+x056mHrc2STQa/DpU4Wm8MDXTyPpuva21CU0XSjwx8HrS8O3M6CXB5aOI0Qzq2bNNUx/q6Oc9ymjji+KTveOHzSnmsX+fz2M+JRdfy1Xunt/0ztmBSZ9EXHsWHcVf5dJi1Z6hJpDWDkAFrGK7KeF35nkd6yGznAx6mrMMwUaQVvnmWayVtJhQ08CrZaF0QjR72kqWDt5Sa6eSEWd87HzZImHTrUMfSVjgN7O4YePiweLfthelmZtFWD4RlhTFYd4GUFrDp+q/iCzWzg6VYTkYdb7MMVo5RnUfRsJpiicAO0dddXQwvPQ+PlKvSQwMQRl8+V5Qq6hJv3aQgjNPTJJ8WxGzd2rF6tPo9zukKzgAGyeRbqOmGRZAeJSgu6E94mscfNbzt1x9KS4wRjpbcqrlJIUz5GFiAzTrXBf7aY48gvsNs7DQq+sojnJR3H6brZHLaHW3m1g+eVP3wyc0lJ/x79jSLHR81yCpwpJbn3b5fNaC4dmDNUbuda7htF2+mRmWOLRmRnOON70I41i/urf1Q/qH7slzNL+48sTukTy7yJfvR7/qj4DVzFkQwyL1gQnyYEnJF2g3hCx5HACTtJO6GTI096TsjRvuWZJMqakKynkmBP1kdGSfEOfbWQXB1lzcRto4CDrejFd/7jIE4rziB59w9XcN1zqOXjnldao+6sYG7n4gi0rd0WRyziY9v/wn3SoN6bu2rC8nvfPPLA9DtKJhlnjNhU9oe31e+rho/vV1g8imtZw7WqT0yfWpi/rH7lXdFTJg/ov93jfUxdf8+oAf0HjQzV9y2srxV65WlBFzj3JxTjCffyaOKA7n91hLnaEY2+QRh/uPz4lIZut730PF08kRA7uqFk0KCS0QMHjj7/9dfn4QBsaPGDz2978IHtv3qg/L3XXz979vXX3wMJmQq9T4ZDACQ1xS65uF8T+a7Y5R7iELx2KxFnG+yzrdTOu+1OQyIfZ010RpkTuk1+Yn5q+CXP6ZzvwGPNAUWaqNmE/G4r8bXp7JoT5ic2Jyd8TkvXdgSe3nLiyJHjWzd1xN9Hx/zjKj1K6+H3u6v7V6jvHPXTbGqkyTRPfUf9QL2uvus/Ck77VDrgY1pEV6sr1NaP1cNAv7IbF3ULccVBHujrY8EhKT2SYvrnK26LvgcvJZGtloKtSWzdTf8tkT2eTefXWrZn55o2+yPrkgb0Tuobo7dKxcluT4/crPxkUuyx9FWyAjkDQtVsZeMYbH/iwsLwVpfMFLfh4v7Qopzwy9jQDLZgn4zizOIexVnF2cU9xw48M1CfnpnVIyurJaElsSWpJbmloKV3S2FLn9CaBsth62EltKbBcsZ6RvF0W9PAs8U5xNG5skEzO+FFPHFdcopT4vguORX/ztY9tI7+bS3V0UhDR+Kd6+ofcO5Iv/HXX7xXOvncnaf/cIPyB9Yvn12Pq3vWtrbcu2DumMnl00MLIujY0lL19+o5/enXmxtf2zl6TGnp7l+9+nLx4l9MrPgiPn50x/gPFy5aNKMO6J97Y5MYENYC/a3gFd0Z7B+V4k5OjIcuk44SSYhwRysmISk+0rTWLayN3+yuS4lK8SUpDkt0pE9PSaLDEuEjyZZiR19S7MtJwQmm4Y5A4S0dgfZwRwCp7Sm0h+aSB1NnpHLhfoDkcoSWHLDxNm37QegD9KB52vKcAg/9nK62TRm9cJrDOnX0gqnUOHCQelT9W+2BsbvKtg0YyGapLn5z+I5yuoWumjLp8FfqJ5Mnv9G2nuqHH25iE1R75uwqf37U0UY2aTWn545ysOBTb1wU0kN72xUEY+JCu9uxze3qDMvZ5nYSR+Ki5SivPYCt+nx4EwtoS+qFP5xWWrOps0vD4phMQl6vhAJoTVJ4OCaXn1JXqm1WiDvbqd9S8V/r1q1etnTBEuNSsWfpwoWlY+oWXdsR3tpOvZD+26cefuSeuwnbex9AC+JoI0lBB9t7f7mMO+8rggXCJG3n/ZBnkcU23u+OEh/nyMt1cS1hDDh1beO6rjJX8SNxNd2H1Cd+xK8hIu4WLAlriMSDICjntXGLNlS5rG8ADvYX1y/yazo20nvZXI8bH4iDpc3gqacFI4y4k76JvMP9XjAZDdqu+nqqN4Wdh9b2NtzqORcXdOuSEx1C45nZHXsr1ZMPxNJRbdLmVT8c4KfkLlrcMY+glzJWzIS6J5INwdHgr7sdJXHxcfaS+Pg4a0kiSZTNnMlSQkhiWpwj0mYhVp0pMjbe1mSNbYxwmxolfrl7R4I1KTEAiaCPr3eQKL1RijJGJIX7bxpaOfjKhG2LGX5rwoT1polzYuc7b23AMz807qa1ZfwQgBR6VaBxnU2h4Xp6vjwx6KnJzb2KRg2FOktq2+2ur04MeWpSc37fkqHuSd9Cp7r2jWNez+UppfWvqZ80d7gOvu3x/n1y6aLXuAvNWj/rKvSGFBJNCtmslLxeBdleT6QjM7YglWTE4WSGmGx5jSN1TXYBm9RQsCauT14vr0eIIRnWPl0DL2CH2lqV88wCHAk1zpuOfz/dwfEfzIUAH+nHcyFmsKAnbYafmCbB1Z6ZML6PJHDiwGEjz5SHpknQr06Xj4NLbfIEXsJTRonU0D4PHPQMS4IpnI9woiRSnySJJJYHTzWWcmxQnBOI0MB3br0ZXlt+6VR44Lpr/oI2byExzsDlUkq479V7O3ZxlVe4yv385us7xQvX2DclNpPVQrGQCaWa2RsQA2cSdMRikEVOx5M50OedI7Pt24vOs7cems5jVEeS8g7omTq0k1D89ddquuGbb9R0IfNR9ZB6+DG6agdd1XkJZR2FsmZ2lSWLRh7KkvVUJPo5Rh2dw7PpUkXt54s6v7URKsvB+sAOPlE7HaUX1PSvv6an2Pmbb4RMtWWH2vIYHUAHPtp1yXy47WCJp+A+42ynXNAwUaBi4lyGugT2VQ+2AYQ3QenUfFfxnelN23n+3LX4CdvLk+3a2VFVp23UWtdReetW5WNuOXfOkpnXbZaMxGbJdIbUdgsRtZDQnI3abnM2RDZng+22Q4hBj/sRJpM7gvmxj0UnPZoQ3eR/LN77aOQjtCn+QXdDwiOkyaDn3EaRxMXYfYGoAImw+1I9iXZiEBMVcwq+MNY2aGE9UJs9tGsh2wkLt97TdgVMtIXWMIpx3bf4/NE4nrC+Rf1evQqeklG4du2DM+o/q5558cVnKql8TvSs7Xie1q5dywb02K6B6ttg0t9Wjzf3KiynJZ98TEdM7JPbfWAv5E19hitAHKQX9LZz7bIUHR/plKXUeCJvjYx/1kfWJkVut0prczybM5Lq8lKdUfZiPj4g9+cLIw3FWTl5rIqX2s6fQreJ2TgcpgUzF9oRqfM/Oxjdkk8Py4fthx2HIw9HHY4+I5+xn3GciTwTdSaaLe7svqzkFqdI/JFTFF6A27nmRIgZM21K6fFRB5qAt8wLWoaLQJPbz97z9vCh59eo36pvM2PfcrzbchROeP/FbcfAAxpbAsT6I9Wf2bds8Z6XR48ZPQbcC57Z/NE4+5buEAi3EVeX4w78Wae1cXk29sVWl3MbvwnF098c71RXPD35XovHkfX8doHtMq0H65wT9Mo8MQsGYtMvt9tkg57wNaJBrrHY2bp9+A93Copac05pc+LBSXDF5dsLxPCFEJgxWf1W/+JudeOMSep/6XfsEucMenNdwRkaWXGfdhE1g5U8k1/Hf49ybSO9ghEyj+WahQatZLGG8JYag2zH/Y1bO7XF1SI28odl477GEqdLDF9wuTPKqRWK7Hh7xkRqgQvBPuiN9QVn1S8r1oQvGHWg1tw4rHVM0MwTgeiXhyrLKqr125i27aweN+6WyrA6UFYHLhnr4AtaeMhGaAihbuj8sMJV9mEFtje9huPMH2EGPPqQLAcbuTb8fZig3WXlDdbINQbvqugIfCke3e3jD6faT0Hv4DR7Pd6prLpvL83GEbljk/r1nzSpf79J4bPqxCHFq6EnHVNCwVzcJWaR1AB/RWrE3ZrjgzZOgrpIegmHTyRRpw8ZITaFnQ0RG3T0Gvv0D/v4D72qyqosrmo/036cLxQSr390/ZyQCdoO5yVLpaC3pnbO8Sljs3+0XUFwHlpRSNvx5CPQdlRdfeMidw57qKmABQ9nytE0ro4s195CMQJcCr+jCO+lzj4DkbqzfcpO8Zsf/gtHtkg/4YxwDOiZRRqD/c2p2Zletz9WiJLSUiyykOmykrioZIn4PFEkU4rKNntcVsFu8KUmxwkJaYbYBK9s4FP8CQa3xZ7NZveeYodNmwBq6/wCyPlToG7wUzO28DtnbZAUJKdbZ1nH3gXgpIvkAm3cHHoD2twMnUeXjG4Xt/72lS1Tb195151nnzzri4mNPfvUmez5/QoWFL678WxsTEzs2afP9Jhb3Gc+3d4ydWpLy9Rpd206s+lsj3nB4vk93t18jkU5t+nd3rX5xTVZ5zbBfTTIJ1h+rgGtMfOKBaLjmMEHj6IttI93p4nnGm4x65AabDn3RDi1CJIhMvPNdt5uC6d23GStu1tp0rUeOp7MD/aK9wm6aD0RvMpWvbDWt9Jtt/DGrZH6F5yyeaTVMVxHc4kpz6oYhrrybDolIsozIMAUjbYwGndVC20QGFqxmBP2c7ODJpLgS8hK2JCwN0Gk3Ra03zqMxpa1a3OGDtSZltY8to57h61OVJ+8u+PeJzdvppHUVfFBk3C1fMqDT5W3jwuNarExrpLT57wRJFSnzbjGuyKYZSWmSPtWxbSVX+l1Gnhxa7Tygltnk3n9SKNruFXKMyrCUE+ew6pERRC2+DJcHdztEQ1wt/rYcWMs4vP5snx7fQJbpJyQ2rn9G6tQ1+teqMonNIHm0HOsApPWr/z2W60OQsOFU9eqmpvF9Ad+WR5en99tVp0L8M5z8ntd3CsOYa9oMew1G1+x6vfq7CJRdCbS4NbzJomWGXUiz42zyaTMYXHZFd7sVs57QPFeCr2YzsFtXC5Bs1DezlH+ivPu0OT+tXP6XdccPP6miXjdp+Oldp+UB53c9sAHAbZ/LpzAeEpsih4l2zkjF+DvhdasvGbgZYl9RSb81Zmf+ooMd1zbVb8W0vZTv8Nv3+hJLGh6pqF/pKDPo4L2hBV0v5CCXj3ojQcKzqh/nQH6BHLhz2EuNpLLrGTIVv17U3W+01SJPzZV8ozJWEynqVqNhgXKW9NZMGjMnjcuGi+G9qVk34HIBQkcxUYqc3Kzc7N75vRMC8orSOyKNO+KhKH2Fb1InxypLjtheYlLz1v1hkH6foYR+p4Fcfrkgih9bmZJ14fE2Ihk19fEAFG2cIw9y7lFu/7cV8O6Xf+nXxozTDn8+3cOsU+KBQsK2CfFvvf9Z58e45XOr4yt3fHi/ewrY9xn/+HXyH7SI9eF/O4ZP5pfrdPmV/9EGuGmNKu7peFDc7J/nJvUFcLPwJCMcG43PvuZEN1NIau7hfA/m0YKhWj9iHnd+hFCaO73j0N0Pxsi3TRfnIWE54sLofniPw7R/WyIxEJIaEcAIblzR4AX/q93BNB02xrhCt8sVYOdKgoaBJEjOoGTwps2sU9W3DxpRYfzFnTwC+1vNYlMpGzpMghusi5A13xLybYLF3AGy+efQ9RNYhRfLZWDzq8P+r1uwkc6LAYdbwLv3qGYhEiTI9Zr0LljLNYYEotOQfjFOvvoY+d6KXZkBzNkXhZkUZaMOqPeaDAarSa2FM1qsVqtitVmcBndRo/Ra4xwSgynaQ5tGMzHYRPK1ZpVFoeuxaa51YnDegzjMxJSey7E6+E0E67FGOWRJyNis7iYof20Kxo7tB/U5Jg4lu8ryeBVpYS/39VtXg9OtBHw9aPApvZoE23AmTzGNXXcL8lvQMBOQeXLpTzo3ecHjTpiEiw6PWVd+lOhjFpzwtSWf3J1k0Obg1iQixXZuUKqmzWrTlrx2nPPvyzljSgtHfHIr7YSSheIqdyjOG9owD6m8+8IfzqsG6oyoioTOYRqeA6RjEXKLFybmNLdN14wsaho4sTOaUFsOhBHLgqf8zG6KNSyE4Kyiz9lNXjt0lxtMmq7VrP2U9osJVa7239iqlJoI07TTwZ2N1QF3ZaZXHyhqekFdmwanV9Qwg5R1R680MTu80ePBmpIai33DrQlB+uvGN81G96VQAMYHIqT7YjH5Dzr/KWPL2XHdU74Te6c78uN6993VXN2dS+aOSGhqDguN7igV/kUs/lpmz0rM3rgYOYvfw4t6Huc76UjfYIy+8CKXmCzY5njf/58a+c4DaOApZMCeqykHn4hCkAL4nP5AC+3qR9sW//h1a3aDmXqfVCHflCHNqwD9JWM7+pM71oIsRmpwN6FftyKZYRqkds59Nz5+o++saJncmGv5NuSaP6MtEUr+g8YGZOaqVifNpmmlvVacJMW6BU0QJ+O6niRdmqBolP/gxYw0FxPQS6la25g479BhCt06cWLgDphe6kScZWofecgw2oxiwIv6Rw2k67J0GBje41bLXajKLiJMUW22516kqLIAQk/dVAU3hQ4PE7Zs3P/cbaOlb1h1SUnht6yJnpEHGZZcOSDoTTmCE8O07KhajXbhpzuamncwT3V3KyWnmy82tHCNiRH4hPeB/6ojcwIBtgQMVCMGLfKuNuKTm/nrQqleWaimPg8gzjADgjhIglt9lphSNsyTILRJqtJidL7HFmOKfoZjr0OvWQVFMnmVtw2cVqnCobODA4DQReGG/wkqOJf9v/wSXrtl8GPQCFzzhk193Krlnacq6i5l63zwD2G0Rrkh6yBnlxEO4H7I+DakHIthPyZDMS1IbjbIabp15mmDdPgykzgcTKZ1pmGrQniqF7dSj8TN6IERwVNbKU5iDCRuM5PDbGlYqdxyaBDWzb4wQfixg4j9107YRBawSSw+NuByzJo+pJgkt3wiGJa79Q1uRsspMlsizUboUnEeIiQGOkyp+hJwGGNj+3kMA7Ga+8wtA+rwPPsVw77aLevgbDBFxpavRDo/CrInnWXP/jg8jpaor7acfjIhQvAd/oQfVGdqNY103Q6nA6laR3fre0oaObGruWMzeoq9QntCyGhvVMksDskk8wNFsRGe11OhxRhjbcTOSYifq2cslaqkyNW9rCnOx2JhtgYwvNWVzSf7o1INKT35/sm9jfk9MDXXyignkJ7eKkj0KyNbdd9hW26qPV7s18NZs3IYnZJm+fGvmuKW3z0oMliciLAgljqSfTQblvRgQ7iW944qf5O/av6D/UgLb6aVp7hGpClHs2hnl5PVUY/cPl2OjJLfTNrlL92+vTa2qkRYuHj6oJLEPskTbz6V9pDlosX9nq8cnVSf89C24iCTbM7jjnsh7+4fOiNtnmHu8YT5nUbTxDYeELnGER1tzGI9WwMgnTtr876chODqdFNBleTQvHzAWz3UUmvGCOi3Q59RJbZkeay6QNm3GY9NrTNerd91nHdCu60rly4gput++p8K318t/kTrvCG665bNlzP+praf2rP9ead/zh+/OszzfToLrbpenhvGtybr3NvGsG4zSlsi2R705i3WldG1vkfd27+n/amaWu79H+7Nw1O7fy/2JuG23TLroja7jSUfMhZxI+4q4R9i5Yjq7oclKvaFITQrL6/ErYumGSJuwS2TiwrGG1k+0dwoA5NBpFn2y7oQEVTPUf0+NnU8Csk6OXgl8t0bNkJLaBU3KUOp/s3qcPV4Zvob9Vhm+h+ul8o1O73I6D7n2ZxALsN3C7uKn7dszjoE06wr3ueYF/3hKLY9z1PkNPScpNBN6/7Fz6Vq+1tXRsWhD/x6WB6NK8gF+i2ddvrn17cxu2azlVV1azoiJzO6FDO7eIt+H3PYNCvfdNTIb+OOKGc5sTl0Q6ZmMzueXqzlVCrLVpbBXv6/JXQd53YJIL2S2w1C040CU0nYYNNOmASMKogPFvrjenDnxz72okFz1ylmys7hq86WDl+RPFEUXjL6VpZP27VlHUzrt1btvyBaWV3jGdYTeGe5rPw+52lwVSD70SM49eeE3Zr6q+TTlhPg2JZ3vn5ThIbmCdFzpOdxJ6usJVq+O3O0NwYDUXEETcp1D7cmfNzC5Zu+nCnrnbS48FXD9RUL73z1MmxW8bO0JWPmTRt5u2pvtsmlg4fOFacIZ50OGsqh09XlNppy5a73CfGjikfN3Zi2eBg8dARQcrsy4YbF/V2qEcy+QZ1QjJ5g1+FWsMgfNBRqcXQffFTMcg/QzGmdObx7c/kgV8iQp2UFtJJRjpXW2vLdkmU8iBkZEgn/Ym8G17te0uPzxTq161Ra9le/V12lHzCpoQyO6rWsn2GutnRT0J2FL+1hRiEVhVD7605vNpXWI22N7yidj3Z+DNp9D+b5s8sTcgGrUDNlEoqgj21XbOS/FtTYrW9Q+O3JnTuHaoLzI+LUXi2f2hyoraDaBqzPkWtl9i4krahc3gXUbZmR3tVlb2vOL0l/aX0/3krUTYvlKncXFfg32wpqr5BB4OK2rXr5zcWTV46bekF3BX4f/XV4//zsaob39/Qvl7cizQGizOlJj15qGcjH7Uh0tfoiXc0pesTbJ7lfF1eZnoin5KQEXDo82xWA2+O75HhlMyBjJRoe2QvkuKx68x5uOGxtg10K07f7ZrfjjN4lUuXmFoMjfmozCBkU7Zwh/CBgtxeyeBzF+TnwaU9tEOr9iHAOF2ctpYHLrTlPGLPJFV9X1Vf7nUor5nyPN2Tt7YXHaPO/+u6ppSHF9/9mId+kK9O5jme0nF5apvz8XvqHo6iOz/7kiZQ0xKdNc8V0dsoLaEmmtB/kPpw6+t/+vOSjJ5OPt+z5NOPd/+KvaMS/s43SBbsnd3579eQGDv9+1sXjJBuG6Q7fq7/ppTht6F+Lsa/WXTSt3xC0U2LTpZjLxMXnuA5tKomWfwO5Kh356oaZiLOt2YHQZdbKdt6j326SpoW7sr+5AIbhXqgeyV+p37PJG6T0MZXi9eIn3wZjPdFeIkQ7WKbTwqyQKNddsElRwtxEQa912e1+UjczeMTcG2/eXxiqok3CSbRIJl0Jn33vcO08Qmr3eA1RBgiHVbeKlhFsxR+LHv1EdYIfaQ10hpljbbG+Hif4BN9Vp/is/nsvihftC8mEnoR3flg7yJ1HFY0Dn6dzLCX/VygNibiwaWNOOUqPCxCQyP/m+ZX9htrEIZHJ9hTey6cVxU/KK8wKteR2lO4Ii+/N1ng4syGnAzBumy1PSrabMlNF9D7YDtyh/hDf4I/PPCHB/7w/4Y/jgCl3+zbpn7A2AM+SqhfCrlKZORNo1P4mhFaKdDcwZhvFRj7fQJ+u0wwdBZxa0f1FZEt9mRTl3UBWk17fca6q6y05567qbSxN/WCW0P+D5QWAWVxjHlQGseYBOVxWUKWKP98mUameHnWQ+ZpNZb4GfSP9Vu3MhnkSE/wV/qGvoM9NphiO8G+g31C+w621XDCJJg58I50y+02kfa08vOMpKesF+3K+fNFl9gni7CzwTwltk7J1s1ZwpVH4LWAUqfMWwq4chNtPJ/YcW2F+jhd3v7ooyvUJd+A99Q8iXN1/HN68we0VH0FcN8FdCgDOpjBgzLifJebx6mKtHEkU3hTHkNoU55/N2KFr/x3LXfXlpUtci6P/vX6h3aI3xX06Zu/+t67mUe6QPg79yjqqSU/PWYV1k0/MXB1i2760RDWrV+wc/5kRj8z0hXWRWi3OYJ7eEG/h324mtBIOCQSeghnHuPc/AeBvCBKOr3BaJLNFqtiszucLrfHGxEZFR0T6/PHxQcSEpOSU1LT0jMye2Rl98zJ7ZWXX9C7sE/fon79i4MDBg4aPGTosOEjRo4qGV06Zuxt48aXTSifOGnylNunTpt+x4wKMnNWZVX17Dk1c+fNX7Cwtm5RfcPixqYlS5uXLb9zxV0tK1fdvfqee3+x5r619697YP2DGx56+JFHH3v8iSc3PrXpl08/s/nZLc9tfX7br7a/sOPFnb/etXvPS3tffuU3r7627/X9vz1w8I03Dx0+cvR3b7Uee/v4iZO/f+fUu6fPvHeWvH/u/IU/fPDHD//00ceffPrZn4nA9Yea9gE9KpBIche5QXXURn20Jx1Ix9MKupTeRR/hjnOf8C/yR/xJ/mx/H/+uuPh4KT42Pj1+eHxV4u+vc+AnEchhC/gQMiinbDqAjqPTIe0KSPs290dM64C0hZiWi7di2hmQlkJvlXl0/4Ljj3BsuQFdgRuDbsy54WQsaP+u/SNC/vzEn+/9c/lnc9mTTxd9egchf/paPIzMY6PtV1lE5Ni1EOeuafe0k6PUT/HdBJs8hX+7yPPkHnIveZM8Qf5GfoF7njxDXiTbINP7yYdkNXmU/BO83PXkSXIfeQu8y2/IZrKT/BeU9i+ylewmJ8lxsofMJLPIQ6SSvEOqyAnye3KGnAKv9jT5klST98l75Cx5icwmX5OHyQVyjpwnc8hl0kbWkrmkhswjC8h8spBsIbVkEakj9aSBNJLFpIksIX8nS8ky0kyWkxXkTrKfPEdagDsrySryFfkHOUA6iBqqyQ3yPfkD+QHqfJFcIh+Af/on8hH5mHxG/kg+Ja+Q34Ti7SOvk1Y4v0peI8fgfDf5HVkTCvs1+rTsbwfZBPApcgXv3tAeUkp+FQp/hGwIXT1GHhfehVrCH3dSO/jVVBDSyVvSq2Sd+DDZp9tEeuoKyTiugbzFnyRH4ZgDmj4Twj+E+FH8OFIL5+1shBTiz4DjGhxr4dgARxkcO+BYBcdWOObCUQv95DfgyGN5hA9hL7lXT8gaKe/GN9JbZIY0nZRL38A5AvLcA+cLpFy3gczgD8Fx8sZc6So830Jm6D+C52PJFOl7iC9APHbeDmHHyRrxKvFI18hQyPOqvv3GFSmPGMV9N66IH5AS/iQlDGeoz8NQ/hmwo9B8yHoxC3DeSLKEz/BcJnpIGb+IFOP1WVLMG8lQ7osbc8R1ZCi71i8hQ+H5ULFcS8fiCQWkr7CKTOJfIT0hLEvYfuMj6eKNKwLwDK6/ENaR4WIi2cX9nerhfABpwOrNDlZvqHNnnQB/xOknDsTRc/PBcILDDofMzp243XoAXt0P4Gkh1P8V4M8WOB6F+2IxhiZDno9CD2koOARR2kGuCAQ8QqAVw1s/9MZRwHOwtJO8252fkEey+BHkOZSUSBJxSm9AOR+RocJW0pP/gvSD9P10PjJV9y7ikwv8n8pkD9MOBPo8DGlYXhJJFQnZDMdRKHs7PCedtAL6GBaRcn0h0AL4x7ZSEzaB172JzASZXA/HTJYHf5VIjO6M97RcXQ11KuFzyWY4jjKesoPVH+X4JOC2ifQzOUlPLAN40XmOCMlftwN5FD6YrIUOxgfAaQ0cm+A4BsdOoNsCOF+EM4gq+RzOjA5rQL4V3kn0TGaZ3DD5ZDLC5ENS4Z7xC3BndQArPYPJmUZnqoe++wY4yuGYop9ENoSOKay9MFlkOIbzZbLFZCZ8xvBQ+xUfvvE942mItwznD0P4r4G8e8J5F8M/bGFvhEcYbvmjMgMQi01OE8Gb07HvHRAj+BYy+DQWtooSfC07cYAddxE39Iy8JILtYkmiCRsN9oEViiPxJEASSCL05dkb6VSSRtJJBskkPUgWySY9SQ7Jhd5mHsknBWA/CsH69SVFpB/pT4rBsxhABpJBZDAZAj3+YWQ4GUFGklGkhIwmpWQMGUtuI+PIeFJGJpByMpFMIpPJFHI7mUqmkenkDjKDVKBNqAR7UA2afw7o+bmg6eeDrl8Ier4OND3T84tB0zM9vxR0/DLQ8neCnr8LdDzT8HeD9WG26Regn+8DW3E/2KYHwBI9CLr3IbAkj4BtAu0LlutJ0NtPgcb+JXkarNdm8izYkufAOj1PtoHG3k5eAH3+IlitX4O92w3W6iWyl7yMNoFZAWYR9pPfgjU5CJr+TXKIHCZHyFGwC2+BpThG3gYLdwLs3O/BumlW7QxaNGbHLoDN+QAszIcha/MJ2JrPwPZ8Tv6CdugL8lewq1+CHbsMFqsNbNYVsILfoE39L7CgV8l3YLeY1boOtppZsxsU7AzlcG89ETcp11MDNUIPWaZmQ0P14jnNdXOqFlrqqupraitnVS1cXFVfVSkMaayvFWfl98orZDA/G2FPhDkIcxHmIyxA2BthIYpcfOhXDrz4hM6kH3F7wWP5Fx/gl/DP8W/zH/PtglsoF+4XvhBLxY3iN9JI6U7pS90w3Qrdft3HOlXv19cbog2/MPzN2Nt4l/G0yWOqM50w/SDfblbMQ83vW3Itd1pOWlOtu5VF7OWXbZk9wv6Z427Hh45rTpcz3znJOd/5iMvlqnXtc9vdS91/8EzwvOFRvWXejyP0EfdH/DMyP/KFKGPU1OhA9NLoCzE9Y07EPuwr9D3hJ363f5X/bf+5uPq4lrgH4p6K2x73m7gjce/G/Snub3FX42m8JT4qPiU+L35g/Jj4qfE18U3xq+Mfin8mfmf86/Gt8WfjP43/Kv77QHZgQeBCQnrCN4lxiRMSP0l6Mbl/8oHkz1LSUxam6lIfTf0+LSNtctov0vul784wZZRlPJrxQWaPzO2ZX/YYlWXKejDrz9mO7Kzs6dl/7lnV87meH+QoOZPhV53TkLMy59vcNbm/zH0pt61XWq/SXvW9ftPrk16Xe/13XmTe5rw38z7JH5b/fAEt8BUMLGjpHd87q3dR7xG9y3vP6l3Xe0Xv+3s/2Xtb75d7H+r9Tu8/9v6i0FY4oHB74fHC631y+tzd55U+l/o6+w7su6HvZ33b+v5QJBU5ivKKNvSz9/P1y+h3T7/v+sv9h/Rf1v9YcWpxn+JRxVOLa4qbilcXP1T8TPHO4teLW4vPBgcEJwYbB9ABVQMeGpg3cMbAJwe+Pyhq0IRBL2jqCLoLb0PXYLHMJqPvB91ToO4GWHhjHsA+Nx4C2Bevi274AB5EeBlgAimA0ASMmQAxN7G9gBCOuPExwIkIJ9/YDXAKwqkIX7thBvg6wgP45CCmOoLxjyK8jE++gtBEKC0J9RyDaQhzEBZBzETQQex6NsKHEb6EcC/CgxjnPbw+i/B9hJfx+Xd4fR1hB5ZghedJxAYwGa5fB6ighrXhdSE8T8EnqRCaA1C5sQ2gDa9jIE4qiUWYcOM+gIOBPqlkOMJxCCdADqlkEsKZGKcGn89FOA/hfIQLEC5EWIdwEcJ6hA0ImxEuQ7gc4Z0IVyC8C0tpQbgS4SqEWzD0OYS7EYc9CF/GJ8fx+iTANKRAGtY3DSmQhu/g0kCTMngZYCbE2Q3QdqMCYAxexwLsAZSZBzABr5NunASYg7A35NMDpIXBInwy/MY5gOMQTkI4FajaA+jD0lZinNkI52CqOoyzCGE9wgaEzQiXIVyO8E6EKxDehbAF4UqEqxA+jDk/B5TpAdRgJe5B+BI+34vwZYx5ALE6iE+OY5yTCN/DJ2cRvo/wHOJ5HuEFhJfx+VeYw3W87gCYBS1oMsDeQHnwrqBFZAFlGgEW3VgBcCqkzYJas9BXVRfA1xDuQ/g6wgMY5yDGP4cxzyO8gPAyPv8K4vQETq0AaEMYg0+YrObA8/sAKmD/cyCUXTM5z4FW/zH4EFb1e4AK5JZLbKAZcjFtLqbNBf7OA8j6p7kg7ScBDkc4DmE5Pp+JcebgdQ0+n4twHsL5CBcgXIiwDuEihPUIGxA2I1yGcDnCOxGuQLgF4XMId2OJexC+jE9asRbHEB7H5ycRnkOsziO8gPASQtbH7gWU2QSQUaYXUIZdv4bPXweYB7z7GGAh0CEPuHYOYNGNowAHA8XzgHcstAav5yKch3A+wgUIFyLcgvA5aGV5oBtZbq8jPIA5HMQ8LyP8Cp7kY6vMR6zysVXmk3woPZ9cRPgDwAKI4wOoAL8KgGvfA2RcK0CuFQDXHgJYgNeDbxQBHHrDBXA4wnEIJwB9Ckj5jcEAJyGcgnlORTgTc6jBtHMRzkM4H+EChAsR1mJudQgXIaxH2ICwGeEyhMsR3olwBcK7sNwWhCsRrkK4BbRNAfCawRcRz50IdyNWexC+jKEHENtDGHoYYSvCYwiPY8yTCC9hzl9h/Gt43Y44qAB7Az0HA1SA/r2B5uya0bM30rM30PMowEzCRmpm4vVuhHsQHkd4EmAhtKZNAJluLAS+sOsYsB2FkA+DCYBzIejJjwEOhlIKgSMMluCTcXg9CdpvIVrSQiiLxZ+NoTUYOhfhPITzES5AuBBhHcJFCOsRNiBsRrgM4XKEdyJcgfAuLLEF4UqEqxA+jOVuwTjPIdyN+OxB+BKG7kX4Moa+BhJeCG2HwQOIP2uVhdgqC4FKLNVJhO9hqrMI30fIPIE+QL2jAJku6gPUY9cxoC37APUYTACs+gDdSgEOB73aB+nWB+jGrieA7u0D1GP5TIU20geox+LXYPy5COchnI9wAcKFCOswh0UI6xE2IGxGuAzhcoR3IlyB8C4sqwXhSoSrEG5BbJ/DOLsRhz0IX8YnjEp9kEp9gEoMz1aQyT4gsQwex5gnEX4FoX2BGq8DTECYBPXti/LTF2rHnlTi9WyEDyPcjc/3IHwJn+xFeByfnET4Hj45i/B9hNcRdgAsQotQBOXmALThdcwNHmAsQsaFIsSkCHhRAXA40LAIeVEEvGDXkxDOxJiV+LwGY85FOA/hfIQLEC5EWIepFiGsR9iAsBnhMoTLEd6JcAXCuxC2IFyJcBXCLZjnc3i9GzHZg/BlfHIcr08ivI4Ysrr3Q/+wH/qHI+D6HEBG/xGoh0dAf3MAwNegxzoCOPgk9KUV4Pg4jD8B4s8DyLTHBIg5CuBrCPchfB3gZIgzGSDzJydjnMkYZzLGmYxxpmCcKRhnCsaZgnGmYJwpGOd21FRTIWYRQBtosKkYcyrGnIoxp2LMmejDz0Qffib68DPRh5+JPvxM9OFnog8/E334mah5ZqIPPxN9+JnYlmeiDz8TffiZ6MPPRB9+JrbcSqRbJdKhCv3JavRGqtEbqUZdWo26dDZ6I7PRus1Gb2Q2eiOz0RuZg3p4DtZuDlJyDqadg2nnoB6eg3p4DurhOaiH56AenoN6eA7q4WbEZBnC5QjvRLgC4UOI4cOIycOIycOIycOIycOIyXMY80WSCeW+CDScR3bi9U683o1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3Y1U3YOl7MFS9mApe7CUPVjKHixlD5ayB0vZg6XswVL2YCl7sJQ9WMoeLGUPlrIHS9mDpbyEdHgJ6fAS0uElpMNLSIe9SKtXSYL6V4CM8q+Cti4E2AdhX4RFCGdinIdAS7xKduP1HoQHMfQ4Xp9EeBme7MM892Ge+zDtPky7D9Puw7T7MNU+THUApf0ASvsBlPYDKO0HUNoPoLQfRN11EHXXQdRdB1F3HUTddRB110HUXQdRdx1E3XUQdddB1F0HUXcdRN11EHXXQdRdB1F3HUTddRB110HUXQdRdx1E3XUQdddB1F0HUXcdRN11EHXXQdRdB1F3HUTddRB110HUXQdRdx1E3XUQdddB1F0HUXcdRN11EHXXQdRdB1F3HUTddRB11yGUz0Mon4fx+jBeH4P+/vcAC9VzAPuAlTkGXLMDLIL2dQzk53WAUxAexCeXAR5H2TuOsnccZe84yt5xlL3jKHvHUfaOo+wdR9k7jrJ3HGXvOMrecZS94yh7x1H2jqPsHUfZO4HSdRLLOollncSyTmJZJ7Gsk1jWSSzrJJZ1Ess6iWWdxLJOYlknsayTWNZJLOsklnUSy/o9lvUOwvdQ5t9DmX8PZf49lPn3UObPYuhZDD2LoWcx9CyGvo+h72Po+xj6Poa+j6HnUIOdQw12DjXYOdRg51CDnUMNdg5l/hxqsHOowc6hBjuHGuwcarDzmM95zOc85nMe8zmP+ZzHfM5jPucxn/OYz3nM5zzmcx7zuYD5XMB8LmA+FzCfC5jPBcznAuZzAfO5gPlcwHwuYD4XMJ/PsSf7OfZkP8ee7OfYk/0ce7KfY0/2c+zJfg592HMAX1dPAjyAzw9inHMYeh7hBYSX8TnrvV7EXs9FpOpFtLYXsddzEXs9F7HX8wVamS9QM3+J8b/E+F9i/C+hLux5IcIihDMR7ka4B+FBhMcRnkTIRor+jnleRu1xGbXHZdQel1F7XEbtcRm1x2XUHpdRe1xG7XEZtcdl1B6XUXtcRu1xGbXHZdQel1F7XEbtcRm1x2XUHpdRe1xG7XEZtcdl1B6XUXtcRu1xGbXHZdQel1F7XEbtcRm1x2XUHpdRe1xG7XEZtcdl1B6XUXtcRu1xGbXHZdQel1F7XEbtcRm1x1eoXb9C7foVatevULt+hdr1K9SubUifNmxBbUCfc+QfyJF/ENZ3/g458h2Gfocc+Y6w0aTvyEGEbDTpB4zzA3LtB4zzA3L5B+TyD8jl65jndeRIB1534DWOZFIZPCkdGca+JQS5BOGaCOliC86HgHDdajWGEJNTXa2uNl7snBgR+oPUVFjDvUFEIojDhFOEqAO1MzeefMNVixwn6XlRgrOwkpCXFOIfGU47sGZxA9vZ8TonOVUn3aRbTS+SblMvIAaJeZ07KSQTEmgQLxBSXlVfMb6qvqZ6YCVGuQF/+TduqPk5vQdmZ+vI3VpKJyRWDLJIeF4Q9ZJBzwtw5tm85M4/ntfr9aJBp4efTm8QBb1k1LMbCQ4jQIEX9KKIcQUWXeIN7FoUBUmEAFHiJUgJafX6rlwhXvdCWHr41xkMBlHUG/R6jCzqcHNVvUFipUpsjYpBgoxMBhGiAWKCKHGSAKXCjSizQnRQoIjJgZidf4CCqBN5zFLS6wVBgIIgb3YLmQoQjH+CKBJitEgaPXRGA8uD0UPQdf4JAsPNCEgyNI0ikMZkYDc6nQHoodMzjEVRx3IWGD560QRl6LBsg0YlxA9Q0HIMUQDS4JVWCzigxkYjFKA3IkHgCSsZCgSqC4wZUB8jQINsFI3IKFHSMXoAv4C4FiyF5WvAvy5yAC10bJMGKB9OSA8oSK891TOO6rrRw2TVERALkA6jEeghGQQRaRD6Q1pKQAIDiIUB0DXqZaMRcYYrA9IDqo3yA6wEbEQzPGU7ZoHEMcoIjO0sd2MXlREBjT6aLMABBDaZTCADJiMmAFyhZFEyAn2ZgDIWmOCR0WySIBogxuihYwgyIbEix1i+RvwTu8RPL7J6C0ZGDz1SCgoy6BFBrEFIciEJIbJNo4dRbzKB6EnGW+nBKiIbjPAzGE2MHmYTW7CpN5gMZiPDRQJu6SFnaFbQnhg9EHcJ5UenF/RYP5PRpOWo6+Qj3rIwpAfjvCwDAjLWB5qJgW0+JplkoDQwg7FAZvSwyJLMBNcIDYzTM3kAeuhsnVIBiaG+3ehhAOE36AQjQ9LARFA0mwF1fAq/m+lhtusJiAW0AlkGeuhMXSKnFQB5681GqI7RYJLh1mAxsemhUEO4MhghFxOwltFAMoTkA7Bm7UlvYrUX9SajhqKWo/7H9GDpgUxGQBNkwGwyYWSdEZgo6WQzEIsVBzQxQ3VMVrPOzCTMBFzQ6MEanF2TCo35jB5dwgj6BlgjgnABUZkIShaLxYRPQcgNYUmFJg82weLQ6CEDNkxvyKBmQiKnFQBM01vY9FhABdgnG62ybJRlII7RCpSBZgjcQvmRWHSjaEXxAX0E7IT6igYZUkMKuYvKGh/xyogNCQ6oMaAJCFhk9gdPoAQgqwz0lUBAZaCJBcgq2yw6C6OoDKqVA9mCmKB1HIxjRsZmTC53o4cRSG/Ui4AytFomgmw6r8kIKsJkQI4au9HD6jIAPXQgAhYL5KE330wPSQKmGawyQNlktkg6s0kB4lpkk9Es26CmQA9goFGjhwnpAWUwyYD2xPSGCBFls2yxmLUcO+mhyQvjJUuvZ5y3WkEGFIuZybNJD5ICYmO2ggBAWrgxWKE6FrtVb2U5mEHh8IAgpAcWu5AKksZ8SC92tXmTyOY8g9yyic9MBHWKopiNEsg9oMjo0dmSCVHcRsL0odlktbA8zMw2mDr/NHooQA8ggcUq6Swmm8UKMguIyXYQFGj4QA8mACYdkx+TpMgmkAWmbS1MUqQQPawWLUejli3wEW9ZLVh6oIcZ0AQEbFZGD5NsgFTQpiwKUAXakBlERoHoVodNrzCdYwb9zugB6UFHuDvpAVQFkkjd6AFCLRskC7Z4pIfNZrOwp2b4yTqpS7MRYvMiPQwWWbECPQwWRg+58w/JbbSZLRYggdWq01tlu9UqWy2y2Wp2mBkueouBNR6gh2zWgapzmDV6mI1WpjckE7DLYmYi2kUPJp6anmB1NxhY+zNZAE1oE3ZWHWg0BmABNG+rDRqlxSRbIL4NqmN12gw2JrgWvVHmISegGjQaL8uI1VVnxT9dV+OUQRnIRsnKkJRZk9TZ7XYre2qBH9Aj1JIhCSH2CBNh9sFqtimgEA0gAtAoOv8we5PdYrWCGFvter1idtkUiwI8tFmcUFPIBaRXNgP/9Cw6owdgbWBKWIEWDcVC/awWm2LTKIwSgfTAW40ecID4AZqAgENh9YEWAyyA1qXYZRNwwczkyw58UVwOg53RwwqmF+lhZvSIYEREJ4Tt2W6zdaMH6F+T2agDITcyvkAUh8NhNbMmAT/goVmLp2f0cESaCKgNo2K224AeRoU5ot3pAdmbHGw1gcWsOAwGG9DDBrUzAx9dVrMF6KFAraFBAD2A9mYdUAl0BbM+CmsPOpnVD3hv75I6pAeqCTOrBTQVkFtoCQ4HtAmnTWHtG3inMANmA3nTQ10UEBkHVMfmdhodTMIUg8nMQ1uD9GCVIq1AdAurFhADCKvr0oGMHhaTzgaNEMgJTVLvdDoV0B1sjwfZoteFNBs0WXDao2XC7IPN4rAzetgYPSydf9jWZKdiU0CMbYweFjcIm90GwqK4FYsV6AHSC6JtMRtYdIvOBfQA+YYWCBIB5Dez+lkBRY3Ccliuu9MDDtYSnE6j0eay21j7Bt7ZrKAz7E5oENBgmVpxQnXsXpfRyShqM8oW3hyihxytAM+sjB52/OtGDwuIotWkA+GSGV8gisvlslkMZlmBH9DDEtL0jB6uGDOjh8ludTrAdJnszGWzdv7p9ZC37FLsNjvUCdC1Wz0Oh+KwWRW74gUMgKp2aPpsLw0Di27Vu9muGsway3amdfUWOwiw4nDYNQqbw3KNaoItcAHFAofZrACa0CbcDlYfeAIskI0mh8siG6DB2hWz2WVVFEeE2+Ri9LAbZasA9ICYQI8YJlQKqxZIGaTXd9kEsEcgB3rIQ2Z8AXq43W67FRC0mYGvBl1Is4EKI8QdayZg74AeLifQVLYzt/cWepjdNofdAXVi3we0ep0OuAXEbBHA+ZvooTB6eFj7AAdCAX0L/Ad6gADbnA7HLfRANcG+0AAGCRJYLDZAE+jh0eihyDaHAjrUCa3SyOhhs1jcVpvNEekxuc1AB7vJrAjQQiA9WKVYJlS2ED3grxs9FGhuilkPjR5sl505bh6Px2E1KsAwO9BD36XpCfH4LYweskNxu3TQ3B3guuiVzj/UPWaP3WF32hUnoOtUIlxOqJ3N5rRH2hUbmHYHNH2mYo2KzQCm0AuyA+3dZDMzfQvMwfq5nE6NwigR2M7xltVCliEBXAKaoCOA3vAH6tfmsIGpcrqBHlAXB9DDo9jtziiv7GH0cDB6WJm+YPTwYyth1XLin6FLWSkGJgd6J6OHwlSU0ev1OhVA0G6xW4CjihYPVBgh3jhGD5PZafO4gR5mJ3NhbZ1/BgPkbfGyL2zYbS6PyeSyRbldUDub3eWIctjsIGXQmhUbNHYji24zgNTYoL2Dn+Ji7cFgZfWzu10ujcLWTnrgLSsEPDuQW6sd0JRlJ9Ab/mzAO6cddKjLA2rVyT7zYbV6bQ6HKzpC9jIJc8oWmwAmHdKCEokDCdbo4cK/bvQA+wz1NrgUONmcTogSERHhsgGCDqvDajPquywfIREBKwH/AayG16MH8+diHbfu9IC8rREOlxOatQvQddujPW4HkMThdkQDBuA2uaDpAz2A4HYjKNdIpg9Bd9mtbpAGxQAGEsjpcbtD9Ai3c1SbzBSAooUETDNERICOiHSz+gA9gAXg5rhB3kxQF5dDUSKAHu7YSHMEsyQu2WoXICdID15LAFsJq5Yb/4xdNtJuZHJgcNvs4MsxFWWKjIx02WS7xWl1Aj1AfPAPVBghkQkKowdYjQhGD4ubufT2zj+jEfK2RjrdLo/T7o6QZY89xutxAkkcHmcMcB6kDFozaFu7zWR3GME1iAapYbrLYXWDMABz3E6ny+n1eDQKK53tHG9ZLSxmSAANENA0m91RHlYfu8MCLACb4okAekBd3E5FibQ7nR5flDmSSZjbbHUINqYvgDjWBGwljB4e/LuJHkwODB6bwwp1gDZvioqKctsBQZcClsJksHejR1Qio4ds8TgiveBQWTyMHo7OP9Q9SpTLAz+HB9D1OGIjvE4v1NHrinU5nODyeiwWOzM5sgPsj8MY47QDilYw0h6QBpvR5mH8jvB6NQp30sOJt6wWFgsksNlcgCboiGivm+k7p8XpAS/B4gUtBVwA8ttsUQ6Xy+uPtkQp4LF7wB8SbUxfMKWaiK2EVcuLf8Yun8FhZHJg9AKSIKegouTo6GiPw+xEejhMhpCmB5VOSHSyjYBZASsaFQFuotXDxh9upUe02+v2Ao+BHl6nL9LrAhFxed0+oEqIHqBi7TK0TXCVYp0OJ9NdTsULKgKElfHbFRmmh61T72EBjB5WoAcofhegCfQA+WP0cFldXhf0HSOiHBo9XHZ7tMPt9sbFWKJZi/NYFKdoZ/QAJaIku13u7vQwddHDCerHqRhBCSouJ9IjJibG6wQE3Ta3zSkbu9ODsHVvesLWcOHKODZHn+0Cd4e16F/Ep8cIBw7nfYbn36VNV1erMcaLutUQ1xAew/1/AFBLAwQUAAAACABHQJAu9kYCYiqPAABc5QAACgAAAFZlcmFCZC50dGbd/XlgFEX6OIxXdXX3dPfcd+6ZyUEIEBISQgjncN+HXAJyJJAEAoQEEkQEBLwvPFZFRJRDV9GFiIAXIIIGWRQFFHQVPFjwWIjox2VZhaTzPvX0TA7U/ez3/b2/P953evqZnq7rqed56nmeqq6qJpQQ4gQgEseosVk5r9zz756EHA3D3Qmj+w0f5+lQcg/8Xwv/u8wsL6p89p3vNxKy7XVC2MSZN1YHe72R+XdCAgohwpjSylnl71YW+AjJECH+/bOKqiqJCQ7yTQz8t8yat6S085ez/wzhDxFye5vZxeU3DYjdewXyP0aId/DskqLif476yyMQP5WXNxtuODuqkN/RBPifOru8+qYlP6+sIeRlByDcYW7Jwvn0hHyekDdOQ/qkeRUziyb+evMNhLxWC/jElBfdVGlKVJYT8mE9pA/OLyoveW3SB28RQiG/xAuVFVXVv2y6Ccp/pQfEv7NyYUnlsqLN3xESmkKI6XlI46M2winEP93gNK4pccM/41oAyo2MXDMS03RfbHEtEQsZE7mWiY9Mi1ybSDZ5OXKtEJtSGbk2kxj1rsi1VXWTasiZiir8q1Y3RK4paaO5I9cCUbTukWtGspvuiy2uJRKj9Ytcy6SDdkPk2kQKzTRyrZCEuBWRazPJTtgWuba62mh39auoXLKwbNbs6mDbmRnBnOzs3OCMJcG+ZdVV1QtLiso7BIfMn9kx2GfevOAYHqsqOKakqmThjSXFHZviBCeULCwKji2aXxXsWzGveEzJvJKiqpJgp46dspvi8Cg8RiaP8V+VadV+r1Crdk2xZVXBomD1wqLikvKihXODFaW/zceqjS5ZWF5WVVVWMZ/Hn12ysATKm7WwaH51SXGHYOnCkhKecObsooWzSjoEqyuCRfOXBCtLFlZBgooZ1UVl88vmz4JyZgLiPGb17JJgacV8QKxo5syK8kqIziNUz4bc55XNLJkP1W+bPJDHSM6AzIqDRVVVFTPLiqC8YHHFzEXlJfOri6o5PqVl80qqgm15jpggOLaitHpx0cKS5AzEBIR3YUXxopklmE1xGVStbMai6hLEoVWCDsGy+TPnLSrmmCwuq55dsagakCkvixTE4y80qAnZLqqC+Lw6HYLlJVjrykUz5pVVze7QoowOvMysioXBqhJgBcQuA1Qj1b+maI4cZFvJCV0dIR0WtHh2RflvE3A2lC5aOB8KLMGExRXBqooOwapFM+aUzKzmdwwaz5tXsZhXaGbF/OIyXo+qbpyh4yCwaEbFjSVYB0OWEIUmQZhfUQ2MqDLucr5UNsuAERasml0E1ZpREqEbIFI2P1jUqqYV80EyFgbLKxaW/G7Fg9VLKktKi6CgjlG0WoeXFy3hJZRXFJeVlnFhK5pXDeIHF5BtUXEx1t4gHxReWbQQMFs0r2ghFlVcUlU2az4iAkq2cnYVT8SltGgmZFLFU0Qxqrq2JEPqig2iFc37/QwiaaJ4NOcG6M2ftyRY1krUoToLS7i2xbj8ooqTkvMm2kRKQO5KDOQXVywsrgomN7XGZF52NCCYzBtvcoRowJ3hkVYzowTaE893EfCBV+HGirIm1EpuqoZ2EyyqrIRGVjRjXgkPMGoPeV/DmNlF1cHZRVWQY8n81lSB4pplvDi4aH5xBOXk1rol2ajjf+ZsFegzaN3IOs6oouA8rkWgzUQjVhbNnFs0C6oG7XF+RZMO+e9Fq1VRoLgAyZJ5pQZagwcEB44aOS44dtTAcdf3GTMgOGRscPSYUROG9B/QP5jcZyz8T+4QvH7IuMGjxo8LQowxfUaOmxQcNTDYZ+Sk4LAhI/t3CA6YOHrMgLFjg6PGBIeMGD18yAC4N2Rkv+Hj+w8ZOSjYF9KNHDUuOHzIiCHjINNxozBpJKshA8byzEYMGNNvMPzt03fI8CHjJnUIDhwybiTPcyBk2ic4us+YcUP6jR/eZ0xw9Pgxo0eNHQB59IdsRw4ZOXAMlDJgxACoBGTUb9ToSWOGDBo8rgMkGgc3OwTHjenTf8CIPmOGdeAYjoIqjwlilI6AJeQRHDCBJx47uM/w4cG+Q8aNHTdmQJ8RPC6nzqCRo0ZwGo0f2b/PuCGjRgb7DoCq9Ok7fICBG1Sl3/A+Q0Z0CPbvM6LPoAFjmwvh0SLVaSYHTzBowMgBY/oM7xAcO3pAvyH8Aug4ZMyAfuMwJtAeKDEc0e03auTYAdeNhxsQL1oEMGTwACwCKtAHvv0QM6z+SKguz2fcqDHjmlC5fsjYAR2CfcYMGctRGDhmFKDL+QkpeB3HAz0580ZG8OU84vd+Kx0Qi6eOVLD/gD7DIcOxHI3fxEX5GnDTzJLKai7fkUZuKElUqIYW7YCSaygDEONB86H5GvfwEmQa2hdaIEPLNTcxbpw7RJQwVyMg4WCVDCVcfGMJaMIqrlKgjVRwpbK4rArbO5jD8oqI/asqmgeFQaqmWKAzi+ZBsqomNFs3qqhhrFxYBkkWLyyrBpUSLFoEdxeW3RwxyQsjJuvaGvBSrsV/YUlVJVisshtL5i3pCHEXcruGmJTNL61YWB6pOpJvZnW3qC6tDs7CzIuh4hULZ3WcXV1d2S0ra/HixR1nREvoCKqQ9CMVpJIsIQtJGZlFZoPTGCRtyUySAb854Ghmk1y4mgExgqQvxKkmVXAuJCWkiJSTDnB3CJkP8TvCVR8yD44gOK3RvKrwXwn8lkCaGwEWQ8zf5hMkEzBGEVyNBTgfU/YF3OZBCp7DPIzJ8wmSTpBHJ8Dst/lEc4nmkdmUx/9z9bQS7b+uKY/7n2tbhin5VTXeKYaQcvhdSObCvQpS+l/hw8/RmGc55lgFsALCo/nPxrCSSP1mYUnzIT+OJc+rFENLmkqcCSk4DrPgXgfErQKxnI/pKzG3qkgJFZBrNYSVwT9+zorUZ2aE4tE8qxELXlYFlm3UeybGK4eYRu7RHHhsA/d58DsTUs6PcL8tSSYDm/JIRg7ytMX4W4V4zYQ0RZH6BeHkdxZBKSWYiodE6VMKV/OQbzznKI7NJXB55PhXk8VIkRIssZkm/E4lwAooZRHi2YxNMdagGmVuBoRWY2i0jD8ugedehtydB6mKm2iyGOVgNsRehOk4ZcrxXssaRfNvlvSqJmwXIQ07tOAOvy5HfkZ5XQmxZmDeVZC6wx/Uo0NTPbMgp4Xwj+dstAoj77IIVVtz/z/XOko5A9vKJomuJq2lrrlGi5Ee5f9VCdHWUAp1WIjSWoVpmkssRsjL6IC/nBJzIMZMzM+I01KOeX0rkC8Gh2Zi2cWIcVkE025NLXRcJGUR5FqBOqKZDy31UjMVfqsR5kP86kiLqGoVN9pemqnWUg+0TBfEehdFuDUjQplmeTMoUobpiv4DT3nOhs7g/C/H32Yd8t/woxpqzvEtRU3A8+74G2r9p/ScLkua6sAx4LQvRTyLIxI1D+V1YdMdA1tO12hNqyP8jtLSqHkllmLQbBHkUoTporUqRmw5z+a3oMgsiMdrNDtybyFp1qVFKEWGDEfLuJZGVf9rnVrquuJWklaEfPrvMWhdzrX0+D3cDOrNxxKCiNMfaXWDOxxyvMpb5Ru9U0WiUhltN9dakRJSFsm/JeUXY62KMX3y79jG5KZ6X5uCx49a3uRrJM1oO8NJa1vDaWPYpyi+iyLtIcqFGyG07HeoVkJuQlobklsEHKmMWLIi1K4lTSla8t7A+z+3GM5LHsZ/qyI4lqA0/bGsGLX7PT3OQxdhrNZU/j3KBltQryUf/39ps1zXziNR293c6qItinsSRtubFcGw6jc5VqJkzwU4K8I1wz7OR/pe64f8/0Nr/XGtZkTaSjUx7GNpK2oNJgOwrFFkJPzjZY2Cf+PI9eBhjsGwIXAvCL7dGAiZAP/6w93+hPOnD4bw8GRsmdfDNc9xFBmPeRl5jAHI854Ed3jeQfzP/w2D+CMhL552AJmIZQyA3MZizDGY9wi4Oxx+B0Ti8RT94M54+M+vBxHunRrljYRU/Hc4puO4GJiOg/vNpbbGagiWGMVsBPwbA/kPjoT2gbyHYH4c/w5IKX49sgnPgRFM+yCNeM48z36A0XD8x++Oh9/REG8s0rMP1tnAdiTWYSCEG3UZgBgYnDAw6ge/o6FsHmMQ4DUOseAljYvE7IA15PXpj+l5qcPwroHZqAiX+XVzLh0jtDTw4PSf0FTyWKz/cDiCWP9xcGcc8qYP5B/NNyo7gzCHEU1yNB7r1wfpMApL6IthnIqcnsObYo5pwZV+SC/ON455fyypD1KkWRpa1iSaW2vu/J50REsYhPUbgJQajrHHAh0HQPwhTXcMeRyCde0Xoa2RpyH3hkwMb0HdflhHztnroNQBEZnqg7RrXQujhXD8m2thcKBPBPZrQbNm7o+McDeKzzgsedzvUIW3P45JB8xtDP6LUoHL2KgIdaPt0ygjysfxEfkc1YRZa/pG21E03n+jO4y8omW35mB/lKfhEQzHNlHjf8+3WX8NABvH9V9lxMZxPdjakrf0JJs91Ja+aAfSrHNbegaGNh6Eccuvidd819DThv1q7gO19OV+z4pFe86Gj9/sCUe9EUOHG32llp5wMfrshk9Y1eSlGHakgkQ9lcUY2mzfjd5hOcaIWnDDRhShH9Chqazf5mX4mUXoOfDSWnuOBjX/k6W6tsdYibbfKGUxXlcTw0vh9VsUicvv30xa95KNOvz3PIjW5X+j/0LkN7emMzHtjWgll6CGHBjJw+ivNdOEU6AUw8qv4Xqz9PHcupFr/VJOg1ktMC+OcLwC/YuOZDbSoxJSZsGxGI+OIA/X1qFjxCukpTSXlpK95B+E0J5kM7nCAkSAoxTu8t+tdBypg/AZEHOVeAcdB7/l4rNEgPAV4gf8STDNhQIWwFWa+CzdS3aTbyD1KrpaGixN5rEjz4sFcll6h/4kFQgFZKJYLvYUd4irxB0QY5FYKq4i2wEWCMfF9eJS8ai4lEzkmNHh/OR4kHV0KE0h64R1tD+Npf2FD8gBwvHvTdfR7tL70vvkJDlJR0PMrWSxoNFD9GeaRSfSHZDqMrlMA/AvT8ijF+l3gPFacpxNlDSyjjxIXfBvL/kA8P6G/EyqRMiVPCidFNpLJ8k75Az5FO4TMocKABNZpnQSjp/IFuhY15EzVJBOyh5TSCwVfiF19DbhOeEXmkIFOFw0ANScxj4QC8VD4j0QCtShAstlAdYX4BQeQzpJ1wEWZ+RSugTi8WMplFMnvCO8DnXcR76AekHpwhRhqbCOfEFr6G7AmJA7aI1YaJohxpN18jpxIrnIaUOOCx8APUYjPe4j98mdyGVRJj+x4bRQ3MIpRtKkA5TQkGmo7CJr6FDTbVATwvLJUuKB0MOUSAeMA2IpciJZI6azpwF3QVgepRtdQj4QCtgMsh6PR+jr5BHyOggYZtHndmElbUN0wmgacQJMpSEQSImmkivwL4X4ACZH7iVjPH7NaBDDA2QPwCQQbUYTMTSBxAKMJ0kA4/BOLMIYhH6EPoRe6iE2yNWL//g1o268diG0UxtZDuF2/MevGbVSC7kf7lnxnpXsJyK1UDOYLAlDGMCVcM9MNdIG7vEQBjAM9/gdRlVMqSA0EQtCnkLe8XhHqY+bylgvCaGIsRjWSMA7FCEJNy5njb2YrrP6qx2kep1d7cCu6OzXXwZJvy5nvwxi/77CLuvsXzq7pLN/7mE/6+x/dPaTzn5MYhd19kOdJv2gszqN1YXFC+c16UIOO6+xf1xh3z/sk77X2XdX2LdX2Dfw5xudndPZWZ39XWdndPa1zr7S2ZdX2BenY6QvitnpGHZqY5J0qph9/lma9PkV9lka+9vxNOlvV9inn3ikT33sk5MO6RMPO+lgJz42SyeC7GMz+whifHSFHYf8j6exY49apGMp7OiHHuloG/bhBy7pQw/7wMWOQPCRRPa+h713eI/0ns4O/3WqdHgPO7xS/Gu48VCa9Nep7K9h8VAae1dnB4tZ7UMOqVZn7ySwt3V2QGf73+om7b/C3toWL73Vje17M07al8Pe3OuU3oxje/fYpb1Otme3RdpjZ7st7A0o7A2dva6z17zsVRd7RWe7dLZTZzv87OVYtt3HXoJ8XrrCauCn5grbBvG3xbOt8LN1OfuLzl5sw17Q2RadPa+z53T2Z409q7NnNtukZ3S22cY2h8VNQKhNV9hGSLIxiW2Anw1X2NNQ+acT2FM6W//kHmm9zp5cN1V6cg97cqW47sE0ad1Uti4sPqGztSAda3X2eEe2BhKuSQo3sscg6WNB9qiFPQK3HhnG/gQ/f9LZw0CHh33sIQd7MI09oLPVOrtfZ/fp7F6d3aOzu+9Kk+7W2V1p7E6d3aGz23PYbWvYrTpbpbOVsWyFxm7R2XKdLdPZ0ivs5itsic4W3/ictFhnNz7HFlXHS4uusOp4VnWFLVzOFuissqKDVNGBzb/Cyq+weVfYXJ3N0VmZzmbPtEizc9gsnZXmsJJiTSrRWbHGisPizBmaNNPCZmisqNArFa1hhdQpFXrZdI1N09lUHbSdU5qisxsmx0s36Gwy/JsczybpbOIVdr3OJsD/cOMEnY3X2bgkNtbDxlwXK425wq6DgOti2ehRsdLoK2zUSKc0KpaNdLIRSWz4MI803MuGDXVKwzxs6BCbNNTJhtjY4Cts0ECPNMjLBnrYgCusfz+b1N/O+tlY3z5pUt8rrA/k2SeNhXvbpbDOeveySb3trJeN9exhlXr6WA8r617MuumswMO66izfzbrkxUld0lheZ4+UF8fy9oudNavU2cM6rxRzcyxSroflhsUcC+uU/ZzUSWfZkH/2cyzLwjq6WWaHblLmFdbBmyZ16MbaF7N2xSxDZ229LN3vlNKTWJsgS0tiqSlAgPapSSzFyZKJVUq+wkJ2FgqLQQ8LaCwpiSUmxEqJaSzB7pYSYlnC66AzHhbjrSwudpgUt5zFQqGxw1iMzvxO5oPSfFeYF+5505inmLmdzKUzJ/x36sxRzOw2h2R3M/t+0eZgtpWiFUKsV5glh5mhamYfM68UNSvTwqKqM0VnJp3JkibJOpM0JoVF8QpjxUyAVIIO2ssqUScjVkZfp8V3rKbt/7/xIf97lP/XfhLJq7IkAgdJh6Bju5A2pHh7+LqJwb9OCmV2uOZv0GEKbiejt1uXBF9vbBw9UYyXJm2XErazNGW7mJZy5o8Cz2R2GDZ6YvB12nZA/0i2Awr7w82xE+GS/4PbcH9A/0zuceprxFLpWcKIiQT2gvlsw6cN0javUkW6RxBJVu2Juk7EcaLuRF222xlypoWcoVKR1Fex+Ppv9DUm2y8/L5QzuD8aAHAX+G4SUUkgbGf3y/eR1YrITFSQieY40aMup6CgE8k6V1+XTUNOFmKQXQgcxNm5up5LZ+trpZMN7+jT6OaGI/p67ru+w15ksyFHjltS2C7RB0TIkYiCKMpMcdTXn+aoXYKMoemn4MFm//D+D5APuJH85LncB/XJkPaReBIgw8KdYiX6pwS/yW03/ynJqzLyoNMaSEpMiI+L8fvcLqfDbrNaNFUxmBQne4KOE0f8HO8e53JO9ICyIjCbspA7l4W8ITxT3HjmhfCkcJM9WEiVoi+KqFd/dQBN0LcXflGo/1L4VaH+Dzp4oP4NHVNIR+u/DARC79NX0FX6ipP6xU/1VXQFPz+lrpN0VcOL+kU+03Oj/rEkyx6SQtqRTqQq3DtBk9PiY5x+T6o5sb0YI6sdUgRpjfxYB/+amMfiH3F5OjxCBHNbmphFJJvcNtWpgnvUPt7NSJbsD+Y4TtTWn/D3qPf3OFFf63QVwBdqWFsHty/VOf510VkAh8tfYAS5CgqyaQpr0ybd6fP5nelt2uR17pKfn+uFf15+1+/zeT2yiTll2evxuZ1duuR1bsPiN9Pl5yuqLiwJ/Xj4X2fp5uK/lsA3qH9w6d+bB40f+dP114/WP6aZUscMKnfvLdJ8ud2uF3YeVr87qyTH6+2yJP2M3HbPa68fBAtCJXFAXvd++sv6edq3b/9+IGV9G8+a3oEegZn4gbfpJJfMDOfFm+PiYmPNMTHxaeQpS8enkp9o+1Sc/JTliRjX2oS49Z1jO7WPV5niVVXF3kkJqO0Ve1pnx+naOqj2xcu83pwSjnM5l3qcwzuOi9nQcEwO6Qd+TkqmybyKuTm8huk5vNopyZwcNIXmhlr897eIJ+cOGjli8ODhIwbt/uST3bs//bQh7Qv25y+vrt598uRufg4eOXLw4BEjhdlLF1YtXVq1cOmWv7355qlTb+79rP5j2frZm29+/vmbb362ZdnCquXLqxYu41K9tPGs/CzUvg3Jpl3CkyzUararimZXVKVDZscssX22HXzctjQj3U4oSctOV6gomjNVDxGTHk7M3GQLbUh8Om69ba2oprcjqTQRJN6cnZroaZdqTfSLVFL97axOSydHfV3tiRN1jncvoigY4uAsQHl599zlb4FADiAbSoq/wKCV7Qe4bPoBykn8alLyDiWdkqnh22ViZ3ZRVe2azaymm7N9BHpsYqyaqCWaE7LTSJaWZU5r01vrbQ6bhmnDzMOyhmVPppOF8abJ2mTz+LZTOk7JnpgzPaeYlAmzTIWmMq3MXNxmZU4H1aylx5rj0tuZC8x5CdmJ2Ul5gbAw1DwkfUjb6+n1whTzDemzIMk8s3cqnarSXjQ/JAsmGkq30ZQg4VLdkQLMzQEx70hTkIfMRg1O5rMAfSIvX6L59oqZNE2fOKPs+1v1X/U9D25u11b/+IaDc6dtGT1ifKfH+/R9cXG/6hxw8HsNrJn/qn5urr6vfGB/6j31pzNz8uZ0e6Y2MVE/n92xe5fk6/WPsxYPqtqckQFcAn1Ht6O+84Y1+gBZLYKuYyKwgKu5OlRydHtEvUH87frPTIT+pJXrW/Ks6RmbiYoKMTtFhw20Y22OiytcB+rbNkJeZxevrdfjYqL+6RN/emQtzVi5coX+878pyBo98K8f9O5ffKF34zPOn9V/Fn7BnBPCVvKs/IzNatKcMmE20Bw5ddFs3V1ceZ2F9JDP5fUIpmdXwodmrH3kT0/oP1+k737xBT34w7/03qdO6f3+zXPNEApEGWTWSQaG2zqsZk01iaBkNYvCpD87Lbb1LsWiMVV2QldNIHbRrFplFxiO2pzTcPpRI3FK1ObAl0sblSRTGhBFSk9Ly5ecuc40UdZfpUOH6ztf1HcMpyMRvEhHiAe21ax+Xd9CJ76+umbb6lfpRH3Lq4DRZ4RIpyQRdEhy2EFM7HmVPicpInEJmmzhJdf3qAVBv9QDfoH8oOihNFDwTnZc0BouX2y4LGiS2HCpruGSYKkTLLyW5foXQgG9DTRUbNjCXiBbZCZCp9MtA8VOHIkQDnJIcR+ns/99spjeph/V76OLeNoKulc4K3wFEuB6TfgLeVGkRASKG+yHRKEKobrhfuEr/Qse+zgoAl4SI87XyBaBF2IIS5YR+Tg3qpD9cj67v7GvUIey5X5NAMkSCGVZtcjIS0eyaS5NEWxfNvzPF9LJX8u5fpnReFbKimjXlLBb3WpnW73r7WtjiM/il30uTwyUhIJ5jqvObOpoA83F6eANhTpIKEicCFlN2bJlc+YsWzoHLNx+/XP9M30/DdN02oaGhToa8803+vf6N99/T2P01Xo5fYRW0Wr6iF7O6/cdcEcEnDXSNuxlNaJQI602kRpViZHjGImRqBloU1dr1DjnErooIXC1uY/iDP1Ex+nP0BvofDruah3V2MHBVB58NU+/DDlvJkT8CmoXQ9aEM0iiKIl+6otJlCQxTYohtofs5q2u9SJ5SYjxSsSm+Lw03sZiwU7Un6jjyq6gqUT410rpoY0Ytt06buKbJJaEoaxYEtu4v6szv+ukcBvB387Xzs8YsfmlGL/fH5NMkv3JMXkkz58X05cMlQb6B8bYp5KplFcB9BNYDyCrydmL5gZFbmOFkcLDV98RQkMGrl40+ZObb9Vvphaacct7NB48inh6pu8t/ctWjhhOB7fPrPv45o9f5nS8p/GseBFq25YMD7cn3q1udY32snWrHFwTeDlhq3t7ynp5bYbPHeshjlhfG4ePBTyBoJqU4ag/B8Q9UWdofmT1Oe4f6P8CnQ+tj1t9MZSMboFh6VJS8iIXHOkuXQyk2e7Hn9K36rurvlsw7+SsJ555/pl1mx9+4N5bpu6btvDreWA5Q/eytPQDj335XVoazeiSP2dmadkvN0ydMK1dBo0LBt/af9vzIJFTQBpyQRoE0Er9wkEasjIrCTFmTSPMbKqRKFutUosGPpsiWjygAKH51uUgq85x59MVYZQYteTcSQOdkcKFxSn8rE+mz4Xp1pMn9Ucb5ohrGx5kNfVj9H/oP1EHHQpUfBpahADlJ5Ke4WTRlPhY3FaTY43zMc9W0w6r8BJZbV2bBH1I6vdpAeJI4sJSV+u4GGkh33Ki6ecACd4yvZw0xOshrakHRPuMvdlwY4dJoGxotv6K/vmKX5fefKro/k2b7h+7d550Uv/mO4tV//HSz/rFTjk0a+DAexbdeHf7TN5iVwB+KdJFaLGpJD8ccJOtPnlrgmWN9THH1uT1CWvTLGpcLEtzx8X6A6lpvPWec1ysRfQ4Uy9+wlnawmuhzjaIEaCag6gaTTrHJ3xTAp/SkhJ64/Qto7fud/Rdd8M3NFZ/V/9F/0I/QBfRAbPeFs7cFvkIH+h1me3f2tupk37ps5/0r+g9tIwupM8HuWRCO7wINJXJgLBfihWYIMYyJqRJQE4GLjj0cU2O04b/DRqwlSe2w8QonRo2m1ic1IblsYFMmuoOeWmIhu4RSxp26/cI6Q2dpJOfXRXF3aD3lgN9XKjRUkgWGRRuG2NJ30rkrUlkeya09qS12TFe1cJS4+zt4rxt1Lj4dBZnbxNKzYZmAJqOk8gVdQ8v1Z3jfk9Ba4qlccc4NWQ0VKNxBFPBnXB7mhksHJ5XXT1v7sKF+rK776VxwGY7jbvv7rVPgmL8Esj36ZM/z5wyecaMyVNmCutvnD9/0aL5FYtWZLy44s13D+5b8WJGuzcf+vLs2S8fepOOn1RYOGnS9ELO+zlQNxvwPsbgvSl2q0bW0MfErSCLWx3rfWvTEtJMcW4/SY6zIu9r6+vPGRWpjTbnfEMO82XwYMEVivI7uQ2N4g4V/WDKljFb9zv7r5v8jf4dLaAmmkrD+r367rL9dEVJKQhFaWmIetoDv3NyqPnz/6HJ+o36Wv0BfVJAuHjbbbfefvutt90GGH8DaI8UC7FvlxC2CVvITnGLLFHocrqhawftlavYiNXjxze0TH+cn2Khvlx/Dowa5LIKbC3Phfc508JuBWwtN7g7NSZit9OtYVZoQaHfCXbKsLyRDH8B68tzjVhg0cZz5V5BT+mUeAikMhB2SNxFkdgr8i7IkYgm7gCh1awDB0QVvDSPSqfqe7DaK7oksA/0XfqrV+jROnqU4/cZTZdOsVORWlrJ88Kr8vOiIlGRKOjYYNcaHQIvHp9JAs/nis5OXTj9w7W4yBL4RZL4Ct1lkoFQJp5FEy7uPMqRwRzYQfbBFb1Tnd7pCugusPfQzgIg+4kkRAaH0xPjJEGUY+3k/iTHw/bHLJvcq5PuC8qSSuNiiSr47AEiJNFk7LOf4Po/YgCAIVxV/ABGj3tfIewGdmmp73NQ9k3QD5SAxMJB/fG+c8IFeYUTrttbuuSvUy9RMnJauH87g5P0l05jVszo1nlKx4Gj+vWl3dq1PfTWjCcnFfQalnnAGAG4S19vqpA2QpsdQeaFu1nsrHP28BG59phYNZ69bs/NVl+P9Wa/bn8tP/V172v9HhyZ23l4nBxjaRdH2rmSMuLaDnG1bZfRuedI7iiAJQMJcOg93nWhBQey4a3aiw7Q0znOSAeHw2zaoslSOdKn492CvFyjd5veJpXXGf1pv0/kDccviynJqemGp90lFWjB+8XQhFJY77LJk+bMnTyxjK5LumPS1k//9pdJdyQdX/ZAt+7T9bPPVZ+Y/Oif55YUU/bILfWT5i7XP1v7hv76ypV33n3LLXTUrq/p/KXDRui79U/ThfilDzx485LVq/XJg0b9+te/Xhk96LaGYe7DTxW/NOTm23t2n6EffuUx/WrxjFnTRm8umnXb8uV0yJvgEC9fdvdfNs345hb9f/QTnK4aIXI66F0T0agjHCaJsmRKlGVJS1Q0CeSAXwuJIqNwKolMZFqiqokiS9NEUqOIq2VBUxUTNg1VZtwNiwyRcGEx1LTyQ6TrZzIUdos76CFp3EMyN+4HGTfDETY8pJUxWpY2QSvVVpAVdIWyQq3W7tU2aG/BcRSOrzSHS0lQA5Y0pZ0atAwRB0qDlMHqRDZJnCBdL89mZWKpNEsutFSTpfRmcZG0VKlW7xHvlO5U7lGfENdIjynr1FeVN9T3yUF6UHjf9LbygfoZ+YR+InxmOql8rmah78VCFA8mDmx4brq+XMig7wsZ+vKGLfSJI9Sh/ySdvNJeSBPG8LGZveCX3AO0VKBfEySjw2ku8oZ9n/xG3Gr1jRgZOhWuJItdjYkXTcyXZAGBMPliWQh0cA4fVHNGB1mM5gVHQXZYJcmO5Kzk0ckinWpo3/bU6Y5e0CTokIoZ0B0xvCvXDdOm3XDy79WLqhf9XRi87G79tP5JwyqhL82n/lL2yOiRI67TaxuqZswsKtKXCLGpb6/+2wnp5N6j5U8A7UvBckwBzRBLuofjLA6V+JgVvMAa5qhR17O1ce5MC5HbxzmgNxl19vVax0ED5+xdWfHT4wU6NQ37z4Z7YPScebvgjUKaMufb5fp9+nC6iy5a/u2cuceqPqyr+7Dq2Nwx+V3pJlpCS+mmrvn6+0P66798/53+S/8hIJ9AU7kAaeonHcNesl9dTff7FMGnESnT0ZH4VGb0P0ATRSmXvWN0LDgE1BlpuBTI4zd6pjJQS+h5b92vv/zQ8C+6ho6jIxaXlZaW3aRvh2OOuKN+wfmvvvyephRVl+i/PP+C/u+S6iJuCQAP8QzgYSbZYY+4X94n7Cerlf0alVTgJmEWZGNtbZR32a86rKOtlVZGp0btFj/2ivaGhcKshieEZ6+eAifuC/08nC8avThexvtQhkrah51NZUgUC9CMAtD9wezNo82V5lbZN2Wur4hm3XBXhLNXUOcPC6fFxvmizI17I6GJvQlJ8bGdLLkky50pt0+CssDB57ayFjt1cEQYzXm9Y3oAyJsGSi7CabE1p7kjLV15SH/vz8juvfTWx6hzyfJ/L/v215++6DEr44IwsWLgQGR5GX2as3zQQL3xxx903e6gyfwxP9JCuoz07hV2C/uVfSJZrclACTBNTeRG16DHpR5Aj7CXjyTZJbtsN9mV0dZCoP0Gq3YN9ekqoSsfX234KydRwyGhAFrvEiCSUaLQE/vF+a+RAwIvpakPDVrKPm7Ydse4G0BViaiqRDgMVfWqQwpLoyWGRe3l2XOlQGjjar0UczRDb8ttFohpv/Q2WW2RFJn6ZKxDbV2kO4Xy27oYCxZjgSNajDUMIoXFcFOC0s2LO65/MLLHTUuh0L3QSamjKXfeGqmPvAD7zKvAHwKPhJEDKvhVoqzwupkNecJeERh3sOLhCT7JJzssPVh303A2zHQDmyhNNVWwWVyPyrNNhZYV7CbTClOl5Q7xTvlFkz9dyBG6K32FYco4YZI0UZmuFAqlUrlSKdwE6naFcq+0WvmL4p6KTKAhFRSpwYP29K2GTixWT2qoQT58JYQaetZfFIY37GrZ1iTiD5t5GxCpjxEmc3rxPlzUFeRZYTO6OhIaEKYzcV1hIR+Gc1kXk2ISulBB4T9MUDWVdtE0NU0zCYwoQAyzpCpMoJImdxK1TgQaRL2hhg2K1DaNYkZNlhLtb9ixv1GqCnbFrgYErymgBFSv1l7oLQwWRgnDTcO164VJpknabKHCVKE9JjykPKS+IGw3bdfiRCpCp99HY5nD1o6msW40j42iYTZImaBMUkfbZtNZrESZoxba7lDuVR9XYsAOuTnt+DBAChLwPKitCfQf+qP6lkv6Fv0R6WT9GRa40l7sX3+KpV3d27L9qGRZONHUhc+H6QJOShqv/AFFkqlJ6CSaOhl6BQcvjFoXtOgbi1hXEx+p7azJxBwrd6WD6FB5Ap0kjzbPorPlQvNu+qpsixXiTL2EXNMQqHzYNF6YbCoVykxmZDzFZzsc7RohQMv1MQ1nEGNoPoAxqce5SaCh5NLIGFNO2C3XuEiNZb1rbYyaac9nmd7214wxhc0k1u92xGbF9o6VQNNHVA8fg2TR8SaArHT7229vf/ntt1+ms+lafTZ0P57QZ9EnxM/0+roLej0VL9RRkfr1Yv0xfY1eTNfTOXQuXW/YHbTlGnGTTmGfpcZkriGrVbfVRBVHpmhWoAl5DCUUtTw47LSDeCmvNjfIIjTSUJMV2iusoIm0E3Qwzur8Kc/JyptvrgThP3+hoeGKuE+fXl5cPA+fw51EWthJPJkRjrP6aoijxrSerLUl2DRqdcdmavnuTLF9QtTsoQdr6GloxB0UC0mMtTgS00lW4gTLWGuppdC62LIY9KHVZJlknmSd5JkYM8dcZr3JogCHpJQmgnn4ADjS0heh5YNJ+oN6KX2CzgKyPPbpezRTf1g/u/3tfbuAqPF0LZ3HyQWEfbhef3SKvl0WgbA/NRp0jVhvgtY7gdwVzomPExJiE31+X0yi3+9Li/VpblKjyjWW1X7N545hjoRYmYhW0PJ+h2rymVmioaSglv6CSMPkVMbnUC2GAIxnCjEJvFUG4mPiY+Pi4uPjErp4u/gGeAf4Jngn+EYnlXhLfIVJ9iY3KlYIRfwmUxL1u0MMTJjw1ZKysiWb9RXCcJpO3Q8+NGp5+Lhe+mr+gmms9+RZpRP1VfrlBrDR737y6L5M14pV+kRaVcn3WHkEbGwmcC2dPB9uR9JET4xTMycFRC99R/S+E1PjFGvS1jvXtk3SzIF4E4mPtXlMscltHafrak/U8QdvBZFxNfCqvnF80+QMZofHVWbQgsSCpIJAQXBo0tDA0OBEbWrilKRpgWnByaE5CRWJFUkVgdnBiuD8ULW52lJtXRZYFlwWWmN+3PJk0rrA+uC60HPm5yzPWV9MfDHpxcCLwRdDbady9yj6XCNg+JEh6LI4sQMD9Mmi/PlHKth28f2l52ffe/ukRc/++pF+Sv/4Af3vDz5IzctuufOGux/7+igNUttSKkrP6bX5XYeP7tEvJpRzZO+//6dLHh0wfMS4kQOHJ4WyP9rx1U9pQCXobUhzsLfRK2yTDdXeFbybrpKCvV9sRTnZ2CkYtt2GdlBBO6jAYdjBHWG12aprUqHu1FfoDu7wXB0p7kDdB7x4B0pxktyw32lWoIMs7betVclql+LTCrj1czXpk5xLXOVnvxp2V7o3uA1/yujyOUORdgF2Zsk99y4BU/s29L326G+D+lr1xoYNb7AV9av0d/T3aBfa06gd9qVksjaczvhYspBIBYn/EEEmMk2ECGlcAUu8/04l7LgbHSbQvL9vbCK0cCItTEgLvrdRpJfUgQgOIShsF0TQS8xPY1iM6JcCSlAZRAbRwWywOEAaKl9PJ7IHFWfUktCQRm+j99P76G0Nn+p5YD93iCO5x0J6EqI8wi0ovSk8VE4ECypBNcCCal3MGtRH7QK1MXcRmKB1UTXGBCGRCeCi8JpZ0jRwMmRuWBWLGXqFxvQGs4lYmx6c1+Xk/L5R/d16q+N43W8Ytt3MgQUpYEUKWOGIUOAI07xAA4/kkBxamhaEoxvY4W5SbylXy4YjjMc0YZpUpL0uvKxthyNOEjSw/qoqmWWLT4hhfjFW8ioeNc4cZ0kX2rJ0sa0EPUtLlq0LOA85Yo6ULWebspUctTOQordtCBsoDpYGqEPNvJs4WZjMxovjpTHyGNMYZbI63jzVUkEqaIUwn80WZ5tKlNnqXG2+ucxSYVnMFis3qTeab7LcbbpDucfymrCbvSq+Lr2s7LMMi3IImQSgJ10AlpvQKjgFOl/fqPeHjvslvT/w7B2xJz/BiFZcfRhokg7CJaC3eTU8QEzkIpYI/OBdeehWq4mKSviPpoIboCSaTDJIKIN0IKMkDfruRNRMB0SKVyYzNUkWkM3TtU3+UIRxLfrvrfh3jbzaOcucv+vIhicqzM5klagB5lCzWBs1qPZguep0Nlp9kK1U32LbVacqyOCoqlq84BE9SrzWnkA3W0yV05T2wN88MU/ppo22lpA5coX1DeEV8RVltxYH5DOIZ3xZvSDrFfoz+nN6OVzZ6J/AfRlIHxWuNMhU1wXhinBKD9AzoDMa60AzfYWWamO4beu2ywRQPlzCFWy7smASu0k+0s2kos5y/W/Nl4uxlZPDjuRQkRxQ+2vacBoIXLYQFkYLhdCeNejfgvGIY2m0Hcuj3Vi2Nkqr0Li4sYgn7fTQP4MnOI4+13AI3eg6wVO/seE+YRHkz5+RLED/b3E4jvGWrIA0CGkK6Fy2X1L4DltE1gwWN3WcW09waGqBgLWGWGtwRLAOSMyseFmcksYylC6sQOltHsgGK6PME9h0c4XZbozAO0N5NFQlflf/Fet65QIL1YNP+o/6fP2Lf7DDxHhunSh7+IyjsEOslZ8Vaskz0ONlTuLg03qO5OBT0siwKH/qul0o17+jsQ2PyJ4zVzaeIa2fZxLKn2cy2vw8U6K5VLA1/PyFYN8nP/IrPk28D59pe4y5RFDis1DyMwpxQrlgho7g8AYWSvkDXjiFXxoeobH6d1D2z2ekQl7qUbZF+gZ1fUxYYyIlq02MSqDOjxgFgzxQcNfhy04Kjv/RS/VZPwtgpRo+Bh/qYyGT40H0RJHofEzYtouzQ8jiPe4TR7KpN5THXWP91L59EG+aeFF4RC6FeCNfo++SgyKFnik+QAaWEYNLtt/tmiILf+f+rjghjgnQWADDJTSuVn9QLtXvpjdxX3xi41nxoLgUOJ1Gngq3U2USGzCTj/xH5Q22Y87gkcD7CRtS3nOutZAUP4uxqlZzzwCzerq34Q8TwHrnOA132HiY9O3FyxcLIp7M8Kz0nsGeod7pI4IjQlODU0PzwWW5JXhLqDL9/uD9oaeCT4W2BbeF3gy+GfLmJGUH+iWFA2OTRgdmJhUG7khaGXgk6aHA5qSNgR1J2wMO7sFEn7j0pGnAJhvFwdnUUG6rZ6XC5soFN1xXci8fZx68a1XNZ9ROkz++84Gqd8dXfV9Ns6iV/jJ8aP8RD5dn3NWw6rnSqe9vPvh6wvhRHTtSZ0Lij3ztA/gT00BezODFdg3Hy5ssx+xkk3et/b34Z2KOxbK+rnCMRbXGOdBdBYcCO6n4rO9i9q5RSYVJfGCsxbMTBojlcK8bEE7ncs1I1ZIlVVVLly4dumvRUarpl48u2jVUX0dLv9uyceOWFzZseEE4OWOq/preAMdrU2dsBnSAo5xXecCrWJIfjiNH6AnRdsR6QtvkFDf5gUVxpr5W4uneeszu0kXHvwCt6fEr+HhdsxeIIzctRu/EvCGPjFrz/PNrxj0eHrftev24/iL0OrMm/kXsqZ/OyX7pqadeyumknwoEaD71wpHPp/2RKfz5EyDnMGjl30SO2ZybpGPKWtt79BnmEYlVCMf1NXfntOLSwjXPuUvn6hznmmmFfUbkJ8clN8fHWhLvOT6ZYeiORUf1y1Q7Wr1zM6fdwiVL2F5h4q91m2dOoUMog2PI1PrDnHr8NORa0kS+yiKe9AuHiPdvVD2inJA2WOinMRtc71nWJsR7BcVrJf0Fq717AuJX2+IxH6fcRT7Smdg7kSPpDSXR1kQLEsmQPEmr32Ndf/+CH5avAOf0mP4SHUaTqUJ76g8tLpx9q0PILb3lln799brsTjSP+qmLdtPffqR0+aL5xLDkbDXQ0E0KwwkOiVqUTTLdQJ6xyTs1wQ3enypZrQPsZo/jdI+6+h61tcaY8bkc/lwrx2UMJFmblIIHG78HjojqVh1gn1aaVioiVALQTaSGN53izOXPNtjqd4f3oDn6h/q6HTuOfCJ7LuT3H9lI6jeyQgoa6CXOZX2gZBOXAI/bkmHhNgl2RrxHfCdiN7gSoXGo71l3pmxyfU6OsTYWYrWFvcG+cveMqH7gqJ4zeK7/6yLv+gDj2xW2i4we4yNHfMASMp46pjuRznmsxQNW9hwIwAf6JWr5YNGOoSAQf9H3ltXOnLbrhu3P1lUsu6mqctmyfTOm0H5XrtI+U2Y+V+/Uf9bPBkPU3yVv3bNMfnbNug3PPrbmWSDMVrCULqC2n+SFY6wiodop1zHve45nbFSwkkFOq9Xu4MMPRrvuUQd4cw2XvaswdmWsIax5zs5t0o12hITkzdsnufS1Vod3cMfKlbwhX/fq/LcPCy82TKigTzwyPy4lfdsTDZ/JnoYtM6Ze5DoGGg/Hgj8fzIC+0Rdkp/iMIFFAyNHqKWhYHa0WqpXqSlVs7gZtpaW8DH2dWHh1o+zRTxOhca8+EHM0EzvpGY7l448bJBvkK31uecYhKbKVWi3E4cDMDXuJOovP4eOlOAudlc6VTqMUj9ye5kU6Rby0v33wcq/S4ZESd5354cKUu2QCxUbouQTK1cj9YQ+OO+4kz0QHHq3E0Xrg8RwfeCyMZbHggMfK3U1D2BDTZDZVnmiajkOPK9iN4o3yUtPd7A7xLuk+0wb2mLRGftL0BovzCT6pm9JfGCQNVSYIU5VZ4DiVSIuFSuFGaZlyl3C3dJ/yJ+Fx6UnF23oIEvCn6+nGhi+EkfpIfZi+TvbUv0yfBNW6mX6sZxp1iHAj6TXyjMDRbhoLBtJIhVKltFKKMACJL3t+reO1f5EQ0y7QMmmkOpwR73WpookEZVOM/VTwWAp7L2lnAjRgj8uiWOXBHqtrcCDemugA01nfg3sckem3PXqc47NOc3DyrT8yLgwtuQ225DZwRFqyPZCenT46vTJ9ZfpD6S+lm6ZSFD0vymDUCoachurkrPNiuLi7/57KA+/paykdOLK0QtDXhsfMqoS/s/v+ZVb1Dvbc7PKLZxsmCIOtCXGL527Z0PC5MHj33BeeavhMLHx2emFltNVAPa9tNTt/v9Wc+99bjfd/aTVPPhxtNYAEbzQRnZ4OWPBxw8ywW97kIpss7/Fxw7724ayvt/s144av5rt7xw7ivfyWszVaDhkKBxYvX7540bJli0BUBkBn/yv9S/0NOogt/cumTX/hJyX6X/U6OP5Ku1IPHF05Jlv1CdI0wITbve7hxGa7955tLf2S7UwEmxdG69fCS3CcO3et6UtrIkXEP3C3QFRwcZq0cBGe5ZOEwfxtbtgla8+2cBBYPvcZIpZvCuDGtbXZwC3iv8QAu2J3xn9pX5uI3ksY/JgWVjmKWwsXpiXN3C2sM9fUIWE3mOCFgMuSJtNsaOa1bHHUCje0bzLOg0Ap/3o5oi9YHVDOCVbZ57RB95Sw/eZHbe+pO02abCWKw8UH/tFs8IdSkcfyw7a7eZNw4cw6F3FFZtbRawXKz+qypmbd+xin3ICdy13t2rIsn/flPzfUi4Wvzy9hEsdhDvhRMwCHdHI6HLZaBJu5S1IgSZJNiiqJWpdAICnNGM1DH8tzxHsiZoNT3JD2XvOI3tj4MTaPaXTyiLbczp2oO9d6TO9f3Oty/d68aD4b2sxHLqepqqqpZrPFbFXtUkqcJc4aZ4uxd1A6qh21juaOlo7WjGCB0l3trnU3d7N0sw5Th2pDzUMtg3F8d7eyW92t7Tbvtuy2ptlkm8mm2FSbZjXnW3tnTM9Q+UBFiyE/sWnKnmFdo0N+fG6D6K/6ZHrpzGFFval7n/6LfqXih+Vzz1SXzRlS3vvH/ZfqZ34OPuBP2dm5ee07mtWUjX/ZuSslhTo6d+5WkJ1lVZI2/3nH1iRO13jg7bPS0+DJ3BSOs0mKnW1y0p3KJqIpZlVQoTk4XLZxHjBBtc1+TG0dX8jR+nkYjiUM2+76fYcmpjfp7eYrnJndYXeOFkaz0d5CoZAZdeYW0uPrDhfQPeBOjlPIpQv0B3tNeV3/4MTLO3ZIT+tvNxI9bWR+I3n5BD1FCe3Fsd8I2kUWC/GJeDy4ONRyynPMv9ZBd7pkgbjtVucg0HWOOKPNGKr7XE6zpotfyT1sN0iih4+p+w1CN/m2bTbS2YLN6RsEuo6bkOteKX/7fbpL2Fp5g/5Dx7sWx6e02fqEkHF142bUdpSAgy3FAj4y+f7a8UXWanzxq//z8UXX748vLgOiCg4cn+BjExOEUmGl8JCwUdgeOfbDcQyOr/H4CY5YiYDBZBo0FjdNYHFiG5JK27MMsQvpTAtYgZitDCQDKRh6sVC5Sb6L3s3uku6W15A19An2hPiYtE7ewl6lb7DU5vHKAFhsP/XRWfogfbFYWH+FyVc3AqaDwdomAkUsdPU145WdjfHKzny8sjMfr+z8h+OVX/0/NV7J6fifhiq/9WpBLU/Ik7K1QTgoOV2bp63QkJASHBoQUzquHdOAlNKPmt8neKDD5JIcMnfYXapH85nb0FShvZQht1Paq6nmNEuWLY/k0c5Cd6mb3M2Ur3S19LYNEozhyUHKYMskNkGcoNygjjNPsky3lQqF4gypUC40FSrFWqF5kVApVkmVcqWpUqnWKs3ADPl25R71TvN9lgdtjypPWh6yPSe8wJ4TX5D+rLygPmd+0QKskV9V3rC8S2vZe+Jh+aTwGftU/Fz6RvmH+q35vOUGZFs85V8aMtPQYDpl75u0PZxT9M/0JW/u1ZcAC+uZ2CAK9Vc3MqFej0q3Brw009vDA/9ozLLluGbz+GV0AFOkX2kmvKKSiZr5AOaJ3wxg/rectEcUzrDtnt8fxvwc1I3qYAE1yLLUXNZD7ceGq2PYFHUGm6dWsZvVVWwlW60+qD5OHmIPscfl9eoGdSN7Sd3O+PGWyo/9bD87qh5Vj7Fj7Cv1K/Vr9jX7Uf1R/Tf5if1bblRzQF5Fi8I0t5AgJihuLWAFARDbK6kaMF3srnTWsq39hWHiMKW/VmG9k6wUHhTvkR9UVmqPk8eEdeIT8jpljfa8vF14S3xL4TJ2VDyq7Nc+JceEr8S/yV8px7TvyNfCj+L38o/K19qv5LLczRhIjUeHGThID+nz6NJvvqdL4XeLfkf9r/odQk8hRd9Fhzd81XCAztCfBtrEQq/QBRy00z7hfvZEYoe2Z7EyG59Nf626skMsaIT2NJsmOCSibVA+Z2Snw24zqwrXXWAbHBHdZTyjwcVGf8RAMKZKK10WZZoDmeaAI8K0Z5sVGh9qLRGqhTtBpT2KSm1XC6V2IqLUYkSqMkkCsTNJio96Ja/sNaVKqXKqibe8rqyL3MVUYCuwDyAD6FA2VBwgDZBnCSXyncKd0p3y3da7bY8La6DP8oT1CdsW4UX2oviC7QX7K3Qve13crm7X3jK/YX3D9lfhfev7tsP2T4RvhIImxWejRrerN40FDZgJhqlUzxj05pNHK28Y64fG0qAIv1ztsuexC92GBXgbmkKIOBA4oJKnw3E44ItDv2lgcXeyTXzUV6TGqO+RnP9bo779JwkTTGVCqWmJcKPpdtMjJgUageKgQFEGXSTJYW7DMpQsMx8OHqpMNz+gPK28zN5UQMgVEHDlLKtTYrF60cHhRex4ww5hZL1PGNnwvlh4pWFdI7kilEJtwNHeIe6AXlgqmRbuFGv3muU0Nc7hTTRLwRAjaq35DKmlX3tr3c+kJcZaVE1K9bkFDwnGOjW7lOY40eMIOBU53AvjvhgO5NTj5Cz+dLXAmMuKww+Sl48cNq9a4F5QLh8Z8Ubmb3O3V9zx2ed/nfdAz54PzPvr558NWD1+8vyKSeNXl5/ZfmD/mkVfVa/54MBLZ65/4LmnHoiNf2D9cw9eDzUQ9UT6nZzI1+W8iuOvgugwVtEeycY1XN+dlRN/IUrr2haGcwJp8T6LXYk3e2PtohRkJL42Fmqb8rW91vlMWkJsnOK10xSXSOICXnDCzSJWN6e+xxHD7cTqtaqvMaEV65wtRSqZ36a51kYlm2oN/hwZeP/4yRUVk8ffP7Blzcuvf/C59Q/Exz7w1HMPXH/mpQMfrKn+atGa/Qe2g6R8RndIp9gYkkhSwiAU8RbiFp+PtzzvTiL2JGP50om603WO/Uh26uXzadPb8IP3VPP4tGG/jx+AoHRqzs7CuQ/aFJP9yWkTt86YuwP+2U3834QX2JhLowd0kxmTe44Y23Q5jDQ2Gk9hTXOFdJKKO9+YoLdB6CLggRFSDr2FJBKiS8NjWWLEfIQSAyFAP8ivpURuZkxyIBGMTigxGAKzkxYyER+rCST83ep7MCDRkDtIYh0Bkxt6BzJoq9jxDuoer1E5mZucOseJi5GZ0s7oDzdB7377yUW+dCA6eeG/mhibjE0wGY5IE9xPvMRH/FmhrFC3UEVoBVshrgisCL6qvurc7X7Ns9273bfd/1rM7tjdcW/Fv5XwVuLupLdCb4XiZarKfhorB1KCalALmrPsWY4sZ9Ad9GTFZMVmxQWTkgPtg8GUAWSYaTyZbCpUC8FDqLBXOCqche5CT0VMRWxFXGFSaaAsWJhSTRaxJeLNpqWB6uAd5F7THYF7g4+RdSau0babt1vesr1lf8vxlnO7e7vnrZi3Yt+Key1xe9LOwN5gf8O4MD63NtrhAIFLazHPGsJERQjoy6cZk24Dft/zN1Zv8emLR3TpMmJkXpcRQ+kTR6TXrwzGKbivJw9rv2jLlkVZw5d2GcFjjLi6QRjDZaFUr+BzWkEW2hiyQL6gVYSH4BwzlJK2ESkRyS66yAiRLpvKIaRTJESieRiCs5QwTU6TZI000vAZBxjStSkkHUPwaYpcCiH9IxisJrsRg9+G9PvDkE9bhXRqEfJAq5CCFiF/axliim8RcjoaolfwpwcQMjAS8gV5PZpG0hCDwU1Yf/YHIf3+MOTTViGdWoQ8EAnhff9YTPNJtJzGxTyk8SSOwLUM6RcJAWdR+KlVyKdGCOFvU9qB5URDHoiEGGO8nDrXRUL+Rn5uwi0dcxvTVNNP/yCk3x+GfNoqpFOLkAdahRS0CPlbJAR7mZjbxCYMfv6DkH5/GPJpq5BOLUIe4CGgQvIau7N3cH5Au7BPEb8R5LNktSacs7DrJTpBvd5E+DrXc/U9zkVcLsfFHL49Az545U9B6QS+A5j+hf6q/hUNSSf12y5ePS5m8dHrHayYDZd0yDsRV6d8G/Md+daSpE50TWIT45Mic3uMBS7XrJuP7BgQXVkhkMHFM4cMLi4Z1Pfm7KxOnTKzl/Vf/dYBaUrx4MEzZg4aXLw5Nyv7pv79lmRm5761evUBPvZWox8S75HWQr84hVwf7hjjccoOKzGbjignzM4jjhPWTZ6AeVMo6T3PWl+qx2wKei0mhynJT1jf+FTHifoTPcBNMB5cGjPpevC1UPicrGnOM8UNDfy4FC7F2aVLvhMw5vtMpBJnZ5LmzHX7fMK+kSNGjKTvD32wj33S4wVj/9RN26xf0S+DGydspoMeYZM7PDKv/NF2rEA/nZ3TUEZzsvRTSUH9HA22BVUoXKJgdQP6GZbI+bUcNNR30k8knoTDIR84WnwZlwscZXFr7HqHZatHsRGrajbF2d1eZwJfAMTHUHCGOK8N8g9rAMgbC/i83ggv+VrHvNw8Rxf+mO/UwEdH3LiALtLvE+Kurjn79ts6dU95Rdqt/z29zfLbXvxR380H8+jAH1+k9l/iOb1tjT3ZL4BZLulN5oa7xoX9pJPYrbPZmdZejKdifNL3fvH7Tuv9YXPPUPu4tPzO3UImZ09imtIxNMXT8wZi65h/Q1zbMN9sAfCtO8GfObgiPlp034VaPmh20HEQXJeCJh54jWp4/FGp8UW2WUjPi6yc5K5Em4hng5YlwjdjH4pFM58uGDZ8b5z1ow0LFo0Y9vPJ8a+UVr1a0GfkrlT3+xsrFgzr883hcbv0df37LX21z8B7pVfPpqd3yuo3yixN2rZ80YbsjAVDHn4+MfGHjPY5bQcOtSnX77x19rrc3IphD21ObLgjYXhOvxl9/aM695vD/bl0+jC7DL64n7hec/1DjrFMJTER5w8aAaDYBZcRtRB/QJ2mA19uHTLktpzOeeCD3jZ0yK1QL+HK0FtzcvO65HReNWTobbm5XXgQl5FVjd3FYmjTVtIm7BIVsloWbEQym+g0Zpom2XCzFketQdCcS7VHeHs2tkfBBYrCFEHZ9+a+I19SUTr5a6ls+vVXNjL21I593/NxWdAks8EfzSZzwp07tk22miRbSCZie/+GmPgNnvYb2DOetVnJ/lAMa5tmtSXJWlFax7ZF8vQkq7OjlTg64cRiYOMX+IyPL9nHATL9okM/yYdC+ZMfK5AnJitnVE5lzoYcmU5146rJRIo7LRjzEg3+XjNImR8d5t0KUZ1UppbHH+o0dUD13G++63Pv0K5VXQZPzJ8xcOK4+x6mhTeU8MdUk788/fXng7SRQ9MKOqeFX1j05t7YmEvxCYMLsvrnp3e6a3L10znjJ80vv7oLmh0FMZe/kT4A5IKkMxlOZoS7ZrZrnx53MTvmYugC+TbvB8u3Oe0v9Elv14GlZmfGxItJse1TXaGkTrGzcpNKU2e6JnYvkSfmzhw0AnhQx59B8HVlhiBHp7LW5VzUL9bz1bYuY/moyZBVY/FlZG1ZG5bibdKVhsj7/SnpqIWg/5DTvLCl5YozkSw5dj3/TDi+ZOmHeDXx6I6UlJGjRrTfXlNWmDEoseKbuW26JVpO0k5rqam8fN688nL917Vr9V+Na2qSciHV0ZuXHL1+woTxcLXk5qPXT5ygf3Y0r3PnnHsXL5lQ6fSN7vbFyZF99PWsP82fDxlcWbdWv1pePh+uqbR2HZXhGkx8Ez1jwacaQgaH29qcGvGLVu1HJxV/9F+I+zbnhzbfOi/0MpV6Oky0kpldS4ITPbP7DzWol1PHV09n1XF6gVLQa69VCEgxb4vVeel/QM30PyCY1L6gomDBilsWhqs69rmt18e6/vGAlRd/h4hL/oBaYumnaSkrF1bdkppy0uc///Y7//C+9nv0W/eHZBJoOntEHoPrFzzkxnAvAaoAPRfoflCBKqpCVFVJoyZVthGTQxNdtotWgaz2Kia+LFWV3HOcUhlTy8zWOc4yuxcodw6b/7noZhl8syJu6owOSaTXfxg6HZFTOgy9Dn8+XwfPUhjXEl7UFXniqsWLz754z/B7ti6o2bpVOnn2bMM++koj6Ah9mND3QX0E3fkg13jl4kW2Gecp5b8m/B/NU9rlpV6BP2EK0RThLhqvP1jLJySBrTkodWfd5U74XHwKnzP8PyL5SZFcInXxhbP1J5o2fiItBmBx7M5tTB/GB0QKn0YcnRJlGfc704rd0PVNg/PghQv0vgsX5E6XL/P9IT5rvCydkqAfS3qGQ1aPxgRiEcnzLvlVm/a8Q/G4bFaLIjJBUSU78eBKXqQ2XzDLH6x3dOxHUXWH3H5Trjdk4ltEpeen5IXyQ58xf/1jD1/Qp9UIo+vP16/5Ux3dsr1hCztFOy3fdeH0D/rRFTt+OM0tLnyUWGOOG9kUzqeJopskiqLbBRfORLfoTiOyqOzXHDVU3q/tE1db9lOXzeUUQTLcZpPPLkiq1Z11orYW9z8wRkRr+VQG3LTH1TywJrXqgTaPBP3mmUssg16ol8aKbej19E5yJ91JdtJXnK+4LLx354xMKYkc0KFbCvKyRF8uPdxQJZQ2rOMLd3TXI/pq8WTD08IMEKWmpXB0mr4ZaprZ+Kq8Rg4QFercnnwf7pUYiLO27+DWVCKyYJw1w8PatUmKYzVtrDVx69us7dC+QzuP3xFMSsEocobfkSgH5MyUfEemv30HfBC839jFyt+yX248Gnbsd+w3+uwYiuMT4UqS6SexmiOznTc9sU0oK7PAm5/YJVSQ0TtzUOIk74SEcaFJbSdlzPGWxM5KKAnNSZvTNjYmxp+anpiR0SWxa8Ywz8DEAcEhGZM907xjEyYkTgiOC01IvqHtHLXEPcczz1uUUBqcGZrb9ib1CXWt9qKaxCe1cUvnilg6XFMHXifYPGNFZb7fBDbRmBZjShemdL5t7Mtv2x0jcm8ds/1tm00/P3QoX62x7pfSQwsOjxjOl7w80Vj63gJa1as7FS/0X9TpkW4Fen1deEFH/Xzxlcf58o1hIw5VHZrZuI6vgBk16v0FQPt3yG7pH3wDIbCAWaRvOMViZ/EqSY0Rvfb0kPefmfGX7P8M/ZxtgVsueW4719ykbHQ2ImthOLF74DAPEhN3CGnq3UstlLa/5YrqLpGhALjD9ra/ccjkBbOGD16s/0/76mGTF5SOGHTzC/03FN337kv3T35i5qCnp99/8KX7b1gjdOrXv2TUiJKSuH79iuG3rOjWW/65c+/5BQ/efsvPu968MB9X3zft7mMnHcMx0r9M7HnyL5VanrdZhXkicVmUeZrsaGq13Nic4HOr+FZLzXv9UN54m/f7abiMa/RF/ek6/Wk6o47OuHr+YrQ0cQuOOKWHPfhkSdJM5HntMpVkkSiCGRVFDvpD9Uf4FI80byiPSpKxiQBf+F+/gq3ivxcvXhTePX78n3T0BTqS/DZ3TQVTJkkKeV4ClGSqQC0d2KMxcsdlbPm8DrgrQFrzvgKrLl5kuy7pOy7o2/95nHuTsXzmDmiZGLIr3NeR6HQ5+SC+i/847BarxZZotVrS7FazSP7tlz3qv11mh3W1oFokO/O6iHO+m5T7aJx1viaVm1gsUpPTMKcu4tobD0hP9KjvwYNaqp3W6+uIna856yDZNIfHFu9ItbV3dLF1cwy0DXFoDrvDHoQj2x62r4TjIft2OPhaMxrpp+al886q8eAQFK43JI3UC/Tb9G703U76XJqqv0wfhLAgfUjfTtP0OZ3oIbpRL6Qb3+47Yb8Qr+fSDxq+2T+hL1CkRh8nbQYfPki6hUMuu0VlEnXHBph8KsG3VgOV92UoVrW6zAH+HBhXckOfBnUK3zeuDj093CyxaUVJS1cl3YDOGlpWXDqrmM4OpbtC7rypmZMWpGTdNWno7CR9nGxpWFS9YEG1cF+De1BXzXLF7xs2dtSorGzdBbLQvfE7MSDx8dYM0jUcR9JDaryc7pXtoXi799d2ltQYRpJcqTHtwAyfPlIQ6Vudg2vHh44Po15UdN+GaEt0GTNPwDOC9mjiQZElYYLu9XVPT3l7bHZ494qP/qXvaXz1/I87S+5zD+lfuGrIwKJbhK0Ldhdcf/PufjkDFuj79O/1Lfqgf7z2PtXG/3PhMv3Hj6pvonYuaRn6YukR6QC0x1HhGE20CNJVk3CVXDFZNIkxUN5UIcbyA+PxnaO23ugkglKOUyUfixF9ErjGUoZmilUz1LZahrmrKhnTvIzFknkq7Ssl1P9JmNfwJ/bnK2uE3Q3TpQP6vxuWNozUL29looBrhdYAJjsAE5wLLgsNYj25orBKKlVy96LuhDEXHNyL6FS7NVKCvqXhUX2LdOCXV+WMXz+FXBq/gJYzVOxPnCQrHGezMlWixMSsfGuEyFNll5PYXHx2eORx5IkjOcYUB1MKC7nxBJeVb7EjDU3fvk4/s/bi4wBi87tpJxP3fib2/7p+PSvmZ6/+9NB6wDxXv0/cDv2zDqTvjnYk5XVKdpDGxN2UEislYZ+70aRnOvxau7ZtWFDUFvgXBheImY7TfM2gsZ+jUTP4gn6Wctxd8l2u3OZ9C4HrTDYJgqmFhvZ6TB6QBDpnpodR59m6slvH9An3sbtK/FDD9Da93rl97qpxA3v0ERy/CE+W5AlmemTOuPCoEUPb+BpKegT01/QzJc89N/v6PiMH97NYBBrD3xL+NF3E/iH9xGfBgxRvCDtS04NWTUxMiXc5NHu8KLxOlR1EjO9joybioDLRcIW4RLwkhTIShH9eKob96euBCjHUbhXjExOYyVllTzFVccnns3GMYYRIrS+dqz/n+OHiucsfRgcemr7Z4cTeYm+pu9zd1F3pbe1t6+7vHtM9tndc7/jeCd0TbfzBVajVvPOU6LzzLt2jM+7ycOLRdpZZ/zH9+I7ZfbtNWkgt/8q/f9rDz37093smjb/+uVFTXhj29d+Enn8Vajv3yu228HrfOD28YvjgO6tX3+7p2j0lZVdCwktAkUV8KxpcF8tXgxb00YiNtwyovA+qLVMRCCKEbWR9gsWtWmMXMfciNQHFNlpV6IDzMbcW+1GyljXgk8r6nvz35U8++fe/32X59Yfp+nE33DBu7A03SD99uW/f6dP79n1ZP+Kv7Pgt1dXLllVX38LbTD5I+0XpGxIgA3c6RKK9CY06jlrBTyNUDfucgivo8VsJ9EvYTabFiY6brIv9Qd6Tg+9+wwWLLjuPrHvnLYvvIGg4Bi4/b2jQNYsuSxXfpykNG265/f0dL79/+y0NG2jKLTfTm2hXWkBvupkS8CxTJlDTn9//xz/ef1b/93hwIckS6nsWgpfod+mHntXPAy0nNp5ViLiUyNBKe5Ej4b5de3VxBJKI6aMu5G+B9CNtTqRYN3Q5mtnOdaTX+93ZhsCnMfHe97Lbre0NvS2ZZMYEuzi0NsSalO+wBjWrK7d7bz4v7QQYM5wm7iwoaNoVCpR/7bn6HuBY1n6r97gU2RrTmLkWHtnL1cvdOzzCNcI9KjzNNc09PTzfNd9dEV4RXu1a7X7K9ZT7ofA21zb3m6433b6cntm9+vYM9xrTc3SvGT0Le93Wc2WvP/V8qNezPTf22tFzey9cCBGZdd4sl8Y8UD9fAEGcLSeqQ5/3N+sk5AcXF85a6Wg4YyyUaJi2+KuiNZ8NGnHkZqrSnvW7bU+u5jPZG2/Zqf97cMlX97399+YlFMKLfNb6jsgCCmFoQuKIUSNG6W/rl5tmuM8tnlt8cEtkTQXfJ2Vk42YpQzwQ8exfD/cKJMYZbr0no701GId+vXVTG7Yp7r02a9u37+BPCqY4wLk3HPvEFEeGXw44+qYMl/v6u0c8e+e1rr0xHSvq2zsjA4wYnh0OdyN5Wnfw5vNCXcGbH0IGasO8gxL7hwZn3OCdkDguNL5tGZnrLU0sCZW09eUldssYkDg0Y3zitLZlWklieVuVU73l+tnIGM0feepsYuKwrMXLTabBgVHZi5aZTA3d+/Wng2jynJ3DHilfPRBnms57dcSjlax/QvxfNmX0ib8vKekvm9r3S2w4N/KvS/k00w4dni55bPR7t/Cpp5mZT07juzk1ngX7fxJ3cxoRbhfZzYngVk7k/qT7gpZN7rXB1cnGhk4+3MzJrgq+ZLADJ04Ys+ycruZZij84LvEBY9zSKbp9U2RlCDcDqdFtnvi+ivQ7WtanPNy1c+GE694sWfz+lEuNxpZOxvZc7FSn624p7pY7JWvg6P599XfbtT20b+aTE7v1HJ75Di3+7S7Rwv3yfabVBHrSIu4SfbpHZJfoS6C/Qk7oPzv5VD4ayKVCLp+qLPSkm/VpDe+IC2gx3yOKP30OSKfYatw3QhOfBwXJXJTIjhPGqGst7hsBnjy4wBeu/oOtbvgTXcXTDW/8VJos7wB/en64nUkxcYdd5gMufLsj3O1II7gZkqLKspRmWHUz2U2dUA1H2Cby/Uu5nScKVaJbIHGXpWm+p9JqmAV/FT7akutNoSnUlJ7mFm/7tLBhx2L9g4fT6Oyv5B2P/bqbjcxftaLhDo6hrE+Q8nHX58XhITYrTleLeBbgqYWCuG91TFyCyWLyxwi+2ASLxZQWa3FrpiSFbKWPiq6t7kd9cdoGxbfBLm4IPWP/MkFJ5YPCuBea8aTAeFiATlbELY/sY+nPAVSNoTYTjl/ILcbc8918LAO7blJ+x3HtJhfHh2iivuuOjG/e6nNH/47jMybNTFz0Mw3ltju7r+/tUp2emFC1esvFhukfHvF48Y8w4mL9h+97sG9zBvo2KSDP3fkanY6BgnZ8FoE9qZMYnUmQ/HxBu+c7uXskkUx7j+jOabU4q+Di6YvGzILo+b/MMHD/H80/KNtZNP8RTVJsfP7BLCNMlVvNTTDCxJSWcxNGDuguCnxugr4Tb4N09xw+LhJD6jXMGN1BbxgElgR3EL6Jvxo2sysGfyVJzvoQncaLF3lP2tiQSjis7xZW6yk0U8i9Ui5OqH9RPHClN+8fPk3uEeeI6ZCXleTtVAWzuIe6wb8l1BW22wSLpBLNtMTCyBL+gIBbr5wmx8jYAIR6jY6o8SPcp5+CbpKbHdFPQ+fJLab//MUXP9MFu2lV5IKXegBKXd1UqkXSWMtSJYVaTHQJNJAlmglK7VEPysd1Tam8e5opYCc1TdhIf9DdUOwpPUQv6F4o+LSYrq/erT/IC41ecGuymRDTNNz71sR3dAw7oQe8RZP5JriqoIBCtDhO1xsDhVmR/dq59oqc0mU+Rf3KVg6FF6Pb5EbP359PwkdlFzWFlLcIkSIhxkyB8hYzBSQ+U4Dv7tGoKwekT4kC3tPocLLfnaha99v3mfnGVk7TfreJelTRYfERzeYSM+PaB/lTlFqQ7xxXdIOrnEv4dA+MGt8HJeQI9Q6NCk0P8X1QUoxtR3JZi7E36Nc1LelbX6Z/pf+dBmiwbLI4u2kkbpU1y6IP1NvQz+luc7a44+/nvjkn7mgekRPoHbSMzqa3CRE/ahr6UXyn9epwTnKA+RwWE/mb4jhiP2HZ0HGTu+0m5VO2IS3wXqx7bWeZ+JI7qcRqN3Wyqu37JnTvzOtUz7f1cEWmZWFvmQ9GGmvsor64Jyuvd94oOKbnVcCxIk8ZmExb+DtNjg0fzG+T3nLrMfR80lpuvX4RV96xPtGVebc0klv+/MngMSdvNVZ40OQ7P7xuzKG7qI/2vTIzsgrEcG8WN/ky110/blx02ceYCddfp7/bLbouhOtpQreLBDqWjLjfANvg3YUbN2e9awyBc27wZb3CDl2PxFZ+J/aR5tgK+SUSWyAfs4niHWgvzaT9biA/ob6wQ2WrLUwkTqpqVHaauKwfOXHEoZ/4MDouDlLuzmUGFEP61rMni3UZf9hEGs+nburf0ERaqG/kpeyFUiqaS1FBG0EpMlltUTWTU6ZMBKtn4e7DEcfpi61KYSnuKKTjzp0soVfwRzqpn9U30kIwCmf0zXQarznURbgPS4l/A+sB1ZCxGjJvrBEKGDgL6VFkDSQpWQWpC6KpOX4q4akBMRkR6xTdJBtw+YaOg8RRHLi++IxMABtTE9EX2fxNF36gpkD9YSfRnpeV5yzqzRJdqtws4owIPoLFc+Q7PvPtrSPNSgJDKBygufoH/NRj+JAavU9/X5yov7+qjutyPYVdlBdhOTeG+wis+XkOIwzcCdBQ4E7w5yBc0TNJEqlATaKJ8A0Y0sAJUmQRvtwGyJJJifoVp480zYRt6Vb89pyUrJroFb7VEN+TjF7SLbpFWlV/tP4QKxDTrp66+rGYCboKZ+3ijJEpTTNG1uNMG9wTATVfj4gWY+QD0GJUn914VriIffb2YTfJ47tL5UGl0shaYb3IaOSpz7lzraeWmlJo7utfs+e+TpStXNaGkp7iUfEg7sK7OhzjcVk00WtPIgmCGFLjvSwxRN3mVNZHo7GE0hgSonGkHX/mQMw0JtzGnp3gcSfGe8UYl5CtJVlcZhWKBrXkWu5ZFnNLJlmuLZOzQSJ4N5MPN/qb5nz6jZH/E5GgVt0D7rSBS2bMIMhPzzeGpbk/bzyq95uMcbv8FmuS6Y6jTxxNSEhKOv7E0ex5PbvMKzi69mhiQmLS0XVHO87p3W3eczesXDHlhpW3UAvc6TS3d+95HT9YdzQpMT4B/ufP79K7LOvoEx/C/1dXTJmyYsWUqbeAXIAlF+5DmxrYC+QSKe9gu17lW3gt4VsN1EW2n22y2FFT3WSieVsDyyzURHORCIvmInF7zDeOrYvm4jZs7wE0va0MLudWe5CGvrgmMpYsCrfxqYLLtkn4QpM2iOQZj7bTYZFjVdFKrGa6wq5a3QO8znFxfHEpWKsefGKqscXYOT7A7vihaZ2yY1xkbY+neYuMOHzYFAdH5PFgmC+lwQFe1nLBcvOS5c94p2Pou8O6Cbr+uD5Xf3z7dr5ymXssfPXy1Y2ssHn9Mq6wxrp4ybxwyK2IdvMmVdxAnnGqO62CRBSNWekKi2J1DHDZxvkilahvUYUWC6090Qo4mivgwwr44IhWwL/SL0RGqK9dcC0sFQ4B0heH9+B7TOCia76aVMq4Ztk1H/OLzOFyk97hkEP8RrAo39hk7SxZ7RLOeawep4ldr0p0gvN6uxmfRvL5XIBv07AE97tyWk7sik7uajnBKzLJi/9GJ3rpPS7qt9HlF2ktrkQ6LshCAbuH4NsJiNj8vgE+sbnphQPsHmMX5UcaZWE4vgehSV9vuUZfN70J4Rc67tuPS8D3iuhrgacWB2Lq1hZpyx9bJP7MIZIfbZmrYZCimTcZJBN/g4x5QvQdB6CN+MymYWRZuF+uOSenUydzdnZuWpg8ZUl6qt0TMU+lDpSf6mx5olu2a21O6vrhuUP6dQrFq4qdv06mn9IzpKT3VIco3vx4JV3NHO44fQ5QM7YJxzfLtBwlAt5wfvC3y+T8l6+X+aP7oFzZH7x2Rj3E3yszaPjwQbtPfvLG7r99+svByItmBkVePEPv4u+hcUbeSrM78paa33kNjdA1+u6ZLdG30fz6T9naEIxG2BJN8vu+syniIf92/q0pMv/2t2nEP0zDmufsXhMiN4cIOzCkQzS3xmIe0ngBQr5oFWIyQgh/idWGViEsEuLje4S2CpEjIb+dGyxG5gb/NsT0hyHyH84nFiPziX8bYvrDEJmHkMhqdtxhPek18tV/s5qdbyPAW+5d4kW2RC4F29ElbBYlPqnDBB3Ypm1u+KrCVhM7rl1AyF8nkg52/66fKdlx6NAOPqvjDN8/51kpnk2RC0gSORz2+J0O5rEqlLAEKTbGY9VUybOXJpAEGk8kmhC2Ww8GnNRBFP/KWGWlFmj1qPkS7sEU6fNH7HcrnAKIUwCOyNSFcSpRqSqozGLhTzUtdovD4rS4LG6Lx+K1++x+e4w91h6nJoEFonynHGMpbrw93hHvjHfFu+M98d6AL+APxARiA3FxSW29ZuyWRAYSEmkKPi6JjAv2pLnYKAUhX5SzYlPb3DdrauqQjJ6+NHtqW37dTxqXJoiBXt2Vux+NT2pvd4QL4CoGkD4oTWTd0eYOeIXr2eg7YEDLkpZ75Ik4yUXk82qik1xsv7fvD396cVC4seFe2YO7hG6XEtloeSD02cvCFtFsIjbTKoWuIrboo68TPZqLskeMHORrw/JsxBYpj0Qm1diwPBsPN0jt5Ou8+I68QH4aMAUUZao71+i05eI49PYHzTPHjp1pflCuWb++Rh44cOjQgQ898QT4e4ul7sI9OPOn3WvC/0DlbyXRxTN1Bkq/V3H+cGMxdekX5U6XufU4K55hiaZ41Oz93iT8pbVemgj8jwlr9hj5Nlc3cpslptUE5VbCE4M1ioEjItAtlimYomsXoB50+Ygu+cP5ue75G298np+Szm/wFQnG/+eB4lTWK4T3oXWC1xy2aKpVJm6VOJgKxpo/HOT+xYkjfHVQpILXzrsJRadEZjUPOguTu+UvXZFd2pnmjA1169M+s9ecrOk3WK1rHfaObePG9MDxGWjJJ3FulokMCLv4SwMOKiJ0PwRJ5g9q+MZXp08fOdI8KHMkpzUlrp0wBeYmhTdvettnvzwjZH6n/1RjbCKl3w31nKBXMAHrGQhbNbPJRqBzp4ma08MXnzlb1DSU2zTI3DSDjx5cndOme6f0EW3zp2VULe3Sb0hceie7Y73ZPGVCXvlvNBMj74r0oIlJtEkzgVf7nzWTSnP9+bmU3tWIiqmRiBfpTWfPAvKENj4L9qQO59UWhnMAfc1itpjNGhMZX8XIXw5kMWsiLrrmW3Tzd0yYbcQCPrVPJbfbwAGp71HbMdKp4I8h6po2ExZb9NFE6KOBzs33U3QHTelph6Cr9qBexWdHPfogTQHfq/CNA/pP0GH/QrDM2XcQcDsFndgA7utySzjTrKiKpqpKC8w0VUHMnuEulmrhb0mWqNVExlkckQlpUQ8kq+5apMQIUjscVr4jQdwisVq6TWR83+lCOKrFSmuldaW40qriGj7A3IR45x+is1dV/KSvXV5RB163eeK6Z+sPCasmrHuGewG4Nypapi4Ry6SQw2izcN8FXMcwwQghX5MZuI4B96/DND2b0hzFNLjGEdNMbUozDn4FKoI39520lhjv2LBQIolEAd0gCwrORcGB4lrHu9l86Z3bWH539qy0tkETLtcTDnlLCYH/MRxnYQbIY+FAEn0jgZH91tXS/jiLHGcTBaJmejomisQXb709aOyeA/0BY5k9eHKf9ABXLjyRhEaHCkMsi2YJWSxLzErISsxKygqMoqOEUWyUOCphVOKopFGB6XS6MJ1NF6cnTE+cnjQ9sIFuEDawDeKGhA2JG5I2BN6ibwlvsbdEvpDrraS3AsbOrXyOZkQN0dab2/MAYfSFC/fgFveX6WN0PB1+0+xZs2YvwS3u59bUiDv0t/R6/dXfbnQvlOOuvcZaFf727rbkX+FJbdLbpqelprVtm56ckhwIBkLBYCA5FGSBvLb2tgmJQlKe3d42rW16mzT+JEJJSWL2FLYpXt3kXRuf8kyGPb0Nc1mCoRQW0zYtOSAmyZa+LrlvDG4IdQK39nU1vdGN7xDFl8jhk7yoQxx9CmFy2Fo0HtthnKLYvGF6BtqCDJIRfclWl9IQzWqXH+iS3LvdqHYVYoVUIVeYKpQKX4XfWM22QlwhrZBXmFYoK3wr/CtiVsSuiOPLU5se7RlEdgN9jWfRnXFwMV1KT0sP+dP8ElubP6/zohW3Lly0zPrMojlN+8VkUqXjyNR9+n1pNHcvLaygN6XoB4Xv4uPvWPLolr9sypxCH71bb3w0uovMd1S12k4tXlX0XvXCVYW/P/Yi8rGXpvGa0hbjNav5eA1p3rPaAv3a+8MxthpirZHYauq1W2TiylStILMC8+H2M83bVuMs4aiutHAbb4vMno0uor62NxvuQPzgkhM+Gixm02whm2WLoynuuyFupBuFjWyjuJ1uF7az7aJnamQ/N2euMTjNopIr9MSXnTZtio0bYlPowIPWq2+4cL5B2K1PLZ9ZMr9pf53IvnLdw4m4tQ5usrNWeY9+yZ75/f116n6zhw3ur+P8v7G/jmkf36rr9zbYAUp8JlikU8IvRn/4efLcNW/ri7zNR/iljq/zJRnSLvEU6O+scIKmQKsVwKxKzKzyx3omSWRUEYiCbx08Ep1MzC+yVcHEl5XQfEqlXfpIumOLPlIfuYXuQEB3iLnwf/QWuh0BBtMdgN1SYT2zSV9Bzyp/lyAyE9lHg9iPDoDnpNKksEVaZ1bukO9k5A7+Jr1ztfhKqEu4Mgen6blznaa8/Fxnrje0+uiZb/5+pGEFKxDUzhs7NUx+CkooxxL4W/Smhl3EeIcet0V2l1mKsZHXaXCHYDPvpsmgpZPCdtf6WON1end7qfE2vRNNb9Pj/nxt9EWi0Unq/EEkTk8P8WmSTe8ZyovOGDXR9XRhw3Ra0LPzkO69Hhh3/TPDnt41qIT13/IE1fJGt83plZm1Oz5+VcXgJRM4vyYLq5kL34N3fdgcTEngfpjXrVlfp8k75EDCXkDUTVOIDMi6U9ZH34h3dxvH3cwTUDMA4doTLV+Hd6mOI60fdHwYfXZBf7M0qfUr8ZpQF0ZPKX338HWP9u+7ssf02XMXDh03Y/LI0Z2XDuzz+PXPvzxZLHTNv27VKr+vJjUt3D3c856s3MzMuPjnnK7KsgGFYApJceNZ0xaoC38bnhNax5PhOKfZ4bDbzTabk/JX4/E343l8XhIv0ddpYIcp1rUPWB8PjnAA2nQ8TdrlX282sdehtom2tY71qj3GTS1OYpE1cqcYd0fMna47vG5FTHTU5pyo5ZOnwOS927RWK+vbcxdrc8Dw4XPkyDKXZr+CP+9uGtRguYxLUYo3JQ8Yyf3HZsmSC3780fXLPfd8qy/R23/Fnvvq10sffP3tVx80rBJW6XsFU8OvT27evEV/QrY2DGmSPYb1/wZlL4Gkk63hYII5Pj4uzhwbm9BCEsFq2RPN/JWO5tdp6g5XaiKnQRsSBBgibWjSjuT1ZDf8cQEVgrFr49cLcSlJMd4EiTAup2l3pNyZeEcwiQtsUlvuR4AnUXtOPwei6m9JiYtRQui1zqaVa63EuJkcaX8oztdQZgGtbphKu/fKHdqj133jJ24aumHnkJlXX2xFpC1b1lFL3sj0nN6Z2Xvi41ZUDF42Tn+sFbFAWmZHpEUDaelCupED4WA3c0FB167m/PxuFo1oZkK0tI6d2vnjzR7BlhKyCCAzu8SUUEw8J5wns91emko8lC+hT3mloNP6/LWES04q9CZSu6YnW9Ru/DW6ybbOSSozm+6k6Xd3TrrbmZnsl2h3FCBsOkCh2nedTTPvoo5ybc7Fc5d7XLyoG62p6WVc/0mmWggUy/2v250bSCynG+JG7/rxx/q0qaWHmtrhnCpohzeMGpV386A+aydAO8zktGb9DRmk+fpelvKfGubVBbLVGOGRrqAVbxex4irtZHixfAdNeSCEDI1Y8c/JF9GV6deMMWmRMaZH9Ar+joFmPxpSGGnm6BV8/7IWfvQXET8a3+qEubWJ+hG0tGll+iL0I6Krv1eTj/8gjdIizfBWab7maYix7+sWsM/8vYPDdkMAo2nhZJUGwEb7YjdZjznW+t6TnjELCRaREauiyeHkvu7u/A2El3rU1vvx7brRjWC/4C70jlFtqLFPIBxeYPF/2hJW300H0tnr1v3BxrA09oOFCz+42v4PNocl/8fv2/0/Gf9u/Axoo0Cb60QWhrvHJHhJR9ZO/ndbJeD8t71TxxoWm1DjXc/Whuw57doms7RQRtCp5NhVS/tAhku2BDPSfA5TDLHwd7Xn1ObU4z5pxjeiYYz5RjnnLnEjxN9gxwkYUT1pMn/+n56Sn2s80IKLLsbLuYwJPSFTyFgoBxfGhB5JmX60Ur+iPzHss4kzKHx2T1w1gpZQufLo9Oten7liZ6YQP0F3Czxo2yT9ZM5Lt8x8ZRx/iZf0r3dsgYTEoP2dy1Tg73UaOWrpje84UlOtAec7N988ahSXlIOgUbtLlyO9NPBJ/wf6Z9cs6DqBA/itV2RJl3FFFq4yG4npu75CBGONGY6J1WZHh6GuHfYKW/kwFB+CyiJZVDaWmeXSeP1srXRZ/4Vz9FnIdYr0C0kh74TNHrffwUcj1TjHHprA55PRhLA7pKZ6qJvEWTUlPm5lkrJSS8VhMt6fjkzO4IifwAVWXJ814ZOK+KTCEcFnSnQE0mw3O8xOs8vsVj1mn8VvwZFHe7w9wZ5oT7IH1JToGGTr0cd4X7w/HkcfA/GBhEBiICkQiEtpL9t8NuHakci8loORebke2RsZjuzKTJkJwbb3CXOvTxua3t2b7khL53/aDJQCKYIY1yNHljzSnFtjY9Jt9h4FMlyv8kFFdvD9yKMcoP89BxhwgAEHGHAA1C/94N1a/SxnAPTtIyM6kCt/A6wqEkmIjDTXGnStbSbnb3apc+Moo4hjjCJncZaoApPdOPRcSjt/xUd4eEGbNpFWJQ0Lq3zv9sjIkVFSbc5/KCkWyhH4e8agJCEgBiTs34tZkmUqGB9/fi6jpVjaV+JFqmzeDMJFyXYobzSUZyVjwxbRRMy/GWWtzTnSVOZvxlATrx1DxRqaspQsNctq+814qrdw+PBC74OOrY8+ulW63LNHj56r7roLx1OJcA9yrd1r5H+E34yn/i7fmsdTofmhyocWTPGXj0rzOSxxcPLJKEYooYxEViy2+EAgE3E7Tc1ssdrsDqfL7fH6/DGxcfEJiUmBYCg5JTWtTXrbjHbtO2R2zMrulJPbOa9LfteCbt179OzVO9ynb7/+AwYOGjxk6LDhI0aOGn3dmLHjxk+4fuKkyTdMmTptemERmTGzuKR01uyyOXPnlc+vqFywsKp60Y2Lb1py89Jly29ZsXLVrbfdfsedd919z7333b/6gQcfevhPjzz62JrH1z6x7sn1Tz29YeOmzc88++fnnt/ywot/2bqt5qXtL+/YueuVV197/Y3de/a+ue+t/Qfefqf24LuH/nr4vfePfPDh0WPHyUcfnzj5yad/++zzU6e/+PKrr4ko9IKadiNBIF4cuYU0UhN10gDY+750LC2iN9Fb6J+EQ8IX7AW2P9gmmB3sFtwaSk6Wk5OS2ycPTi5Je++qADaWQA4b+Yp2aLDZtA8dQ6dB2uWQ9l3hb5jWDWkLMK2QbMe0hZCWNjY2ngX7/S84/wbnxsZpAPs1zm70cBbUX64/RcjXa76+4+sJX83hd75c8OV0Qj7/UXoLmcefGl3iEZFjVyKcu2L8p00cpUGKz9ho38iNreQZcju5g7xJ1pDvyJ3kAXIfeYq8QJ6FTO8ln5HbyCPkf8jP4F08Tu4m74Bn8hN5mrxI/gml/YtsJtvIYXKI1IC/MpM8RIrJ+6SE/JW8R46SI+QD8iH5npSSj8gxcpy8RGaRH8nD5CT4HCfIbHKe1JF7yBxSRuaScjKPzCcbSQVZQCrJQlJFFpFqciNZTP5BbiI3kyVkKVlOlpHXySayArizkqwiF8gPZDdpIHqkJo3kF/IJ+RXqfJacI5+Cb/M5OUVOk6/I38iXZAfZGYn3KnmN1MLvLvIKOQi/t5K3yV2RsL+QtZGrLWQdwCfIRfy317gJ3f8/R8L/RB6MXD1KHhM/gFrCRzhsnOw50GTtyTvyLnKf9DDZqIikr3wFevJV5B22hWyH81nQdBkQ/hnTSDkbQyrg97jAx40eJjPg/A7OzXDeA+cUOJ+Gc0Xk/3I457Bc8g2cq3ge0VN8lqxWCLlL7kQ0OZbslb4ipfKz8LvYOOWH4f8Osle4ws/G1XIu3Id4pssQBvdlqIf0hfErZ0DYO+QRaRHktQLuQZ7Kx6Sn3J6kS+831kkfkCm8Lhxn+L0Pyj8qEt5JIdOkUjJR2k22ivvwd4pUTiaypZCOX+8gW4V9/GzcK40xrpUJ5EV+X1phpOPx2M+Q/h2o58fQ891BNkr5JGAqJoOlDBKA61hxC8+LEqGOivwXacDrDSevN9Y3UieOP+L0OyfiWN76jOB3Ek4drns04XbtyfFqcULd8+DcAfyp4XyCa5uUSNMlP1klHYB6EhofOdNFAr4QIQc53koNIYBnpvwiykwTPyGPWOksqREnk+7SPpCX4WSNlN74hXiG5Iq3kafhXCSnk3xlBuIzkvOfyx6mnUCGQ3oZrx8BuWoPMtSeHAD54HJForTi9FEnkFLlANAC+AfhROpLPoZzL8jkx3CijLFLROZ057ynE/TZUKehbDh5Gs4D0kXSHk6oE8nlcgznI5D+EfMdIPecH4sN+YnKYUT+LsBvBpw+5FH05LIWOTkfIM+74HyW0wrO7UC3xfB7Fn5l+D0AvxN4HCml8Vnhl8ZTXGa53HD55DLC5QPwDyG/uNzyOnwHeICcGXQGV3EVWQpnOZyTlcGkOHLO5u2FyyLHtylfkC2Umegvl9VI+5UebvzMwBN5y3HeEcH/rijuUevamEivtbP4oWYOjNFZ8F1l8F4UokKP30ws4IPYiJ04iJO4iJt4jL3koNcWCzYrniSQRJJEAmCBQiQZfOFUkgZ9QD6rIgN6sO2hR5pJOpIskg19mRySSzqTPOiL5oPtKADL1530ID1JL9KbhEkf0pf0I/3JAOgpDiKDyRDo5w4jw8kIMpKMIqPJdWQMGUvGkfHQY72eTCSTyGRyA5lCppJpZDopJEVoD4rBFpSC1p8NOn4OaPl5oOfng46vBC3PdXw1aHmu428C/X4zaPhloONvAf3OtfutYHm4XboTdPPdYCfuBbt0P1ihB0DvPgRW5E9gl0DzgtV6HHT2E6CtnyTrwXI9TTaAHdkElukZ8ixo6+fI86DLXwCL9RewddvAUr1EtpOX0R5wC8CtwevkDbAke0DLv0n2kbfIfnIAbMI7YCUOknfBuv0VbNx7YNkMi3YUrRm3YSfB3nwK1uWziKX5AuzMV2B3zpC/ow36hnwLNvV7sGHnwVrVgb26CBbwJ7Sn/wTreYlcBpvFLdZVsNPckjVSsDFUgB6uSCXwInjfXaUaNVOLWlVaPXtJ5eyS+bbKkoVlFcUzS+ZXlywsKRYHLFpYIc3s0jmvgMMu2Qg7IcxBmIuwC8J8hMYck7TIMRL48TF0O06Dj/IlM7MubAV4KofYl+ySaBFHikvFn6Xx0mPSN3JveZF81tTDNN10r+kl0zHTP5VRylV1k0a0YdqD2gHtB/Mg80rzC+bvLQMsRZbvrL2sd1lrbe1sG+w59hL7Jofg+Nq5wvmdq5trimuR63HXG64P3KJ7tftzT4qn0nPQ6/Mu877l/d6X6rvT94zf75/s3+D/IaZHzC2x7WLviT0eNzk+nBBK+HvikMQXE/cnJScVJy0IzAksDtweeDjwdOAvgdcDBwMfBb4K1AV+DcrgaQWDmeCnDQqOCxYF5weXBu8OPhbcHHwpuDd4OPhJ8Gzwp1BSaGror8ne5C3Jn6coKXemdkw9kBZKG5Z2X9qHbQany+nz0/+cfqItbXtv288zumQszXg642/terR7r723fWWHvA6fZ3bNLMpcnvlhx74d3+x4LiuQNSXrfjieyHoua2e2J3tz9hvZxzqxTl06je9U3WlLp/ocNceXU5BzOKcu15F7Y+5HnX2dMzsP73xLXru8/Lz+edflTcubm3dT3h15f8rbkLc17428d/M+zvs674cuWpf8Lu91uZI/OH9u/s78H7umd72+651dTxRkFnQrGFQwrqCo4PZuUrdD3U50O9N9VPenu+/q/kOPpB439jjdc0rPf/Z6sddrvWp7He/1Za8LvX7pLfV29Q70XtF7Te9t4c7hceEVfbx9wn0W9dnW56e+btQ+xBsHXYFbLYSoqgX0Tb7+McCCxrkAuzU+C7B74ySAPfD+HoTnAaaCdmoD0IkwEWESwvzGIoBdGw8ALGhcBJDnk0p6NPYAOKnxNYBTEM7GOK809gf4GsLdeH8PxqwFzZEK7ZLDjzHmCYQnEZ7HOBcgfhqUsg1gt8aHAPZAuAfheYBtAN8sgF3wdRyvgG5rA3qAw7N451fUmw6EPaDW6ZCWw9rG0wAPIjwPdzKIXX8NoANKzyBOoEAGSYT8M0gSwtRGL8D+jXcDHAz4ZJAxCMc3Lgc4sXEdwCkYcwbGLMOYcxDORTgPYTnC+QgrMYcFCBcirEK4BOHNCJciXIZwOcJbsKwVCFciXIVwI+a5CeNsQxxqEL6Md14DCmQA/TmGtTq/cxDhIYxzGOEFCG0H/D0NsEfjxwD3IDwPsCNQZiTANsDrjiQHYVeI2RGoweEYhBMRTgGadCTFGGcWwtl4vxLhAoQLEVYhXILwZoRLES5DuBzhLQhXIFyJcBXChxsPA9yE1y9hKduBDh2hvvzObsShFmrdEWSMw2MY5zjCjxB+jDFPIDyJ8AKmuoqhDQCzoKavAcwHWmVBffl1gf4twG7QCrKg1RwAOAVaQRbUlIfORvgwwpcQbkf4iu4F+JqeAXA3xt+DaY9h6HGEHyH8GOEJhCcRnseYFyBVDrEDL3JQnnOIE69TgQ450EY47A7xc4B3HM7AO9sQ1iDcg/cP4fVhhOfhTi5I/t0AHUCBXJB8fp0KrTUXpP0wwAl4fwqUmAt58vtleH8OwrkI5yEsRzgf4UaE2zB+DcJXMIfXwEPJBRvNr2v1IoAHER7COIcRnsMSL2CcK3DdGeubhxopDzVSHkjpswC5NsgD+vPr3Qj34J3zCC/AnS6kC8KzCH8FmA/1PQ3QAW08H+p7GCBv6fnY0vOh7kUA8znXSX/9F4AD9Z8ADkY4BuH4xgDACXg9Ea8nI5zSaAU4A3Mow7RzEM5FOA9hOcL5CCswh0qECxAuRFiFcAnCmxEuRbgM4XKEt2CJKxCuRLgK4UbQnPnQLjgO2xDWIHwZ4W7EsBZLP4jwEN4/jPAc5nwB41zB63qEOsCuQJkDAGcg3IawBuEhhIcBFgBtfwHoAI1aALTl14lA8wKgLYepIMMF0KZOA+wP1C4A7cHhcLwzBq8nNnIZmYExZ+H9Mrw/B+FchPMQliOcj7AS4QKECxFWIVyC8GaESxEuQ7gc4S1Y1gqEKxGuQvgwlrsR42xCuA3xqUH4EoZuR/gyhtYC5QvAmvQHeAjjHEZ4DOMcR/gRwG7QficBdAA1ukH75deJQLduQB8OU/F+f8ChG1CGwzEIx2PaGRhahnfmIJyLcB7CcoTzEVYiXIBwIcIqhEsQ3oxwKcJlCJcj3IhwE8JtWFYNwpfxziG8PgywO+A/CWAbuN8dNWR3wPYwwGK8noWwEu8sQLgQYRXChzH0JYTbEXIt3R21dHfUh91RH3ZHfdgdtDGHDQB7gHRtA8hbbg+QLn6dCFapB1CPw1SQ/B6IVQ/EqgdQsj/AwQjHIJwIktkDKMljFmOcWQjLMHQOwrkI5yEsRzgfYSXCBQgXIqxCuAThzQiXIlyGcDnCW7DEFQhXIlyFkMtYD6A5j7MJ4TbEqgbhS4jVdqB2D6A/D60FzdwD2iyv+yGMcxjhMYx5HOFHCK8i5BTriVq9P+ilAwB3I7wAcAjI4UMAeegQkEN+/Qr0AIeAfl4NvQjOzZFAMQ4rES5AuBBhFcIlCG9GuBThMoTLEW4C2zQSMD8MPUs74Dwe+HUaILcC46GUCdDT5G1hEraCyXC9HKAT4BS4LgLohFrPQJ0/A3X+DPRCZ6AXOgO90Bnohc5AL3QGeqEz0AudgV7oDPRCZ6AXOgO90Bnohc5AL3QGeqEz0AudgV7oDPRCZ6AXOgO90Bnohc5AL7QY/cxi9DOL0c8sRj+zGP3MYvQzZ6F1noXWahZa51lonWehdZ6F1nkWWudZaJ1noXWehdZ5FlrnWWidZ6F1noXWeTZq3dmodWej1p2NWnc2at3ZqHXLkL9lyN8y5O8cvDMH78zBO3Pxzly8MxfvzMM78/DOPLxTjnfK8U453pmPd+bjnfl45yGUmYexpg9jTR/Gmj4MePL7BQh5TR+GmvLrGQi3IaxBuAfhIYSHEZ4HuA15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15vQ15XYOY1CAmNYhJDWJSg5jUICY1iEkNYlKDmNQgJjWISQ1iUoOY1CAmNYhJDWJSg5jUICY1iEkNYlKDmNQgJjWIyUtI55eQzi8hnV9CiXoJJeolpPNLKFEvoUS9hBL1EkrUSyhRL6FEvYQS9RJK1C6SCnZ5F8kEzHeBnmgDcAbeeQja6S6yDa9rEO7B0EN4fRjhebjzKvaGXsUcXgXLxu/0gLbwKvZ9XoV8fgG4Da9rEO7B0EN4fRjhebizG1v6bmzpe1C370Hdvgd1+x7U7XtQt+9B3b4Hdfse1O17ULfvQd2+B3X7HtTte1C370Hdvgd1+x7U7XtQt+9B3b4Hdfse1O17ULfvQd2+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'.zip := ZipArchive new readFrom: (RWBinaryOrTextStream with: data base64Decoded) reset.zip members do:[:mbr|	TTCFont newTextStyleFromTT: (TTFontDescription addFromTTStream: mbr contentStream).].!----End fileIn of a stream----!----SNAPSHOT----#(20 October 2004 3:19:14 pm) Croquet0.1-107-FlagTest.image priorSource: 291945!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:40:18 pm'!Compiler subclass: #TDemoCompiler	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TuringDemo'!TMass subclass: #TDemoMass	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!Parser subclass: #TDemoParser	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TuringDemo'!TSpring subclass: #TDemoSpring	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!!TDemoCompiler methodsFor: 'as yet unclassified' stamp: 'ar 10/19/2004 17:34'!translate: aStream noPattern: noPattern ifFail: failBlock	| tree |	tree _ 		TDemoParser new			parse: aStream			class: class			noPattern: noPattern			context: context			notifying: requestor			ifFail: [^ failBlock value].	^ tree! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:09'!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self compile: code.	].! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:47'!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'MassScriptor.morph') fileInObjectAndCode.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:47'!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:05'!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	src := self sourceCodeAt: #compute.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:40'!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:00'!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMDVdIG9uIDIwIE9jdG9iZXIgMjAwNCBhdCAyOjAwOjU5IHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA7CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GEVRURm9udERlc2NyaXB0aW9uCAAAABEEAAAAABEKZ2x5cGhUYWJsZREGZ2x5cGhzEQlrZXJuUGFpcnMRCWNvcHlyaWdodBEKZmFtaWx5TmFtZREIZnVsbE5hbWURDXN1YmZhbWlseU5hbWURCnVuaXF1ZU5hbWURC3ZlcnNpb25OYW1lEQ5wb3N0c2NyaXB0TmFtZREJdHJhZGVtYXJrEQZib3VuZHMRCnVuaXRzUGVyRW0RCGFzY2VuZGVyEQlkZXNjZW5kZXIRB2xpbmVHYXAQAwA7BglCeXRlQXJyYXkIAAAAAQQAAAAAARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50EAMAOwYMUGFzdGVVcE1vcnBoCAAAABgEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADihELYm9yZGVyV2lkdGgRC2JvcmRlckNvbG9yEQlwcmVzZW50ZXIRBW1vZGVsEQZjdXJzb3IRB3BhZGRpbmcRD2JhY2tncm91bmRNb3JwaBEQdHVydGxlVHJhaWxzRm9ybREJdHVydGxlUGVuERNsYXN0VHVydGxlUG9zaXRpb25zEQppc1BhcnRzQmluEQ5hdXRvTGluZUxheW91dBEOaW5kaWNhdGVDdXJzb3IRC3Jlc2l6ZVRvRml0ERN3YW50c01vdXNlT3ZlckhhbG9zEQp3b3JsZFN0YXRlEQpncmlkZGluZ09uEAMAOwYGQml0bWFwCAAAAAEEAAAAABADADsGC1RhYmxlTGF5b3V0CAAAAAMEAAAAABEKcHJvcGVydGllcxEObWluRXh0ZW50Q2FjaGUQAwA7BgxUZXh0RW1waGFzaXMIAAAAAwQAAAAAEQxlbXBoYXNpc0NvZGURB3NldE1vZGUQAwA7BhJJZGVudGl0eURpY3Rpb25hcnkIAAAAAwQAAAAACgAAA6gKAAADrxADADsGCFJ1bkFycmF5CAAAAAYEAAAAABEEcnVucxEGdmFsdWVzEQlsYXN0SW5kZXgRB2xhc3RSdW4RCmxhc3RPZmZzZXQQAwA7BgZTeW1ib2wIAAAAAQQAAAAAEAMAOwYRVGV4dEZvbnRSZWZlcmVuY2UIAAAAAwQAAAAAEQpmb250TnVtYmVyEQRmb250EAMAOwYQTGF5b3V0UHJvcGVydGllcwgAAAAEBAAAAAAKAAABdQoAAAGACgAAAYsQAwA7BgZOdW1iZXIIAAAAAQQAAAAAEAMAOwYHVFRDRm9udAgAAAAGBAAAAAERDnR0Y0Rlc2NyaXB0aW9uEQlwb2ludFNpemURD2ZvcmVncm91bmRDb2xvchEFY2FjaGURC2Rlcml2YXRpdmVzARADADsGDEVsbGlwc2VNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDAQEBEAMAOwYLU2tldGNoTW9ycGgIAAAADAQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQxvcmlnaW5hbEZvcm0RDXJvdGF0aW9uU3R5bGURCnNjYWxlUG9pbnQRDWZyYW1lc1RvRHdlbGwRC3JvdGF0ZWRGb3JtEAMAOwYNVGV4dEF0dHJpYnV0ZQgAAAABBAAAAAABEAMAOwYGU3RyaW5nCAAAAAEEAAAAABADADsGFExhcmdlUG9zaXRpdmVJbnRlZ2VyCAAAAAEEAAAAABADADsGDURpc3BsYXlNZWRpdW0IAAAAAQQAAAAAARADADsGDEFic3RyYWN0Rm9udAgAAAABBAAAAAABEAMAOwYNRGlzcGxheU9iamVjdAgAAAABBAAAAAABEAMAOwYOTW9ycGhFeHRlbnNpb24IAAAADAQAAAAAEQZsb2NrZWQRB3Zpc2libGURBnN0aWNreRELYmFsbG9vblRleHQRE2JhbGxvb25UZXh0U2VsZWN0b3IRDGV4dGVybmFsTmFtZREMaXNQYXJ0c0Rvbm9yEQphY3RvclN0YXRlEQZwbGF5ZXIRDGV2ZW50SGFuZGxlchEPb3RoZXJQcm9wZXJ0aWVzAQEBEAMAOwYJVGV4dE1vcnBoCAAAABQEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADigoAAAR2CgAABIMRCXRleHRTdHlsZREEdGV4dBEId3JhcEZsYWcRCXBhcmFncmFwaBEGZWRpdG9yEQljb250YWluZXIRC3ByZWRlY2Vzc29yEQlzdWNjZXNzb3IRC2xhc3RHZXN0dXJlEQ9iYWNrZ3JvdW5kQ29sb3IRB21hcmdpbnMQAwA7Bg5SZWN0YW5nbGVNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDEAMAOwYWU2VxdWVuY2VhYmxlQ29sbGVjdGlvbggAAAABBAAAAAAQAwA7Bg5UZXh0Rm9udENoYW5nZQgAAAACBAAAAAAKAAAGhRADADsGDUJvcmRlcmVkTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgwEBAQEBEAMAOwYJRGlza1Byb3h5CAAAAAUEAAAAABEQZ2xvYmFsT2JqZWN0TmFtZRELcHJlU2VsZWN0b3IRE2NvbnN0cnVjdG9yU2VsZWN0b3IRD2NvbnN0cnVjdG9yQXJncxADADsGCVRleHRTdHlsZQgAAAANBAAAAAARCWZvbnRBcnJheREOZm9udEZhbWlseVNpemURCGxpbmVHcmlkEQhiYXNlbGluZREJYWxpZ25tZW50EQtmaXJzdEluZGVudBEKcmVzdEluZGVudBELcmlnaHRJbmRlbnQRCXRhYnNBcnJheREPbWFyZ2luVGFic0FycmF5EQdsZWFkaW5nERBkZWZhdWx0Rm9udEluZGV4EAMAOwYRT3JpZW50ZWRGaWxsU3R5bGUIAAAABAQAAAAACgAAA/QKAAAD/AoAAAQHAQEBARADADsGBEZvcm0IAAAABgQAAAAAEQRiaXRzEQV3aWR0aBEGaGVpZ2h0EQVkZXB0aBEGb2Zmc2V0EAMAOwYKU3RyaWtlRm9udAgAAAATBAAAAAARE2NoYXJhY3RlclRvR2x5cGhNYXARBnhUYWJsZREGZ2x5cGhzEQRuYW1lEQR0eXBlEQhtaW5Bc2NpaREIbWF4QXNjaWkRCG1heFdpZHRoEQxzdHJpa2VMZW5ndGgRBmFzY2VudBEHZGVzY2VudBEHeE9mZnNldBEGcmFzdGVyEQlzdWJzY3JpcHQRC3N1cGVyc2NyaXB0EQhlbXBoYXNpcxEPZGVyaXZhdGl2ZUZvbnRzEQlwb2ludFNpemUQAwA7BgxTaW1wbGVCb3JkZXIIAAAABAQAAAAAEQliYXNlQ29sb3IRBWNvbG9yEQV3aWR0aBADADsGCUxvb2t1cEtleQgAAAACBAAAAAARA2tleQEBAQEQAwA7BhFBcnJheWVkQ29sbGVjdGlvbggAAAABBAAAAAABAQEBEAMAOwYJUmVjdGFuZ2xl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AAAZAAc8AAAAFQAHPAAAABkAFv/v//cK/tLg2SL/7//3D/7g7+f+s7+5/tLg2SL/7//3D/7g7+f+s7+5/tLg2RL/7//3M/7g7+f+s7+5/tLg2f/v//f+0uDZ/rO/uf7g7+f+s7+5/gICAv41ODb+s7+5/tLg2Sb/7//3GQAK/wAAAT0ADw8AAAA/AAAAHgAAAD0AHv+oqKgZABb/+Ph4Cv8AAAgH/4CAQBL/+Ph4IQAnPAAAAPwAAADDAAAA6gAAAFoAAAAeAAAA+QAAAOEAAAD8AAAACjwAAAAn/AAAAPkAAAD8AAAA6gAAAEsAAAAAAAAASwAAAPwAAAD5AAAACvwAAAATPAAAAEsAAAD8AAAA+QAAAAr8AAAABzwAAAARAAr/7//3C/7g7+f+X2ViDv4CAgIP/rbCvP7g7+f+X2ViCv4CAgJz/gUFBf6MlZD/7//3/rbCvP4CAgL+NTg2/hMUFP4CAgL+X2Vi/kBEQv4CAgL+ExQU/rbCvP/v//f+tsK8/gICAv41ODb+ExQU/gICAv44Ozn/7//3/rbCvP4CAgL+foaC/+//9/5+hoL+AgIC/rbCvBL+AgICH/5+hoL+4O/n/l9lYv4CAgL+BQUF/hYXF/6os60O/+//9xkAEv8AAAEZAAsPAAAAmQAAAAr8AAAAK/kAAABpAAAAAAAAADwAAAD8AAAAxgAAANsAAAD8AAAA1QAAAA8AAAApACv/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKioEQAW//j4eA//GBgQ/xAQCP+IiEAS//j4eCEAGzwAAAD8AAAAtAAAAHgAAADSAAAAlgAAAAq0AAAAV/wAAAA8AAAADwAAAC0AAAAAAAAAPAAAAPwAAAC0AAAAAAAAAHgAAAD2AAAAHgAAAAAAAAA/AAAADwAAAHgAAAD2AAAAHgAAAAAAAAA/AAAADwAAABEACv/v//cP/mJoZf4CAgL+X2ViCv7E0cqT/tLg2f5iaGX+AgIC/m10cP62wrz+MjU0/gUFBf7E0cr+tsK8/gICAv5DR0X+tsK8/jU4Nv4CAgL+bXRw/oyVkP4CAgL+foaC/+//9/62wrz+AgIC/jU4Nv62wrz+X2Vi/gICAv6MlZD+tsK8/gICAv5+hoL/7//3/n6Ggv4CAgL+tsK8/+//9/4CAgL+RkpICv/v//cb/mJoZf4CAgL+jJWQ/+//9/41ODb+HB0cDv/v//cZABb/AAABFQA7lgAAAPwAAACKAAAAPAAAAMkAAAD5AAAALQAAADwAAAD8AAAAxgAAADwAAACoAAAA/AAAADwAAAAlADL/qKioDQAW//j4eA//QEAY/yAgEP+YmEgS//j4eCEAEzwAAAD8AAAAtAAAAB4AAAAK/AAAAA9aAAAAtAAAAPwAAAAKPAAAAAfqAAAADvwAAAAP4QAAAAAAAABLAAAACvwAAAATzAAAAJkAAAAPAAAASwAAAAr8AAAAD8wAAACZAAAADwAAABEACv/v//cP/kZKSP4CAgL+tsK8Dv/v//eP/kZKSP4CAgL+tsK8/+//9/6MlZD+AgIC/qizrf62wrz+AgIC/n6Ggv/v//f+RkpI/gICAv62wrz+4O/n/gICAv5GSkj/7//3/rbCvP4CAgL+foaC/+//9/7E0cr+AgIC/nB3c/62wrz+AgIC/n6Ggv/v//f+cHdz/gICAv62wrz/7//3/gICAv5GSkgK/+//9wf+RkpIEv4CAgIL/ggICP7S4NkK/+//9xkAGv8AAAERADu0AAAA/AAAADwAAAAAAAAAaQAAAPwAAABLAAAAPAAAAPwAAAB4AAAAAAAAAHgAAAD8AAAAeAAAACEAQ/+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKio/6CgoAAAAAAW//j4eA//YGAw/zAwGP+oqFAS//j4eCEAQzwAAAD8AAAAtAAAAAAAAACWAAAA0gAAAAAAAAC0AAAA/AAAADwAAAC0AAAA/AAAAEsAAAAPAAAA6gAAAPAAAAAJAC8eAAAAPwAAAKsAAAD8AAAASwAAAAAAAAAeAAAAPwAAAKsAAAD8AAAASwAAABEACv/v//cP/lRZVv4CAgL+qLOtDv/v//cb/lRZVv4CAgL+qLOt/+//9/5iaGX+AgICCv62wrxv/gICAv5+hoL/7//3/kZKSP4CAgL+tsK8/+//9/4CAgL+RkpI/+//9/62wrz+AgIC/nB3c//v//f+mqSf/gICAv5+hoL+tsK8/gICAv5wd3P/7//3/kZKSP4CAgL+tsK8/+//9/4CAgL+RkpICv/v//cP/lRZVv4CAgL+tsK8Gv/v//cZABr/AAABEQAbpQAAAPwAAABLAAAAAAAAAJYAAAD8AAAACjwAAAAb/AAAAHgAAAAA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AAgEAAAAABADA7wEAAAABwQAAAABEAMDvAQAAAAHBAAAAAMQAwO8BAAAAAYEAAAABBADA7wEAAAABQQAAAAFEAMDvAQAAAAEBAAAAAYQAwO8BAAAAAMEAAAABxADA7wEAAAAAQQAAAAHEAMDvAQAAAAABAAAAAgQAwO8BP////8EAAAABxADA7wE/////QQAAAAHEAMDvAT////8BAAAAAYQAwO8BP////sEAAAABRADA7wE////+gQAAAAEEAMDvAT////5BAAAAAMQAwO8BP////kEAAAAARADA7wE////+AQAAAAAEAMDvAT////5BP////8QAwO8BP////kE/////RADA7wE////+gT////8EAMDvAT////7BP////sQAwO8BP////wE////+hADA7wE/////QT////5EAMDvAT/////BP////kEAAAAAAEBARAUCVkPAqIrHbLDCgAAKToIAAAAAAEQBAKHBAAAAAAEAAAAIAuABgEH/wAAARAMCK4DAgMBAREEQ29kZQMBAQEQAwXgBAAAAAIIAAAABBADADsKAAAg+RAEBpsKAAAhDwoAACiGAwEBEAMAOwoAACEmEAQChwQ9b5vGBAAAACALgAYBB//1+fEEAAAAAAoAACvaEA0LSQgAAAAEEAUK6woAAAxlAQYbZmFtaWx5TmFtZTpzaXplOmVtcGhhc2l6ZWQ6CAAAAAMRB05ld1lvcmsEAAAADAQAAAAAEAUK6woAAAxlAQoAACxpCAAAAAMRB05ld1lvcmsEAAAADwQAAAAAEAUK6woAAAxlAQoAACxpCAAAAAMRB05ld1lvcmsEAAAAFQQAAAAAEAUK6woAAAxlAQoAACxpCAAAAAMRB05ld1lvcmsEAAAAGgQAAAAAAQQAAAAOBAAAAAwEAAAAAAQAAAAABAAAAAAEAAAAABAFCusGDVRleHRDb25zdGFudHMBBgNhdDoIAAAAAQYQRGVmYXVsdFRhYnNBcnJheRAFCusKAAAtNgEKAAAtRggAAAABBhZEZWZhdWx0TWFyZ2luVGFic0FycmF5BAAAAAIEAAAAARADDeERwAABPw1UZXN0IG1hc3MgPD4gMA0JWWVzDQkJdCA8LSAwLjAzLiAJCQkJCQkJCSJzY2FsZSBmYWN0b3IiDQkJYWNjZWwgPC0gbWFzcyAqIGZvcmNlLiAJCQkJCSJjb21wdXRlIGFjY2VsZXJhdGlvbiINCQl2ZWxvY2l0eSBpbmNyZWFzZUJ5OiAwLjkgKiBhY2NlbCAqIHQuCQkiaW5jcmVhc2UgdmVsb2NpdHkiDQkJdmVsb2NpdHkgbXVsdGlwbHlCeTogMC45OTUuIAkJCQkiZGFtcCB2ZWxvY2l0eSINCQlsb2NhdGlvbiBpbmNyZWFzZUJ5OiB2ZWxvY2l0eSAqIHQuCSAJImNoYW5nZSBsb2NhdGlvbiINCUVuZC4NZm9yY2UgcmVzZXQgCQkJCQkJCQkJCSJyZXNldCBmb3JjZSIQBgYMCAAAAB4EAAAAKgQAAAABBAAAAAwEAAAAAQQAAAAfBAAAAAEEAAAAFAQAAAABBAAAABYEAAAAAQQAAAATBAAAAAEEAAAAEQQAAAABBAAAABYEAAAAAQQAAAAMBAAAAAEEAAAADQQAAAABBAAAABYEAAAAAQQAAAARBAAAAAEEAAAADwQAAAABBAAAAB0EAAAAAQQAAAALBAAAAAEIAAAAHggAAAADEAIKfgQAAAABEAMGaAEQBgbgEAUK6woAAABIAQYRZGVzY3JpcHRpb25OYW1lZDoIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACRAEAocEAAAAAAQAAAAgC4AGAQf/AAABEAIOAwgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQgAAAAEEAYG4BAFCusKAAAASAEKAAAvpQgAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAK9oQAg4DCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARAGBuAQBQrrCgAAAEgBCgAAL6UIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAACvaEAIOAwgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEQBgbgEAUK6woAAABIAQoAAC+lCAAAAAEREUJpdHN0cmVhbVZlcmFTYW5zBAAAAAkQBAKHBAAAAAAEAAAAIAuABgEH/wAAARACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARADBa0EAAAAAQIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAACAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAICCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQQAAAACBAAAAAEEAAAAAQIBAQEBAQEQBAKHBDvf//8BAQEBEAUC2gQnPnP/AQEEAAAAABAMCK4DAgMBAREKUmVjdGFuZ2xlMwMBAQEQAwXgBAAAAAQIAAAABgEBEAMAOwoAAChrEAMFdhARAVQKAAAhDwoAACiGAwQAAAAACgAAKKsKAAAooAQAAAAACgAAKKsKAAAotAoAACigAwMKAAAoqwoAACigBAAAAAAEP////xADA7wEAAAAFgQAAACJEAMAOwoAACDGEAQNPAEKAAAo+AQAAAABEAMAOwoAACEmCgAAObIQAwA7CgAAIPkKAAA5+AQAAAAACgAAKPgBEAQChwQmLOf/AQEQDAiuAwIDAQERDE1hc3NTY3JpcHRvcgMBAQEQAwXgBAAAAAkIAAAAEhADADsKAAAoaxADBXYQEQFUCgAAIRoKAAAohgMEAAAAAAoAACirCgAAKKAEAAAAAAoAACirBgt0b3BUb0JvdHRvbQoAACigAwMKAAAoqwoAACigBAAAAAAEP////wEBAQEBARADADsGDHNoYWRvd09mZnNldBADA7wEAAAAAwQAAAADEAMAOwYLc2hhZG93Q29sb3IQBQLaBAAAAAAEAAAAIAuABgEHVgAAAQQAAABWARADADsKAAAgxhAEDTwQBAKHBCMb3/8EAAAAIAuABgEH/4y9/woAADt/BAAAAAEBARADADsGDWNsaXBTdWJtb3JwaHMCARADADsGC2Nvcm5lclN0eWxlBgdyb3VuZGVkEAMAOwYNaGFzRHJvcFNoYWRvdwIQAwA7CgAAISYQCAPXEAMDvAQAAABUBAAAAhwQAwO8BAAAAA0EAAAAFRADA7wE////6wQAAAANCAAAAAIQAwA7DgAAAAAAAAAAEAQChwQjG9//BAAAACALgAYBB/+Mvf8QAwA7Dj/wAAAAAAAAEAQChwQpTe//BAAAACALgAYBB/+l3v8LgOEk4gA+/4y9/xb/jL7/Lv+Nvv8m/42//xr/jr//Pv+OwP8H/4/A/z7/j8H/Ev+Pwv8y/5DC/yb/kMP/Gv+Rw/86/5HE/wr/ksT/Pv+Sxf8S/5LG/zL/k8b/Iv+Tx/8e/5TH/zr/lMj/Cv+VyP8+/5XJ/w7/lcr/Nv+Wyv8i/5bL/x7/l8v/Nv+XzP8O/5jM/z7/mM3/Dv+Yzv82/5nO/x7/mc//Iv+az/82/5rQ/w7/m9D/Pv+b0f8K/5vS/zr/nNL/Hv+c0/8i/53T/zL/ndT/Ev+e1P8+/57V/wr/ntb/Ov+f1v8a/5/X/yb/oNf/Mv+g2P8S/6HY/z7/odn/B/+h2v8+/6La/xr/otv/Jv+j2/8u/6Pc/xb/pNz/Pv+k3f8H/6Xe/wMDEAMAOwoAACD5CgAAOs4hDQ0='! !!TDemoMass class methodsFor: 'parser' stamp: 'ar 10/20/2004 13:38'!compilerClass	^TDemoCompiler! !!TDemoMass class methodsFor: 'parser' stamp: 'ar 10/20/2004 13:38'!parserClass	^TDemoParser! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01'!blockUntil: stopCondition varNodes: variableNodes inner: innerBlock	"Parse statements in a block until stopCondition is met"	| stmts returns start more blockComment temporaryBlockVariables |	start _ prevMark + requestorOffset.	temporaryBlockVariables _ self temporaryBlockVariables.	stmts _ OrderedCollection new.	"give initial comment to block, since others trail statements"	blockComment _ currentComment.	currentComment _ nil.	returns _ false.	more := true.	[more and:[stopCondition value not]] whileTrue:[		start _ self startOfNextToken.		(returns _ self matchAnswer) ifTrue:[			self addComment.			stmts addLast: (parseNode isReturningIf					ifTrue: [parseNode]					ifFalse: [ReturnNode new							expr: parseNode							encoder: encoder							sourceRange: (start to: self endOfLastToken)]).		] ifFalse:[			self expression ifTrue:[				self addComment.				stmts addLast: parseNode			] ifFalse:[				self addComment.				stmts size = 0 ifTrue:[					stmts addLast: (encoder encodeVariable:'nil')				]			]		].		self match: #period.		hereType == #doIt ifTrue:[more := false].	].	more ifFalse:[^false].	parseNode _ BlockNode new				arguments: variableNodes				statements: stmts				returns: returns				from: encoder.	parseNode comment: blockComment.	parseNode temporaries: temporaryBlockVariables.	encoder noteSourceRange: (self endOfLastToken to: self endOfLastToken) forNode: parseNode.	"The scope of the parameters and temporary block variables is no longer active."	temporaryBlockVariables do: [:variable | variable scope: -1].	variableNodes do: [:variable | variable scope: -1].	^ true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:56'!expression	here = 'Test' ifTrue:[^self testYesNo].	^super expression! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01'!innerBlock: varNodes until: stopCondition	"Parse statements in a block until stopCondition is met"	^self blockUntil: stopCondition varNodes: varNodes inner: true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01'!matchAnswer	"Parse a return statement"	(self matchToken: 'return') ifTrue:[		parseNode := encoder encodeVariable: 'nil'.		^true].	((self matchToken: 'answer') or:[self match: #upArrow]) ifTrue:[		self expression ifFalse:[^self expected: 'expression to return'].		^true].	^false! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:17'!testYesNo	| start condition trueBlock selector args |	start _ self startOfNextToken.	self advance.	self expression ifFalse:[self expected: 'Condition'].	condition := parseNode.	here = 'Yes' ifFalse:[^self expected: 'Yes'].	self advance.	(self innerBlock: #() until:[here = 'No' or:[here = 'End']]) 		ifFalse:[^self expected: 'end (if) or No'].	trueBlock := parseNode.	here = 'No' ifTrue:[		self advance.		(self innerBlock: #() until:[here = 'end']) 			ifFalse:[^self expected: 'end (if)'].		failBlock := parseNode.		selector := #ifTrue:ifFalse:.		args := {trueBlock. failBlock}.	] ifFalse:[		selector := #ifTrue:.		args := {trueBlock}.	].	self advance.	parseNode := MessageNode new		receiver: condition		selector: selector		arguments: args		precedence: 3		from: encoder		sourceRange: (start to: self endOfLastToken).	^true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:21'!variable	| varName varStart varEnd |	varStart _ self startOfNextToken + requestorOffset.	varName _ self advance.	varEnd _ self endOfLastToken + requestorOffset.	^ encoder encodeVariable: varName		sourceRange: (varStart to: varEnd)		ifUnknown: [encoder bindTemp: varName]! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:45'!xBinary	super xBinary.	(token = '<' and:[hereChar = $-]) ifTrue:[		token _ (token , (String with: self step)) asSymbol.		tokenType := #leftArrow.	].! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:59'!xLetter	super xLetter.	tokenType == #word ifTrue:[		token = 'Yes' ifTrue:[tokenType := #yes].		token = 'No' ifTrue:[tokenType := #no].		token = 'End' ifTrue:[tokenType := #end].	].! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:08'!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute:.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self compile: code.	].! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:44'!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'SpringScriptor.morph') fileInObjectAndCode.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:44'!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:05'!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	src := self sourceCodeAt: #compute:.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:42'!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:00'!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMDVdIG9uIDIwIE9jdG9iZXIgMjAwNCBhdCAyOjAwOjUzIHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA7CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GCUJ5dGVBcnJheQgAAAABBAAAAAAQAwA7BhFUVEZvbnREZXNjcmlwdGlvbggAAAARBAAAAAARCmdseXBoVGFibGURBmdseXBocxEJa2VyblBhaXJzEQljb3B5cmlnaHQRCmZhbWlseU5hbWURCGZ1bGxOYW1lEQ1zdWJmYW1pbHlOYW1lEQp1bmlxdWVOYW1lEQt2ZXJzaW9uTmFtZREOcG9zdHNjcmlwdE5hbWURCXRyYWRlbWFyaxEGYm91bmRzEQp1bml0c1BlckVtEQhhc2NlbmRlchEJZGVzY2VuZGVyEQdsaW5lR2FwARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50EAMAOwYMUGFzdGVVcE1vcnBoCAAAABgEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADihELYm9yZGVyV2lkdGgRC2JvcmRlckNvbG9yEQlwcmVzZW50ZXIRBW1vZGVsEQZjdXJzb3IRB3BhZGRpbmcRD2JhY2tncm91bmRNb3JwaBEQdHVydGxlVHJhaWxzRm9ybREJdHVydGxlUGVuERNsYXN0VHVydGxlUG9zaXRpb25zEQppc1BhcnRzQmluEQ5hdXRvTGluZUxheW91dBEOaW5kaWNhdGVDdXJzb3IRC3Jlc2l6ZVRvRml0ERN3YW50c01vdXNlT3ZlckhhbG9zEQp3b3JsZFN0YXRlEQpncmlkZGluZ09uEAMAOwYGQml0bWFwCAAAAAEEAAAAABADADsGC1RhYmxlTGF5b3V0CAAAAAMEAAAAABEKcHJvcGVydGllcxEObWluRXh0ZW50Q2FjaGUQAwA7BgxUZXh0RW1waGFzaXMIAAAAAwQAAAAAEQxlbXBoYXNpc0NvZGURB3NldE1vZGUQAwA7BhJJZGVudGl0eURpY3Rpb25hcnkIAAAAAwQAAAAACgAAA6gKAAADrxADADsGCFJ1bkFycmF5CAAAAAYEAAAAABEEcnVucxEGdmFsdWVzEQlsYXN0SW5kZXgRB2xhc3RSdW4RCmxhc3RPZmZzZXQQAwA7BgZTeW1ib2wIAAAAAQQAAAAAEAMAOwYRVGV4dEZvbnRSZWZlcmVuY2UIAAAAAwQAAAAAEQpmb250TnVtYmVyEQRmb250EAMAOwYQTGF5b3V0UHJvcGVydGllcwgAAAAEBAAAAAAKAAABdQoAAAGACgAAAYsQAwA7BgZOdW1iZXIIAAAAAQQAAAAAEAMAOwYHVFRDRm9udAgAAAAGBAAAAAERDnR0Y0Rlc2NyaXB0aW9uEQlwb2ludFNpemURD2ZvcmVncm91bmRDb2xvchEFY2FjaGURC2Rlcml2YXRpdmVzARADADsGDEVsbGlwc2VNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDAQEBEAMAOwYLU2tldGNoTW9ycGgIAAAADAQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQxvcmlnaW5hbEZvcm0RDXJvdGF0aW9uU3R5bGURCnNjYWxlUG9pbnQRDWZyYW1lc1RvRHdlbGwRC3JvdGF0ZWRGb3JtEAMAOwYNVGV4dEF0dHJpYnV0ZQgAAAABBAAAAAABEAMAOwYGU3RyaW5nCAAAAAEEAAAAABADADsGFExhcmdlUG9zaXRpdmVJbnRlZ2VyCAAAAAEEAAAAABADADsGDURpc3BsYXlNZWRpdW0IAAAAAQQAAAAAARADADsGDEFic3RyYWN0Rm9udAgAAAABBAAAAAABEAMAOwYNRGlzcGxheU9iamVjdAgAAAABBAAAAAABEAMAOwYOTW9ycGhFeHRlbnNpb24IAAAADAQAAAAAEQZsb2NrZWQRB3Zpc2libGURBnN0aWNreRELYmFsbG9vblRleHQRE2JhbGxvb25UZXh0U2VsZWN0b3IRDGV4dGVybmFsTmFtZREMaXNQYXJ0c0Rvbm9yEQphY3RvclN0YXRlEQZwbGF5ZXIRDGV2ZW50SGFuZGxlchEPb3RoZXJQcm9wZXJ0aWVzAQEBEAMAOwYOUmVjdGFuZ2xlTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgxADADsGCVRleHRNb3JwaAgAAAAUBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDEQl0ZXh0U3R5bGURBHRleHQRCHdyYXBGbGFnEQlwYXJhZ3JhcGgRBmVkaXRvchEJY29udGFpbmVyEQtwcmVkZWNlc3NvchEJc3VjY2Vzc29yEQtsYXN0R2VzdHVyZREPYmFja2dyb3VuZENvbG9yEQdtYXJnaW5zEAMAOwYWU2VxdWVuY2VhYmxlQ29sbGVjdGlvbggAAAABBAAAAAAQAwA7Bg5UZXh0Rm9udENoYW5nZQgAAAACBAAAAAAKAAAGhRADADsGDUJvcmRlcmVkTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgwEBAQEBEAMAOwYJRGlza1Byb3h5CAAAAAUEAAAAABEQZ2xvYmFsT2JqZWN0TmFtZRELcHJlU2VsZWN0b3IRE2NvbnN0cnVjdG9yU2VsZWN0b3IRD2NvbnN0cnVjdG9yQXJncxADADsGCVRleHRTdHlsZQgAAAANBAAAAAARCWZvbnRBcnJheREOZm9udEZhbWlseVNpemURCGxpbmVHcmlkEQhiYXNlbGluZREJYWxpZ25tZW50EQtmaXJzdEluZGVudBEKcmVzdEluZGVudBELcmlnaHRJbmRlbnQRCXRhYnNBcnJheREPbWFyZ2luVGFic0FycmF5EQdsZWFkaW5nERBkZWZhdWx0Rm9udEluZGV4EAMAOwYRT3JpZW50ZWRGaWxsU3R5bGUIAAAABAQAAAAACgAAA/QKAAAD/AoAAAQHAQEBARADADsGDFNpbXBsZUJvcmRlcggAAAAEBAAAAAARCWJhc2VDb2xvchEFY29sb3IRBXdpZHRoEAMAOwYKU3RyaWtlRm9udAgAAAATBAAAAAARE2NoYXJhY3RlclRvR2x5cGhNYXARBnhUYWJsZREGZ2x5cGhzEQRuYW1lEQR0eXBlEQhtaW5Bc2NpaREIbWF4QXNjaWkRCG1heFdpZHRoEQxzdHJpa2VMZW5ndGgRBmFzY2VudBEHZGVzY2VudBEHeE9mZnNldBEGcmFzdGVyEQlzdWJzY3JpcHQRC3N1cGVyc2NyaXB0EQhlbXBoYXNpcxEPZGVyaXZhdGl2ZUZvbnRzEQlwb2ludFNpemUQAwA7BgRGb3JtCAAAAAYEAAAAABEEYml0cxEFd2lkdGgRBmhlaWdodBEFZGVwdGgRBm9mZnNldBADADsGCUxvb2t1cEtleQgAAAACBAAAAAARA2tleQEBAQEQAwA7BhFBcnJheWVkQ29sbGVjdGlvbggAAAABBAAAAAABAQEBEAMAOwYJUmVjdGFuZ2xl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AAAABAgAAAAGAQEQAwA7BgxsYXlvdXRQb2xpY3kQAwV2EBEBVAoAACanBgpzaHJpbmtXcmFwAwQAAAAABgZjZW50ZXIGBG5vbmUEAAAAAAYHdG9wTGVmdAYLbGVmdFRvUmlnaHQKAAAuTQMDCgAALlgKAAAuTQQAAAAABD////8QAwO8BAAAAVcEAAAAFBADADsKAAAmXhAEDC0BEAQChwQAAAAABAAAACALgAYBB/8AAAEEAAAAARADADsKAAAmvgoAAC3XEAMAOwoAACaRCgAALioEAAAAAAoAAC6lEAkJWRADDbgQAwO8BAAAAHgEAAAALxADA7wEAAACHQ5AYyAAAAAAAAoAABLMCAAAAAIQDw7VDweALwjAQwoAAC7nCgAAJugBEAQChwQ/////BAAAACALgAMBBf8QDAiuAwIDAQEBAwEBARADBeAEAAAAAggAAAAEARADADsKAAAmXhAEDC0BEAQChwQtK0utBAAAACALgAYBB/+0tOsEAAAAAQEQAwA7CgAAJr4KAAAvLwQAAAABCgAAL24BCAAAACAQAwO8BAAAAAAE////+BADA7wEAAAAAQT////5EAMDvAQAAAADBP////kQAwO8BAAAAAQE////+hADA7wEAAAABQT////7EAMDvAQAAAAGBP////wQAwO8BAAAAAcE/////RADA7wEAAAABwT/////EAMDvAQAAAAIBAAAAAAQAwO8BAAAAAcEAAAAARADA7wEAAAABwQAAAADEAMDvAQAAAAGBAAAAAQQAwO8BAAAAAUEAAAABRADA7wEAAAABAQAAAAGEAMDvAQAAAADBAAAAAcQAwO8BAAAAAEEAAAABxADA7wEAAAAAAQAAAAIEAMDvAT/////BAAAAAcQAwO8BP////0EAAAABxADA7wE/////AQAAAAGEAMDvAT////7BAAAAAUQAwO8BP////oEAAAABBADA7wE////+QQAAAADEAMDvAT////5BAAAAAEQAwO8BP////gEAAAAABADA7wE////+QT/////EAMDvAT////5BP////0QAwO8BP////oE/////BADA7wE////+wT////7EAMDvAT////8BP////oQAwO8BP////0E////+RADA7wE/////wT////5BAAAAAABAQEQFAmfDwjALyHQmQoAAC7nCAAAAAABEAQChwQAAAAABAAAACALgAYBB/8AAAEQDAiuAwIDAQERBENvZGUDAQEBEAMF4AQAAAACCAAAAAQQAwA7CgAAJpEQBAabCgAAJqcKAAAuMwMBARADADsKAAAmvhAEAocEPW+bxgQAAAAgC4AGAQf/9fnxBAAAAAAKAAAxhxANC0kIAAAABBAFCusKAAAMYgEGG2ZhbWlseU5hbWU6c2l6ZTplbXBoYXNpemVkOggAAAADEQdOZXdZb3JrBAAAAAwEAAAAABAFCusKAAAMYgEKAAAyFggAAAADEQdOZXdZb3JrBAAAAA8EAAAAABAFCusKAAAMYgEKAAAyFggAAAADEQdOZXdZb3JrBAAAABUEAAAAABAFCusKAAAMYgEKAAAyFggAAAADEQdOZXdZb3JrBAAAABoEAAAAAAEEAAAADgQAAAAMBAAAAAAEAAAAAAQAAAAABAAAAAAQBQrrBg1UZXh0Q29uc3RhbnRzAQYDYXQ6CAAAAAEGEERlZmF1bHRUYWJzQXJyYXkQBQrrCgAAMuMBCgAAMvMIAAAAAQYWRGVmYXVsdE1hcmdpblRhYnNBcnJheQQAAAACBAAAAAEQAw3hEcAAAOINCXYgPC0gbWFzczEgbG9jYXRpb24gLSBtYXNzMiBsb2NhdGlvbi4JImFjdHVhbCBsZW5ndGgiDQluIDwtIHYgbm9ybWFsaXplZCAqIHJlc3QuCQkJCSJyZXN0IGxlbmd0aCINCWYgPC0gKHYgLSBuICkgKiBrLgkJCQkJCQkiY29tcHV0ZSBmb3JjZSINCW1hc3MxIGFkZEZvcmNlOmYuCQkJCQkJImFkZCB0byBtYXNzMSINCW1hc3MyIGFkZEZvcmNlOmYgbmVnYXRlZC4JCQkJImFuZCB0byBtYXNzMiINEAYGDAgAAAAZBAAAAAIEAAAAJgQAAAABBAAAAA0EAAAAAQQAAAAfBAAAAAEEAAAACwQAAAABBAAAABsEAAAAAQQAAAANBAAAAAEEAAAAEAQAAAABBAAAAAgEAAAAAQQAAAAMBAAAAAEEAAAAEAQAAAABBAAAAA4EAAAAAQQAAAAMBAAAAAIIAAAAGQgAAAACEAIKfgQAAAABEAMGaAEQBgbgEAUK6woAAABhAQYRZGVzY3JpcHRpb25OYW1lZDoIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAADGHEAIOAwgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQgAAAAEEAYG4AoAADTSBAAAAAkQBAKHBDwv/8IBARACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYG4AoAADTSBAAAAAkKAAAxhxACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYG4AoAADTSBAAAAAkQBAKHBAAAAAAEAAAAEAuABgEHAAEAARACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQgAAAADEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAwZoAQoAADTOEAIDKxAEAocEPC//wgEBCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAICEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAQIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysQBAKHBDwv/8IBAQgAAAADEAIKfgQAAAABEAMFrQQAAAACAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAwZoAQoAADTOEAIDKxAEAocEPC//wgEBCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAgIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysQBAKHBDwv/8IBAQgAAAADEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAgMrEAQChwQ8LwvCAQEQAwZoAQoAADTOCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAgIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysQBAKHBDwv/8IBAQgAAAADEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAgMrEAQChwQ8LwvCAQEQAwZoAQoAADTOCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAgIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysKAAA2LQQAAADhBAAAABkEAAAAAAIBAQEBAQEQBAKHBDvf//8BAQEBEAUC2gQ9b5vGAQEEAAAAABAMCK4DAgMBAREKUmVjdGFuZ2xlMwMBAQEQAwXgBAAAAAQIAAAABgEBEAMAOwoAAC4YEAMFdhARAVQKAAAmpwoAAC4zAwQAAAAACgAALlgKAAAuTQQAAAAACgAALlgKAAAuYQoAAC5NAwMKAAAuWAoAAC5NBAAAAAAEP////xADA7wEAAAAFgQAAABNEAMAOwoAACZeEAQMLQEKAAAupQQAAAABEAMAOwoAACa+CgAAPZAQAwA7CgAAJpEKAAA91gQAAAAACgAALqUBEAQChwQmLOf/AQEQDAiuAwIDAQERDlNwcmluZ1NjcmlwdG9yAwEBARADBeAEAAAACQgAAAASEAMAOwoAACa+EAgD1xADA7wEAAAAtgQAAAAgEAMDvAQAAAANBAAAABUQAwO8BP///+sEAAAADQgAAAACEAMAOw4AAAAAAAAAABAEAocEIxvf/wQAAAAgC4AGAQf/jL3/EAMAOw4/8AAAAAAAABAEAocEKU3v/wQAAAAgC4AGAQf/pd7/C4DhJOIAPv+Mvf8W/4y+/y7/jb7/Jv+Nv/8a/46//z7/jsD/B/+PwP8+/4/B/xL/j8L/Mv+Qwv8m/5DD/xr/kcP/Ov+RxP8K/5LE/z7/ksX/Ev+Sxv8y/5PG/yL/k8f/Hv+Ux/86/5TI/wr/lcj/Pv+Vyf8O/5XK/zb/lsr/Iv+Wy/8e/5fL/zb/l8z/Dv+YzP8+/5jN/w7/mM7/Nv+Zzv8e/5nP/yL/ms//Nv+a0P8O/5vQ/z7/m9H/Cv+b0v86/5zS/x7/nNP/Iv+d0/8y/53U/xL/ntT/Pv+e1f8K/57W/zr/n9b/Gv+f1/8m/6DX/zL/oNj/Ev+h2P8+/6HZ/wf/odr/Pv+i2v8a/6Lb/yb/o9v/Lv+j3P8W/6Tc/z7/pN3/B/+l3v8DAwEBAQEBEAMAOwYMc2hhZG93T2Zmc2V0EAMDvAQAAAADBAAAAAMQAwA7BgtzaGFkb3dDb2xvchAFAtoEAAAAAAQAAAAgC4AGAQdSAAABBAAAAFIBEAMAOwoAACZeEAQMLRAEAocEIxvf/wQAAAAgC4AGAQf/jL3/CgAAQK8EAAAAAQEBEAMAOwYNY2xpcFN1Ym1vcnBocwIBEAMAOwoAAC4YEAMFdhARAVQKAAAmsgoAAC4zAwQAAAAACgAALlgKAAAuTQQAAAAACgAALlgGC3RvcFRvQm90dG9tCgAALk0DAwoAAC5YCgAALk0EAAAAAAQ/////ARADADsGDWhhc0Ryb3BTaGFkb3cCEAMAOwYLY29ybmVyU3R5bGUGB3JvdW5kZWQQAwA7CgAAJpEKAABA9CENDQ=='! !!TDemoSpring class methodsFor: 'compiler' stamp: 'ar 10/20/2004 13:45'!compilerClass	^TDemoCompiler! !!TDemoSpring class methodsFor: 'compiler' stamp: 'ar 10/20/2004 13:45'!parserClass	^TDemoParser! !----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoParser.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:40:34 pm'!!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:26'!<> anObject	^self ~= anObject! !!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:27'!increaseBy: anObject	^self += anObject! !!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:27'!multiplyBy: anObject	^self *= anObject! !!B3DFloatArray methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:29'!reset	"Make me zero"	1 to: self basicSize do:[:i| self basicAt: i put: 0].! !!TDemoMass methodsFor: 'compute' stamp: 'ar 10/20/2004 14:13'!computeTest mass <> 0	Yes		t <- 0.02. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239! !!TDemoSpring methodsFor: 'accessing' stamp: 'ar 10/20/2004 14:16'!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 3 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bc234234234FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bc234234234FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234! !!TMass class methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:38'!new	^TDemoMass basicNew! !!TSpring class methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:38'!new	^TDemoSpring basicNew! !----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoFlag.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:40:34 pm'!!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:26' prior: 34397151!<> anObject	^self ~= anObject! !!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:27' prior: 34397249!increaseBy: anObject	^self += anObject! !!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:27' prior: 34397356!multiplyBy: anObject	^self *= anObject! !!B3DFloatArray methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:29' prior: 34397470!reset	"Make me zero"	1 to: self basicSize do:[:i| self basicAt: i put: 0].! !!TDemoMass methodsFor: 'compute' stamp: 'ar 10/20/2004 14:13' prior: 34397613!computeTest mass <> 0	Yes		t <- 0.02. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc239255239,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc239255239! !!TDemoSpring methodsFor: 'accessing' stamp: 'ar 10/20/2004 14:16' prior: 34399055!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 3 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bc234234234FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1bFBitstreamVeraSans#12.0,f1bc234234234FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c234255234! !!TMass class methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:38' prior: 34400259!new	^TDemoMass basicNew! !!TSpring class methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:38' prior: 34400358!new	^TDemoSpring basicNew! !----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoFlag.cs----!----SNAPSHOT----#(20 October 2004 3:20:26 pm) Croquet0.1-107-FlagAndreas.image priorSource: 788712!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:59 pm'!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:53 pm'!----End fileIn of a stream----!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:25' prior: 34401177!computeTest mass <> 0	Yes		t <- 0.02. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.3. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 10 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:25' prior: 34404536!computeTest mass <> 0	Yes		t <- 0.02. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.7. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 10 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:25' prior: 34406001!computeTest mass <> 0	Yes		t <- 0.02. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.9. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 10 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:26' prior: 34407466!computeTest mass <> 0	Yes		t <- 0.02. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:26' prior: 34408931!computeTest mass <> 0	Yes		t <- 0.01. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:26' prior: 34410398!computeTest mass <> 0	Yes		t <- 0.31. 								"scale factor"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force reset 										"reset force"!]style[(49 1 12 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 29 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc238255238,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc238255238! !----STARTUP----#(20 October 2004 3:29:33 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-107-FlagAndreas.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:59 pm'!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:53 pm'!----End fileIn of a stream----!!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:32' prior: 34402635!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * 0.8.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 29 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:32' prior: 34413724!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:33' prior: 34414983!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:34' prior: 34416240!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) *0.1.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 28 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:34' prior: 34417497!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) *k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 26 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:34' prior: 34418755!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) *0.001.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:35' prior: 34420011!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) *k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 26 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:38' prior: 34421271!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) *-1000.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:38' prior: 34422527!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) *-2000.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:41' prior: 34423787!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.						"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 27 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:41' prior: 34425047!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -1500.						"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 31 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:41' prior: 34426264!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -1000.						"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 31 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:41' prior: 34427485!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -500.						"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !----STARTUP----#(20 October 2004 3:42:23 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-107-FlagAndreas.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:53 pm'!----End fileIn of a stream----!!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:42' prior: 34402635!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -1000.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 31 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:43' prior: 34430189!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -2000.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 31 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:45' prior: 34431450!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -500.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/20/2004 15:45' prior: 34432711!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -500.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !----STARTUP----#(21 October 2004 12:02:45 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-107-FlagAndreas.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #107] on 20 October 2004 at 3:19:21 pm'!"Change Set:		PrimitiveProfileDate:			20 October 2004Author:			Andreas RaabTake statistics on the number of primitives and vertices we're throwing into the graphics pipe."!B3DHardwareEngine subclass: #OpenGL	instanceVariableNames: 'glExt extensions frontFace currentPortal maxPortalDepth changeTexture test timeStamp textureManager fontManager glListRegistry instance isMirror inPortal3D openDisplayList camera forceWire numVtx numPrims '	classVariableNames: 'InstalledOpenGLLibrary '	poolDictionaries: 'OpenGLConstants GLExtConstants '	category: 'Croquet-OpenGL'!!OpenGL methodsFor: 'accessing' stamp: 'ar 10/20/2004 15:00'!numPrims	^numPrims! !!OpenGL methodsFor: 'accessing' stamp: 'ar 10/20/2004 14:57'!numVtx	^numVtx! !!OpenGL methodsFor: 'rendering' stamp: 'ar 10/20/2004 15:01' prior: 29489618!drawIndexedQuads: faces vertices: vertices normals: vtxNormals colors: vtxColors texCoords: vtxTexCoords	numVtx := numVtx + vertices size.	numPrims := numPrims + (faces size // 4).	^self drawIndexed: (forceWire ifTrue:[GLLineStrip] ifFalse:[GLQuads]) faces: faces vertices: vertices normals: vtxNormals colors: vtxColors texCoords: vtxTexCoords! !!OpenGL methodsFor: 'rendering' stamp: 'ar 10/20/2004 15:00' prior: 29490284!drawIndexedTriangles: faces vertices: vertices normals: vtxNormals colors: vtxColors texCoords: vtxTexCoords	numVtx := numVtx + vertices size.	numPrims := numPrims + (faces size // 3).	^self drawIndexed: (forceWire ifTrue:[GLLineStrip] ifFalse:[GLTriangles]) faces: faces vertices: vertices normals: vtxNormals colors: vtxColors texCoords: vtxTexCoords! !!OpenGL methodsFor: 'initialize' stamp: 'ar 10/20/2004 15:00' prior: 29495672!beginFrame	numVtx := numPrims := 0.	textureManager beginFrame.	self glPixelStorei: GLUnpackAlignment with: 4.! !!TeapotMorph methodsFor: 'accessing' stamp: 'ar 10/20/2004 14:59'!showPrimitiveStats	"Answer whether to display texture statistics"	^self valueOfProperty: #showPrimitiveStats ifAbsent:[false]! !!TeapotMorph methodsFor: 'accessing' stamp: 'ar 10/20/2004 14:59'!showPrimitiveStats: aBool	"Indicate whether to display primitive statistics"	^self setProperty: #showPrimitiveStats toValue: aBool! !!TeapotMorph methodsFor: 'menu' stamp: 'ar 10/20/2004 15:05' prior: 33714332!addCustomMenuItems: aMenu hand: aHand	super addCustomMenuItems: aMenu hand: aHand.	aMenu add: 'Connect' action: #openConnectionDialog.	aMenu addUpdating: #showFrameRateString action: #toggleFrameRate.	aMenu addUpdating: #showPrimitiveStatsString action: #togglePrimitiveStats.	aMenu addUpdating: #showTextureStatsString action: #toggleTextureStats.	aMenu addUpdating: #transmitStuffString action: #toggleTransmit.	aMenu add: 'start pda server' action: #startPDAServer.	aMenu add: 'make new space' action: #makeNewSpace.	aMenu add: 'toggle full screen' action: #toggleFullScreen.! !!TeapotMorph methodsFor: 'menu' stamp: 'ar 10/20/2004 15:05'!showPrimitiveStatsString	^(self showPrimitiveStats ifTrue:['<on>'] ifFalse:['<off>']), 'show primitive stats'! !!TeapotMorph methodsFor: 'menu' stamp: 'ar 10/20/2004 15:01'!togglePrimitiveStats	self showPrimitiveStats: self showPrimitiveStats not! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/20/2004 15:04' prior: 52866762!glRenderMorphicOverlayOn: aRenderer 	|  box |	self tweakWorld ifNotNil:[self glRenderTweakOn: aRenderer].	box := 0@0 extent: self extent.	self glRenderSubmorphsOn: ogl.	activeCamera isChatting ifTrue:[		ogl drawString: activeCamera chatStatus 			at: box topLeft font: nil color: Color orange align: #topLeft.	].	statusString ifNotNil:[		ogl drawString: statusString 			at: box bottomLeft font: nil color: Color orange.	].	self fpsMorph ifNotNil:[		ogl drawString: self fpsMorph contents 			at: box topRight font: nil color: Color orange align: #topRight.	].	self showPrimitiveStats ifTrue:[		ogl drawString: 				ogl numVtx asStringWithCommas,' vtx	/	',				ogl numPrims asStringWithCommas,' prims'			at: box topRight + (-1@15) font: nil color: Color orange align: #topRight.	].	self showTextureStats ifTrue:[		| mgr offset |		offset _ 0@15.		mgr := ogl textureManager.		{			'Max: ', mgr memUsed asStringWithCommas.			'Now: ', mgr memFrame asStringWithCommas.			'Active Textures: ', mgr numTexturesUsed asStringWithCommas.			'Textures bound: ', mgr numTexturesBound asStringWithCommas.			'Textures reused: ', mgr numTexturesReused asStringWithCommas.		} do:[:string|			ogl drawString: string at: box topLeft  + offset font: nil color: Color orange align: #topLeft.			offset _ offset + (0@15).		].	].false ifTrue:[	ogl glColor4f: 0 with: 0 with: 0 with: 1.	ogl		glBegin: GLQuads;			glVertex2f: box left with: box top;			glVertex2f: box right with: box top;			glVertex2f: box right with: box top + 1;			glVertex2f: box left with: box top + 1;			glVertex2f: box left with: box bottom-1;			glVertex2f: box right with: box bottom-1;			glVertex2f: box right with: box bottom;			glVertex2f: box left with: box bottom;		glEnd.	box := box bottomLeft rect: box bottomRight - (1@100).	ogl 		glEnable: GLBlend;		glBlendFunc: GLSrcAlpha with: GLOneMinusSrcAlpha;		glColor4f: 0.0 with: 0.0 with: 0.0 with: 0.5;		glLineWidth: 1;		glBegin: GLLineLoop;			glVertex2f: box left with: box bottom;			glVertex2f: box left with: box top;			glVertex2f: box right with: box top;			glVertex2f: box right with: box bottom;		glEnd;		glColor4f: 1.0 with: 1.0 with: 1.0 with: 0.5;		glBegin: GLQuads;			glVertex2f: box left + 1 with: box bottom - 1;			glVertex2f: box left + 1 with: box top + 1;			glVertex2f: box right - 1 with: box top + 1;			glVertex2f: box right - 1 with: box bottom - 1;		glEnd;		glDisable: GLBlend;	yourself.]."	#(topLeft topCenter topRight	leftCenter center rightCenter	bottomLeft bottomCenter bottomRight) do:[:sym|		pos := box perform: sym.		ogl drawString: sym at: pos font: nil color: Color black align: sym.	]."! !OpenGL removeSelector: #numTris!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #108] on 20 October 2004 at 6:06:17 pm'!"Change Set:		FixMinSizeDate:			20 October 2004Author:			Andreas RaabFix problem when teapot gets too small."!!TeapotMorph methodsFor: 'accessing' stamp: 'ar 10/20/2004 18:05'!extent: aPoint	^super extent: (aPoint max: 32@32)! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #108] on 20 October 2004 at 6:11:41 pm'!"Change Set:		FixRenderBoundsDate:			20 October 2004Author:			Andreas RaabFixes an issue with rendering a partially extruding teapot morph."!!TeapotMorph methodsFor: 'drawing' stamp: 'ar 10/20/2004 18:11' prior: 52848780!drawAcceleratedOn: aCanvas 	| myRect |	myRect _ bounds.	(ogl notNil and: [ogl isAccelerated]) ifFalse: [		ogl ifNotNil:[ogl destroy. ogl _ nil].	].	ogl ifNotNil: [ogl _ ogl bufferRect: myRect].	ogl ifNil: [		ogl _ OpenGL newIn: myRect.		ogl ifNil: [^self drawSimulatedOn: aCanvas].		ogl glEnable: GLTexture2d.	] ifNotNil: [		ogl reset.		ogl glEnable: GLDepthTest.	].	ogl viewportOffset: aCanvas origin.	ogl clipRect: aCanvas clipRect.	self renderOn: ogl.	Display addExtraRegion: myRect for: self! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #104] on 21 October 2004 at 12:01:33 am'!"Change Set:		SpeedDate:			21 October 2004Author:			David A. SmithThis fixes a bug with the TQuadTree, where all of the frames dropped into it were duplicated because of a side effect call to #reinstall. This can't happen anymore. Also, sped up the waterfall."!TParticle subclass: #TParticleTxtr	instanceVariableNames: 'textures pTexture rectangle texture '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!TFrame subclass: #TQuadTree	instanceVariableNames: 'quadCenter quadSize quadCorner inBox outBox radius center spheres depth qtTL qtTR qtBL qtBR boundSphere quadOn inReinstall '	classVariableNames: ''	poolDictionaries: 'OpenGLConstants '	category: 'Croquet-Objects'!!Object methodsFor: 'testing' stamp: 'das 10/20/2004 09:39'!showStack: depth"#showStack: will printout the current state of the stack from the caller's point on up. It does not include this call. This is useful when you want to see where a method is being called from dynamically, but don't want to (or simply can't) halt. DAS"| context |context _ thisContext.Transcript cr; show:'-------stack-------'.depth timesRepeat:[	Transcript cr.	context _ context sender.	context printOn:Transcript.	].Transcript flush.! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 10/20/2004 09:00' prior: 33758238!initializeDefaultSpace	| space tframe |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space.""	texture _ TTexture				new initializeWithFileName: 'flag.bmp'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe.""	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	self makeSpreadSheet: space.	"self makeStartupLink: space."	self makeDungeon: space.	^space! !!TParticleTxtr methodsFor: 'initialize' stamp: 'das 10/20/2004 09:29' prior: 52066714!addTexture: txtr	texture _ txtr.	rectangle _ TRectangle new extent: txtr extent."	pTexture ifNil:[ textures _ OrderedCollection new.					pTexture _ OrderedCollection ofSize: size.					1 to: size do:[:index | pTexture at: index put: txtr.].					].	textures add: txtr."! !!TParticleTxtr methodsFor: 'render' stamp: 'das 10/20/2004 09:31' prior: 52068043!doRenderColor: ogl	| secs mat yaw lt |	pLifetime -= deltaTime.	secs _ deltaTime/1000.0.	secs _ secs min: 0.1.	pPosition += (pVelocity * secs).	pVelocity += (pAcceleration * secs).	pColor -= (pDeltaColor*deltaTime).	mat := B3DMatrix4x4 identity.	material enable: ogl.	texture enable: ogl.	billBoard ifTrue:[		yaw _ self globalYaw - ogl camera globalYaw.		mat rotationAroundY: yaw negated.		].	1 to: size do:[:index |"		pt _ pTexture at: index."		mat translation: (pPosition at: index).		ogl glPushMatrix. 		ogl glMultMatrixf: mat transposed. 		ogl glColor4fv: (pColor at: index).		rectangle render: ogl.		ogl glPopMatrix.				(pLifetime at: index) < 0.0 ifTrue:[			lt _ lifetimeRange atRandom asFloat.			pLifetime at: index put: lt.			pPosition at: index put: (positionRange atRandom: 1000).			pVelocity at: index put: (velocityRange atRandom: 1000).			pAcceleration at: index put: (accelerationRange atRandom: 1000).		"	pTexture at: index put: (textures atRandom)."			pColor at: index put: startColor.			pDeltaColor at: index put: startColor-endColor/lt.			].		].	texture disable: ogl.	material disable: ogl.! !!TQuadTree methodsFor: 'accessing' stamp: 'das 10/20/2004 23:36'!size	| ttl |	ttl _ 0.	ttl _ spheres ifNil:[0] ifNotNil:[spheres size].	ttl _ ttl + (qtTL ifNil:[0] ifNotNil:[qtTL size]).	ttl _ ttl + (qtTR ifNil:[0] ifNotNil:[qtTR size]).	ttl _ ttl + (qtBL ifNil:[0] ifNotNil:[qtBL size]).	ttl _ ttl + (qtBR ifNil:[0] ifNotNil:[qtBR size]).	^ ttl.! !!TQuadTree methodsFor: 'initialize' stamp: 'das 10/20/2004 23:52' prior: 52132407!initializeWithSpace: space frame: frame	self quadOn: true.	space addChild: self.	self addChild: frame.	frame objectOwner: self.	frameChildren do:[ :fc | fc frameChanged.].	inReinstall _ false.	self reinstall.! !!TQuadTree methodsFor: 'initialize' stamp: 'das 10/20/2004 23:52' prior: 52133320!reinstall	| frame rad ext |	inReinstall ifTrue:[^ self]. "don't recurse"	inReinstall _ true.	frame _ frameChildren at: 1.	rad _ frame octreeRadius.	inBox _ frame octreeBox.	outBox _ TBox new.	quadCenter _ inBox center.	qtTL_ nil.	qtTR_ nil.	qtBL_ nil.	qtBR_ nil.	spheres _ nil."----- size is 1/2 of the length of a quadtree side. -----"	ext _ inBox extent.	quadSize _ ext x > ext z ifTrue:[ ext x ] ifFalse:[ext z].	"size _ size > ext y ifTrue:[ size ] ifFalse:[ext y]. don't need for quadtrees"	quadSize _ quadSize/2.0.	quadSize < rad ifTrue:[ quadSize _ rad.].	quadCorner _ quadCenter - quadSize.	radius _ 0.0.	depth _ 5.	self visible: false.	frameChildren do:[ :fc |			fc octreeSieve: self.].	boundSphere _ TBoundSphere localPosition: outBox center radius: outBox diagonal/2.0.	boundSphere frame: self.	inReinstall _ false.! !!TRectangle methodsFor: 'render' stamp: 'das 10/20/2004 08:54' prior: 52168294!renderPrimitive: ogl	| dx dy uv x y z |	dx _ self extent x/2.0.	dy _ self extent y/2.0.	x _ location x.	y _ location y.	z _ location z.	ogl glBegin: GLQuads.	texture ifNotNil:[ uv _ texture uvScale.]	ifNil:[uv_ 1.0@1.0.].	flip ifFalse:[ 		ogl glNormal3f: 0.0 with: 0.0 with: 1.0;			glTexCoord2f:0.0 with: 0.0;	"1"			glVertex3f:  x - dx with: y + dy with: z;			glTexCoord2f:0.0 with: uv y;	"2"			glVertex3f: x - dx with: y - dy with:z;			glTexCoord2f:uv x with: uv y;	"3"			glVertex3f: x + dx with: y - dy with: z;			glTexCoord2f:uv x with:0.0;	"4"			glVertex3f: x + dx with: y + dy with: z.]	ifTrue:[		ogl glNormal3f: 0.0 with: 0.0 with: -1.0;			glTexCoord2f:uv x with:0.0;	"4"			glVertex3f: x + dx with: y + dy with: z;			glTexCoord2f:uv x with:uv y;	"3"			glVertex3f: x + dx with: y - dy with: z;			glTexCoord2f:0.0 with:uv y;	"2"			glVertex3f: x - dx with: y - dy with:z;			glTexCoord2f:0.0 with: 0.0;	"1"			glVertex3f: x - dx with: y + dy with: z.].	ogl	glEnd.! !TParticle subclass: #TParticleTxtr	instanceVariableNames: 'textures texture pTexture rectangle '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #111] on 20 October 2004 at 10:57:46 pm'!"Change Set:		FollowDriveStepDate:			20 October 2004Author:			Andreas RaabDo driveStep as first part of followAvatar so that in 1st person view we don't see portions of the avatar"!!TUserCamera methodsFor: 'transform' stamp: 'ar 10/20/2004 22:55' prior: 52528483!followAvatar	| at ct trans bt weight |	avatar driving ifTrue:[avatar meta driveStep].	thirdPerson ~= 0.0 ifTrue:[		at_ avatar globalTransform.		ct _ self localTransform.		weight := 1.0 / (thirdPersonLag max: 1).		trans _ B3DMatrix4x4 identity. 		trans translation: (B3DVector3 x:0.0 y:0.7 z: 4)*thirdPerson.		bt _ at composeWith: trans. "This is the target position of the camera"		trans _ ct translation + ((bt translation - ct translation) * weight)."at translation ~= ct translation ifTrue:[		self lookAt:at translation up: (B3DVector3 x:0 y:1 z:0) * thirdPerson.].self translation: trans."		currentSpace _ avatar root.		at _ at asQuaternion.		ct _ ct asQuaternion.		ct_ct slerpTo: at at: weight.		self localTransform: (ct asMatrix4x4 translation:trans).	]ifFalse:[		currentSpace _ avatar root.		self localTransform: avatar globalTransform.	].	pointer cameraTransform: self localTransform.	thirdPersonDelta ~=0 ifTrue:[		thirdPerson _ thirdPerson + thirdPersonDelta.		thirdPerson <= 0.0 ifTrue:[thirdPersonDelta _ 0. thirdPerson _ 0.0.].		thirdPerson >=1.0 ifTrue:[ thirdPersonDelta _ 0. thirdPerson _ 1.0].	].! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #112] on 20 October 2004 at 11:04:43 pm'!"Change Set:		StartTeapotTweakDate:			21 October 2004Author:			Takashi YamamiyaI'd like to start Teapot without parts bin like;SampleTeapotMorph new bounds: (10@10 extent: 320@240); openInWorld"!!TeapotMorph methodsFor: 'initialization' stamp: 'ar 10/20/2004 23:03'!openInWorld	"SampleTeapotMorph new bounds: (10@10 extent: 320@240); openInWorld"	super openInWorld.	World doOneCycleNow.	self removeProperty: #openTeaFileOnDrop.	self requestInitialSpace! !!TeapotMorph class methodsFor: 'instance creation' stamp: 'tak 10/21/2004 11:45' prior: 52900219!startFullScreen	"TeapotMorph startFullScreen"	| tm |	Display fullScreenMode: true.	Display newDepth: Display depth.	DisplayScreen checkForNewScreenSize.	Project current flapsSuppressed: true.	World doOneCycleNow.	tm _ self new bounds: World bounds.	tm openInWorld! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #113] on 21 October 2004 at 1:27:35 am'!"Change Set:		TeaTimeRestartDate:			21 October 2004Author:			Andreas RaabFixes problems when restarting images that have been asleep for a long time."!!T3Body methodsFor: 'stepping' stamp: 'ar 10/21/2004 01:24' prior: 51494503!stepAt: currentTime	| trans rot msecs delta secs count |	msecs _ stepRemainder + ((currentTime - self lastStepTime) asFloat * speed).	stepRemainder _ msecs \\ 50.	count _ msecs // 50 min: 1000 max: 0.	count timesRepeat:[		secs _ 0.05.		earthRot _ earthRot+(25.0*secs).		trans _ earth translation.		rot _ B3DMatrix4x4 identity rotationAroundY: earthRot.		earth localTransform: (tilt composeWith: rot).		earth localTransform: rot.		earthFrame localTransform: rot.		earth translation: trans.		earthFrame translation: trans.		delta _ earth globalPosition - moon globalPosition.			moonVelocity _ moonVelocity + (delta normalized *  (secs * (earthGravity mass/1000) * (moonGravity mass/1000)/  (delta dot: delta))).		moon translation: moon translation + (secs * moonVelocity).		thirdBody doStep.	].! !!TeaMessage methodsFor: 'accessing' stamp: 'ar 10/20/2004 00:25'!teaTime: aTeaTime	teaTime := aTeaTime! !!TeapotMorph methodsFor: 'step' stamp: 'ar 10/20/2004 00:36' prior: 33684560!checkMessages	| msg now last delta |	"First, control overflow or image restart"	now _ TeaTime now.	last _ self valueOfProperty: #lastStepTime ifAbsent:[now].	self setProperty: #lastStepTime toValue: now.	delta := now - last.	(delta < 0 or:[delta > 30000]) ifTrue:[		"adjust queue's tea times based on last time"		mutex critical:[messageList do:[:each| each teaTime: each teaTime + delta]]].	"Now, release messages"	mutex critical:[		[messageList size > 0 ifTrue:[				msg _ messageList at:1. 				msg teaTime < now ifTrue:[					msg delayedSend. true.] ifFalse:[false]]ifFalse:[false]]		whileTrue:[ messageList removeFirst ].	].! !!TeapotMorph methodsFor: 'step' stamp: 'ar 10/20/2004 00:22' prior: 33838236!step	self checkMessages.	ogl ifNil:[		self accelerationEnabled ifTrue:[self changed].		^nil].	self fpsMorph ifNotNil:[self fpsMorph step].	pdaClient ifNotNil:[self updatePDAClient].	self changed.	loader ifNotNil:[		loader stepFor: 100.		statusString := loader currentUrl.		statusString ifNotNil:[statusString := 'Loading ', statusString,'...'].		loader isDone ifTrue:[loader := nil. statusString := nil].	].	"NOTE: When tweakWorld is present its scheduler is aliased to my scheduler.	All script activity is then run from there."	self tweakWorld ifNil:[		self scriptScheduler ifNotNilDo:[:scheduler| scheduler runActiveScripts].	] ifNotNil:[		self runTweakCycle.	]."	activeCamera avatar meta driveStep.""	activeCamera avatar meta localTransform: activeCamera avatar localTransform."! !"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #114] on 21 October 2004 at 1:40:28 pm'!"Change Set:		cleanup0111-bfDate:			21 October 2004Author:			Bert FreudenbergUpdate 0111 introduced Object>>showStack:. This is a more robust version of it using #stackOfSize: which does some sanity checks. Also marks the method as belonging to Croquet by moving it to the '*Croquet-debugging' category ('testing' in Squeak does *not* refer to debugging or tests, but to boolean queries)."!!Object methodsFor: '*Croquet-debugging' stamp: 'bf 10/21/2004 11:53' prior: 34443508!showStack: depth"#showStack: will printout the current state of the stack from the caller's point on up. It does not include this call. This is useful when you want to see where a method is being called from dynamically, but don't want to (or simply can't) halt. DAS"Transcript cr; show:'-------stack-------'.(thisContext sender stackOfSize: depth)	do: [:context |  Transcript cr; print: context].Transcript flush.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #115] on 21 October 2004 at 11:20:07 am'!"Change Set:		FixOverlayRenderDate:			21 October 2004Author:			Andreas RaabFix problem with overlay rendering color, clean up some of the status string reports and remove some stub methods from texture manager."!!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/21/2004 11:17'!glRenderStatsOn: aRenderer 	|  box |	box := 0@0 extent: self extent.	activeCamera isChatting ifTrue:[		ogl drawString: activeCamera chatStatus 			at: box topLeft font: nil color: Color orange align: #topLeft.	].	statusString ifNotNil:[		ogl drawString: statusString 			at: box bottomLeft font: nil color: Color orange.	].	self fpsMorph ifNotNil:[		ogl drawString: self fpsMorph contents 			at: box topRight font: nil color: Color orange align: #topRight.	].	self showPrimitiveStats ifTrue:[		ogl drawString: 				ogl numVtx asStringWithCommas,' vtx	/	',				ogl numPrims asStringWithCommas,' prims'			at: box topRight + (-1@15) font: nil color: Color orange align: #topRight.	].	self showTextureStats ifTrue:[		| mgr offset |		offset _ 0@15.		mgr := ogl textureManager.		{			'Max: ', mgr memUsed asStringWithCommas.			'Now: ', mgr memFrame asStringWithCommas.		} do:[:string|			ogl drawString: string at: box topLeft  + offset font: nil color: Color orange align: #topLeft.			offset _ offset + (0@15).		].	].false ifTrue:[	ogl glColor4f: 0 with: 0 with: 0 with: 1.	ogl		glBegin: GLQuads;			glVertex2f: box left with: box top;			glVertex2f: box right with: box top;			glVertex2f: box right with: box top + 1;			glVertex2f: box left with: box top + 1;			glVertex2f: box left with: box bottom-1;			glVertex2f: box right with: box bottom-1;			glVertex2f: box right with: box bottom;			glVertex2f: box left with: box bottom;		glEnd.	box := box bottomLeft rect: box bottomRight - (1@100).	ogl 		glEnable: GLBlend;		glBlendFunc: GLSrcAlpha with: GLOneMinusSrcAlpha;		glColor4f: 0.0 with: 0.0 with: 0.0 with: 0.5;		glLineWidth: 1;		glBegin: GLLineLoop;			glVertex2f: box left with: box bottom;			glVertex2f: box left with: box top;			glVertex2f: box right with: box top;			glVertex2f: box right with: box bottom;		glEnd;		glColor4f: 1.0 with: 1.0 with: 1.0 with: 0.5;		glBegin: GLQuads;			glVertex2f: box left + 1 with: box bottom - 1;			glVertex2f: box left + 1 with: box top + 1;			glVertex2f: box right - 1 with: box top + 1;			glVertex2f: box right - 1 with: box bottom - 1;		glEnd;		glDisable: GLBlend;	yourself.]."	#(topLeft topCenter topRight	leftCenter center rightCenter	bottomLeft bottomCenter bottomRight) do:[:sym|		pos := box perform: sym.		ogl drawString: sym at: pos font: nil color: Color black align: sym.	]."! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/21/2004 11:11' prior: 33873278!glRenderSubmorphsOn: aRenderer 	aRenderer glColor4f: 1.0 with: 1.0 with: 1.0 with: 1.0.	submorphs reverseDo:[:aMorph|		self glRenderMorph: aMorph on: aRenderer.	].! !!TeapotMorph methodsFor: 'rendering' stamp: 'ar 10/21/2004 11:12' prior: 33873600!renderOverlay: ogl	"Set up gl to provide overlay drawing - this is done in pixel coordinates"	ogl glDisable: GLLighting.	ogl beginMorphicOverlay: bounds.	"Display Tweak world"	self tweakWorld ifNotNil:[self glRenderTweakOn: ogl].	"Display stats and such"	self glRenderStatsOn: ogl.	"Display morphs"	self glRenderSubmorphsOn: ogl.	"self glRenderForegroundMorphsOn: ogl."	self glCleanupMorphCache: ogl.	ogl endMorphicOverlay.	CroquetGlobals snapshots do:[ :ss | ss glRenderOn: ogl].	ogl glEnable: GLLighting.! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 10/16/2004 14:08' prior: 34444064!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space."	texture _ TTexture				new initializeWithFileName: 'flag.bmp'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@1@5.	space addChild: tframe."	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	"self makeStartupLink: space."	^space! !TeapotMorph removeSelector: #glRenderMorphicOverlayOn:!TeapotMorph removeSelector: #glRenderMorphicOverlayOn:!OGLTextureManager removeSelector: #numTexturesBound!OGLTextureManager removeSelector: #numTexturesBound!OGLTextureManager removeSelector: #numTexturesReused!OGLTextureManager removeSelector: #numTexturesReused!OGLTextureManager removeSelector: #numTexturesUsed!OGLTextureManager removeSelector: #numTexturesUsed!----End fileIn of a stream----!----SNAPSHOT----#(21 October 2004 12:03:16 pm) Croquet0.1-116-FlagAndreas.image priorSource: 849656!----STARTUP----#(21 October 2004 12:03:40 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-116-FlagAndreas.image!'From Squeak3.2alpha of 16 November 2001 [latest update: #4599] on 26 February 2002 at 11:16:40 am'!----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\Content\gallery3.mesh----!----STARTUP----#(21 October 2004 3:46:27 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-116-FlagAndreas.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #116] on 21 October 2004 at 3:19:08 pm'!Compiler subclass: #TDemoCompiler	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TuringDemo'!TMass subclass: #TDemoMass	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!Parser subclass: #TDemoParser	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TuringDemo'!TSpring subclass: #TDemoSpring	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!!TDemoCompiler methodsFor: 'as yet unclassified' stamp: 'ar 10/19/2004 17:34' prior: 34343952!translate: aStream noPattern: noPattern ifFail: failBlock	| tree |	tree _ 		TDemoParser new			parse: aStream			class: class			noPattern: noPattern			context: context			notifying: requestor			ifFail: [^ failBlock value].	^ tree! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 15:18' prior: 34344262!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self meta compile: code.	].! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:47' prior: 34344627!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'MassScriptor.morph') fileInObjectAndCode.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:47' prior: 34344821!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 15:09' prior: 34345029!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	src := self sourceCodeAt: #compute.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.	Scriptor position: morph bottomLeft + (40@-250).! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:40' prior: 34345666!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:00' prior: 34346026!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMDVdIG9uIDIwIE9jdG9iZXIgMjAwNCBhdCAyOjAwOjU5IHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA7CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GEVRURm9udERlc2NyaXB0aW9uCAAAABEEAAAAABEKZ2x5cGhUYWJsZREGZ2x5cGhzEQlrZXJuUGFpcnMRCWNvcHlyaWdodBEKZmFtaWx5TmFtZREIZnVsbE5hbWURDXN1YmZhbWlseU5hbWURCnVuaXF1ZU5hbWURC3ZlcnNpb25OYW1lEQ5wb3N0c2NyaXB0TmFtZREJdHJhZGVtYXJrEQZib3VuZHMRCnVuaXRzUGVyRW0RCGFzY2VuZGVyEQlkZXNjZW5kZXIRB2xpbmVHYXAQAwA7BglCeXRlQXJyYXkIAAAAAQQAAAAAARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50EAMAOwYMUGFzdGVVcE1vcnBoCAAAABgEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADihELYm9yZGVyV2lkdGgRC2JvcmRlckNvbG9yEQlwcmVzZW50ZXIRBW1vZGVsEQZjdXJzb3IRB3BhZGRpbmcRD2JhY2tncm91bmRNb3JwaBEQdHVydGxlVHJhaWxzRm9ybREJdHVydGxlUGVuERNsYXN0VHVydGxlUG9zaXRpb25zEQppc1BhcnRzQmluEQ5hdXRvTGluZUxheW91dBEOaW5kaWNhdGVDdXJzb3IRC3Jlc2l6ZVRvRml0ERN3YW50c01vdXNlT3ZlckhhbG9zEQp3b3JsZFN0YXRlEQpncmlkZGluZ09uEAMAOwYGQml0bWFwCAAAAAEEAAAAABADADsGC1RhYmxlTGF5b3V0CAAAAAMEAAAAABEKcHJvcGVydGllcxEObWluRXh0ZW50Q2FjaGUQAwA7BgxUZXh0RW1waGFzaXMIAAAAAwQAAAAAEQxlbXBoYXNpc0NvZGURB3NldE1vZGUQAwA7BhJJZGVudGl0eURpY3Rpb25hcnkIAAAAAwQAAAAACgAAA6gKAAADrxADADsGCFJ1bkFycmF5CAAAAAYEAAAAABEEcnVucxEGdmFsdWVzEQlsYXN0SW5kZXgRB2xhc3RSdW4RCmxhc3RPZmZzZXQQAwA7BgZTeW1ib2wIAAAAAQQAAAAAEAMAOwYRVGV4dEZvbnRSZWZlcmVuY2UIAAAAAwQAAAAAEQpmb250TnVtYmVyEQRmb250EAMAOwYQTGF5b3V0UHJvcGVydGllcwgAAAAEBAAAAAAKAAABdQoAAAGACgAAAYsQAwA7BgZOdW1iZXIIAAAAAQQAAAAAEAMAOwYHVFRDRm9udAgAAAAGBAAAAAERDnR0Y0Rlc2NyaXB0aW9uEQlwb2ludFNpemURD2ZvcmVncm91bmRDb2xvchEFY2FjaGURC2Rlcml2YXRpdmVzARADADsGDEVsbGlwc2VNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDAQEBEAMAOwYLU2tldGNoTW9ycGgIAAAADAQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQxvcmlnaW5hbEZvcm0RDXJvdGF0aW9uU3R5bGURCnNjYWxlUG9pbnQRDWZyYW1lc1RvRHdlbGwRC3JvdGF0ZWRGb3JtEAMAOwYNVGV4dEF0dHJpYnV0ZQgAAAABBAAAAAABEAMAOwYGU3RyaW5nCAAAAAEEAAAAABADADsGFExhcmdlUG9zaXRpdmVJbnRlZ2VyCAAAAAEEAAAAABADADsGDURpc3BsYXlNZWRpdW0IAAAAAQQAAAAAARADADsGDEFic3RyYWN0Rm9udAgAAAABBAAAAAABEAMAOwYNRGlzcGxheU9iamVjdAgAAAABBAAAAAABEAMAOwYOTW9ycGhFeHRlbnNpb24IAAAADAQAAAAAEQZsb2NrZWQRB3Zpc2libGURBnN0aWNreRELYmFsbG9vblRleHQRE2JhbGxvb25UZXh0U2VsZWN0b3IRDGV4dGVybmFsTmFtZREMaXNQYXJ0c0Rvbm9yEQphY3RvclN0YXRlEQZwbGF5ZXIRDGV2ZW50SGFuZGxlchEPb3RoZXJQcm9wZXJ0aWVzAQEBEAMAOwYJVGV4dE1vcnBoCAAAABQEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADigoAAAR2CgAABIMRCXRleHRTdHlsZREEdGV4dBEId3JhcEZsYWcRCXBhcmFncmFwaBEGZWRpdG9yEQljb250YWluZXIRC3ByZWRlY2Vzc29yEQlzdWNjZXNzb3IRC2xhc3RHZXN0dXJlEQ9iYWNrZ3JvdW5kQ29sb3IRB21hcmdpbnMQAwA7Bg5SZWN0YW5nbGVNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDEAMAOwYWU2VxdWVuY2VhYmxlQ29sbGVjdGlvbggAAAABBAAAAAAQAwA7Bg5UZXh0Rm9udENoYW5nZQgAAAACBAAAAAAKAAAGhRADADsGDUJvcmRlcmVkTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgwEBAQEBEAMAOwYJRGlza1Byb3h5CAAAAAUEAAAAABEQZ2xvYmFsT2JqZWN0TmFtZRELcHJlU2VsZWN0b3IRE2NvbnN0cnVjdG9yU2VsZWN0b3IRD2NvbnN0cnVjdG9yQXJncxADADsGCVRleHRTdHlsZQgAAAANBAAAAAARCWZvbnRBcnJheREOZm9udEZhbWlseVNpemURCGxpbmVHcmlkEQhiYXNlbGluZREJYWxpZ25tZW50EQtmaXJzdEluZGVudBEKcmVzdEluZGVudBELcmlnaHRJbmRlbnQRCXRhYnNBcnJheREPbWFyZ2luVGFic0FycmF5EQdsZWFkaW5nERBkZWZhdWx0Rm9udEluZGV4EAMAOwYRT3JpZW50ZWRGaWxsU3R5bGUIAAAABAQAAAAACgAAA/QKAAAD/AoAAAQHAQEBARADADsGBEZvcm0IAAAABgQAAAAAEQRiaXRzEQV3aWR0aBEGaGVpZ2h0EQVkZXB0aBEGb2Zmc2V0EAMAOwYKU3RyaWtlRm9udAgAAAATBAAAAAARE2NoYXJhY3RlclRvR2x5cGhNYXARBnhUYWJsZREGZ2x5cGhzEQRuYW1lEQR0eXBlEQhtaW5Bc2NpaREIbWF4QXNjaWkRCG1heFdpZHRoEQxzdHJpa2VMZW5ndGgRBmFzY2VudBEHZGVzY2VudBEHeE9mZnNldBEGcmFzdGVyEQlzdWJzY3JpcHQRC3N1cGVyc2NyaXB0EQhlbXBoYXNpcxEPZGVyaXZhdGl2ZUZvbnRzEQlwb2ludFNpemUQAwA7BgxTaW1wbGVCb3JkZXIIAAAABAQAAAAAEQliYXNlQ29sb3IRBWNvbG9yEQV3aWR0aBADADsGCUxvb2t1cEtleQgAAAACBAAAAAARA2tleQEBAQEQAwA7BhFBcnJheWVkQ29sbGVjdGlvbggAAAABBAAAAAABAQEBEAMAOwYJUmVjdGFuZ2xl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AAAZAAc8AAAAFQAHPAAAABkAFv/v//cK/tLg2SL/7//3D/7g7+f+s7+5/tLg2SL/7//3D/7g7+f+s7+5/tLg2RL/7//3M/7g7+f+s7+5/tLg2f/v//f+0uDZ/rO/uf7g7+f+s7+5/gICAv41ODb+s7+5/tLg2Sb/7//3GQAK/wAAAT0ADw8AAAA/AAAAHgAAAD0AHv+oqKgZABb/+Ph4Cv8AAAgH/4CAQBL/+Ph4IQAnPAAAAPwAAADDAAAA6gAAAFoAAAAeAAAA+QAAAOEAAAD8AAAACjwAAAAn/AAAAPkAAAD8AAAA6gAAAEsAAAAAAAAASwAAAPwAAAD5AAAACvwAAAATPAAAAEsAAAD8AAAA+QAAAAr8AAAABzwAAAARAAr/7//3C/7g7+f+X2ViDv4CAgIP/rbCvP7g7+f+X2ViCv4CAgJz/gUFBf6MlZD/7//3/rbCvP4CAgL+NTg2/hMUFP4CAgL+X2Vi/kBEQv4CAgL+ExQU/rbCvP/v//f+tsK8/gICAv41ODb+ExQU/gICAv44Ozn/7//3/rbCvP4CAgL+foaC/+//9/5+hoL+AgIC/rbCvBL+AgICH/5+hoL+4O/n/l9lYv4CAgL+BQUF/hYXF/6os60O/+//9xkAEv8AAAEZAAsPAAAAmQAAAAr8AAAAK/kAAABpAAAAAAAAADwAAAD8AAAAxgAAANsAAAD8AAAA1QAAAA8AAAApACv/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKioEQAW//j4eA//GBgQ/xAQCP+IiEAS//j4eCEAGzwAAAD8AAAAtAAAAHgAAADSAAAAlgAAAAq0AAAAV/wAAAA8AAAADwAAAC0AAAAAAAAAPAAAAPwAAAC0AAAAAAAAAHgAAAD2AAAAHgAAAAAAAAA/AAAADwAAAHgAAAD2AAAAHgAAAAAAAAA/AAAADwAAABEACv/v//cP/mJoZf4CAgL+X2ViCv7E0cqT/tLg2f5iaGX+AgIC/m10cP62wrz+MjU0/gUFBf7E0cr+tsK8/gICAv5DR0X+tsK8/jU4Nv4CAgL+bXRw/oyVkP4CAgL+foaC/+//9/62wrz+AgIC/jU4Nv62wrz+X2Vi/gICAv6MlZD+tsK8/gICAv5+hoL/7//3/n6Ggv4CAgL+tsK8/+//9/4CAgL+RkpICv/v//cb/mJoZf4CAgL+jJWQ/+//9/41ODb+HB0cDv/v//cZABb/AAABFQA7lgAAAPwAAACKAAAAPAAAAMkAAAD5AAAALQAAADwAAAD8AAAAxgAAADwAAACoAAAA/AAAADwAAAAlADL/qKioDQAW//j4eA//QEAY/yAgEP+YmEgS//j4eCEAEzwAAAD8AAAAtAAAAB4AAAAK/AAAAA9aAAAAtAAAAPwAAAAKPAAAAAfqAAAADvwAAAAP4QAAAAAAAABLAAAACvwAAAATzAAAAJkAAAAPAAAASwAAAAr8AAAAD8wAAACZAAAADwAAABEACv/v//cP/kZKSP4CAgL+tsK8Dv/v//eP/kZKSP4CAgL+tsK8/+//9/6MlZD+AgIC/qizrf62wrz+AgIC/n6Ggv/v//f+RkpI/gICAv62wrz+4O/n/gICAv5GSkj/7//3/rbCvP4CAgL+foaC/+//9/7E0cr+AgIC/nB3c/62wrz+AgIC/n6Ggv/v//f+cHdz/gICAv62wrz/7//3/gICAv5GSkgK/+//9wf+RkpIEv4CAgIL/ggICP7S4NkK/+//9xkAGv8AAAERADu0AAAA/AAAADwAAAAAAAAAaQAAAPwAAABLAAAAPAAAAPwAAAB4AAAAAAAAAHgAAAD8AAAAeAAAACEAQ/+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKio/6CgoAAAAAAW//j4eA//YGAw/zAwGP+oqFAS//j4eCEAQzwAAAD8AAAAtAAAAAAAAACWAAAA0gAAAAAAAAC0AAAA/AAAADwAAAC0AAAA/AAAAEsAAAAPAAAA6gAAAPAAAAAJAC8eAAAAPwAAAKsAAAD8AAAASwAAAAAAAAAeAAAAPwAAAKsAAAD8AAAASwAAABEACv/v//cP/lRZVv4CAgL+qLOtDv/v//cb/lRZVv4CAgL+qLOt/+//9/5iaGX+AgICCv62wrxv/gICAv5+hoL/7//3/kZKSP4CAgL+tsK8/+//9/4CAgL+RkpI/+//9/62wrz+AgIC/nB3c//v//f+mqSf/gICAv5+hoL+tsK8/gICAv5wd3P/7//3/kZKSP4CAgL+tsK8/+//9/4CAgL+RkpICv/v//cP/lRZVv4CAgL+tsK8Gv/v//cZABr/AAABEQAbpQAAAPwAAABLAAAAAAAAAJYAAAD8AAAACjwAAAAb/AAAAHgAAAAA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AAgEAAAAABADA7wEAAAABwQAAAABEAMDvAQAAAAHBAAAAAMQAwO8BAAAAAYEAAAABBADA7wEAAAABQQAAAAFEAMDvAQAAAAEBAAAAAYQAwO8BAAAAAMEAAAABxADA7wEAAAAAQQAAAAHEAMDvAQAAAAABAAAAAgQAwO8BP////8EAAAABxADA7wE/////QQAAAAHEAMDvAT////8BAAAAAYQAwO8BP////sEAAAABRADA7wE////+gQAAAAEEAMDvAT////5BAAAAAMQAwO8BP////kEAAAAARADA7wE////+AQAAAAAEAMDvAT////5BP////8QAwO8BP////kE/////RADA7wE////+gT////8EAMDvAT////7BP////sQAwO8BP////wE////+hADA7wE/////QT////5EAMDvAT/////BP////kEAAAAAAEBARAUCVkPAqIrHbLDCgAAKToIAAAAAAEQBAKHBAAAAAAEAAAAIAuABgEH/wAAARAMCK4DAgMBAREEQ29kZQMBAQEQAwXgBAAAAAIIAAAABBADADsKAAAg+RAEBpsKAAAhDwoAACiGAwEBEAMAOwoAACEmEAQChwQ9b5vGBAAAACALgAYBB//1+fEEAAAAAAoAACvaEA0LSQgAAAAEEAUK6woAAAxlAQYbZmFtaWx5TmFtZTpzaXplOmVtcGhhc2l6ZWQ6CAAAAAMRB05ld1lvcmsEAAAADAQAAAAAEAUK6woAAAxlAQoAACxpCAAAAAMRB05ld1lvcmsEAAAADwQAAAAAEAUK6woAAAxlAQoAACxpCAAAAAMRB05ld1lvcmsEAAAAFQQAAAAAEAUK6woAAAxlAQoAACxpCAAAAAMRB05ld1lvcmsEAAAAGgQAAAAAAQQAAAAOBAAAAAwEAAAAAAQAAAAABAAAAAAEAAAAABAFCusGDVRleHRDb25zdGFudHMBBgNhdDoIAAAAAQYQRGVmYXVsdFRhYnNBcnJheRAFCusKAAAtNgEKAAAtRggAAAABBhZEZWZhdWx0TWFyZ2luVGFic0FycmF5BAAAAAIEAAAAARADDeERwAABPw1UZXN0IG1hc3MgPD4gMA0JWWVzDQkJdCA8LSAwLjAzLiAJCQkJCQkJCSJzY2FsZSBmYWN0b3IiDQkJYWNjZWwgPC0gbWFzcyAqIGZvcmNlLiAJCQkJCSJjb21wdXRlIGFjY2VsZXJhdGlvbiINCQl2ZWxvY2l0eSBpbmNyZWFzZUJ5OiAwLjkgKiBhY2NlbCAqIHQuCQkiaW5jcmVhc2UgdmVsb2NpdHkiDQkJdmVsb2NpdHkgbXVsdGlwbHlCeTogMC45OTUuIAkJCQkiZGFtcCB2ZWxvY2l0eSINCQlsb2NhdGlvbiBpbmNyZWFzZUJ5OiB2ZWxvY2l0eSAqIHQuCSAJImNoYW5nZSBsb2NhdGlvbiINCUVuZC4NZm9yY2UgcmVzZXQgCQkJCQkJCQkJCSJyZXNldCBmb3JjZSIQBgYMCAAAAB4EAAAAKgQAAAABBAAAAAwEAAAAAQQAAAAfBAAAAAEEAAAAFAQAAAABBAAAABYEAAAAAQQAAAATBAAAAAEEAAAAEQQAAAABBAAAABYEAAAAAQQAAAAMBAAAAAEEAAAADQQAAAABBAAAABYEAAAAAQQAAAARBAAAAAEEAAAADwQAAAABBAAAAB0EAAAAAQQAAAALBAAAAAEIAAAAHggAAAADEAIKfgQAAAABEAMGaAEQBgbgEAUK6woAAABIAQYRZGVzY3JpcHRpb25OYW1lZDoIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACRAEAocEAAAAAAQAAAAgC4AGAQf/AAABEAIOAwgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQgAAAAEEAYG4BAFCusKAAAASAEKAAAvpQgAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAK9oQAg4DCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARAGBuAQBQrrCgAAAEgBCgAAL6UIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAACvaEAIOAwgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEQBgbgEAUK6woAAABIAQoAAC+lCAAAAAEREUJpdHN0cmVhbVZlcmFTYW5zBAAAAAkQBAKHBAAAAAAEAAAAIAuABgEH/wAAARACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARADBa0EAAAAAQIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAACAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQgAAAADEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAgIIAAAABBACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAECEAIDKxAEAocEPK//ygEBCAAAAAMQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAggAAAAEEAIKfgQAAAABEAMGaAEKAAAvlxADBa0EAAAAAQIQAgMrEAQChwQ8r//KAQEIAAAAAxACCn4EAAAAARADBmgBCgAAL5cQAwWtBAAAAAICCAAAAAQQAgp+BAAAAAEQAwZoAQoAAC+XEAMFrQQAAAABAhACAysQBAKHBDyv/8oBAQQAAAACBAAAAAEEAAAAAQIBAQEBAQEQBAKHBDvf//8BAQEBEAUC2gQnPnP/AQEEAAAAABAMCK4DAgMBAREKUmVjdGFuZ2xlMwMBAQEQAwXgBAAAAAQIAAAABgEBEAMAOwoAAChrEAMFdhARAVQKAAAhDwoAACiGAwQAAAAACgAAKKsKAAAooAQAAAAACgAAKKsKAAAotAoAACigAwMKAAAoqwoAACigBAAAAAAEP////xADA7wEAAAAFgQAAACJEAMAOwoAACDGEAQNPAEKAAAo+AQAAAABEAMAOwoAACEmCgAAObIQAwA7CgAAIPkKAAA5+AQAAAAACgAAKPgBEAQChwQmLOf/AQEQDAiuAwIDAQERDE1hc3NTY3JpcHRvcgMBAQEQAwXgBAAAAAkIAAAAEhADADsKAAAoaxADBXYQEQFUCgAAIRoKAAAohgMEAAAAAAoAACirCgAAKKAEAAAAAAoAACirBgt0b3BUb0JvdHRvbQoAACigAwMKAAAoqwoAACigBAAAAAAEP////wEBAQEBARADADsGDHNoYWRvd09mZnNldBADA7wEAAAAAwQAAAADEAMAOwYLc2hhZG93Q29sb3IQBQLaBAAAAAAEAAAAIAuABgEHVgAAAQQAAABWARADADsKAAAgxhAEDTwQBAKHBCMb3/8EAAAAIAuABgEH/4y9/woAADt/BAAAAAEBARADADsGDWNsaXBTdWJtb3JwaHMCARADADsGC2Nvcm5lclN0eWxlBgdyb3VuZGVkEAMAOwYNaGFzRHJvcFNoYWRvdwIQAwA7CgAAISYQCAPXEAMDvAQAAABUBAAAAhwQAwO8BAAAAA0EAAAAFRADA7wE////6wQAAAANCAAAAAIQAwA7DgAAAAAAAAAAEAQChwQjG9//BAAAACALgAYBB/+Mvf8QAwA7Dj/wAAAAAAAAEAQChwQpTe//BAAAACALgAYBB/+l3v8LgOEk4gA+/4y9/xb/jL7/Lv+Nvv8m/42//xr/jr//Pv+OwP8H/4/A/z7/j8H/Ev+Pwv8y/5DC/yb/kMP/Gv+Rw/86/5HE/wr/ksT/Pv+Sxf8S/5LG/zL/k8b/Iv+Tx/8e/5TH/zr/lMj/Cv+VyP8+/5XJ/w7/lcr/Nv+Wyv8i/5bL/x7/l8v/Nv+XzP8O/5jM/z7/mM3/Dv+Yzv82/5nO/x7/mc//Iv+az/82/5rQ/w7/m9D/Pv+b0f8K/5vS/zr/nNL/Hv+c0/8i/53T/zL/ndT/Ev+e1P8+/57V/wr/ntb/Ov+f1v8a/5/X/yb/oNf/Mv+g2P8S/6HY/z7/odn/B/+h2v8+/6La/xr/otv/Jv+j2/8u/6Pc/xb/pNz/Pv+k3f8H/6Xe/wMDEAMAOwoAACD5CgAAOs4hDQ0='! !!TDemoMass class methodsFor: 'parser' stamp: 'ar 10/20/2004 13:38' prior: 34367648!compilerClass	^TDemoCompiler! !!TDemoMass class methodsFor: 'parser' stamp: 'ar 10/20/2004 13:38' prior: 34367749!parserClass	^TDemoParser! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01' prior: 34367843!blockUntil: stopCondition varNodes: variableNodes inner: innerBlock	"Parse statements in a block until stopCondition is met"	| stmts returns start more blockComment temporaryBlockVariables |	start _ prevMark + requestorOffset.	temporaryBlockVariables _ self temporaryBlockVariables.	stmts _ OrderedCollection new.	"give initial comment to block, since others trail statements"	blockComment _ currentComment.	currentComment _ nil.	returns _ false.	more := true.	[more and:[stopCondition value not]] whileTrue:[		start _ self startOfNextToken.		(returns _ self matchAnswer) ifTrue:[			self addComment.			stmts addLast: (parseNode isReturningIf					ifTrue: [parseNode]					ifFalse: [ReturnNode new							expr: parseNode							encoder: encoder							sourceRange: (start to: self endOfLastToken)]).		] ifFalse:[			self expression ifTrue:[				self addComment.				stmts addLast: parseNode			] ifFalse:[				self addComment.				stmts size = 0 ifTrue:[					stmts addLast: (encoder encodeVariable:'nil')				]			]		].		self match: #period.		hereType == #doIt ifTrue:[more := false].	].	more ifFalse:[^false].	parseNode _ BlockNode new				arguments: variableNodes				statements: stmts				returns: returns				from: encoder.	parseNode comment: blockComment.	parseNode temporaries: temporaryBlockVariables.	encoder noteSourceRange: (self endOfLastToken to: self endOfLastToken) forNode: parseNode.	"The scope of the parameters and temporary block variables is no longer active."	temporaryBlockVariables do: [:variable | variable scope: -1].	variableNodes do: [:variable | variable scope: -1].	^ true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:56' prior: 34369544!expression	here = 'Test' ifTrue:[^self testYesNo].	^super expression! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01' prior: 34369683!innerBlock: varNodes until: stopCondition	"Parse statements in a block until stopCondition is met"	^self blockUntil: stopCondition varNodes: varNodes inner: true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01' prior: 34369915!matchAnswer	"Parse a return statement"	(self matchToken: 'return') ifTrue:[		parseNode := encoder encodeVariable: 'nil'.		^true].	((self matchToken: 'answer') or:[self match: #upArrow]) ifTrue:[		self expression ifFalse:[^self expected: 'expression to return'].		^true].	^false! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:17' prior: 34370269!testYesNo	| start condition trueBlock selector args |	start _ self startOfNextToken.	self advance.	self expression ifFalse:[self expected: 'Condition'].	condition := parseNode.	here = 'Yes' ifFalse:[^self expected: 'Yes'].	self advance.	(self innerBlock: #() until:[here = 'No' or:[here = 'End']]) 		ifFalse:[^self expected: 'end (if) or No'].	trueBlock := parseNode.	here = 'No' ifTrue:[		self advance.		(self innerBlock: #() until:[here = 'end']) 			ifFalse:[^self expected: 'end (if)'].		failBlock := parseNode.		selector := #ifTrue:ifFalse:.		args := {trueBlock. failBlock}.	] ifFalse:[		selector := #ifTrue:.		args := {trueBlock}.	].	self advance.	parseNode := MessageNode new		receiver: condition		selector: selector		arguments: args		precedence: 3		from: encoder		sourceRange: (start to: self endOfLastToken).	^true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:21' prior: 34371191!variable	| varName varStart varEnd |	varStart _ self startOfNextToken + requestorOffset.	varName _ self advance.	varEnd _ self endOfLastToken + requestorOffset.	^ encoder encodeVariable: varName		sourceRange: (varStart to: varEnd)		ifUnknown: [encoder bindTemp: varName]! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:45' prior: 34371538!xBinary	super xBinary.	(token = '<' and:[hereChar = $-]) ifTrue:[		token _ (token , (String with: self step)) asSymbol.		tokenType := #leftArrow.	].! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:59' prior: 34371760!xLetter	super xLetter.	tokenType == #word ifTrue:[		token = 'Yes' ifTrue:[tokenType := #yes].		token = 'No' ifTrue:[tokenType := #no].		token = 'End' ifTrue:[tokenType := #end].	].! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 15:19' prior: 34372022!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute:.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self meta compile: code.	].! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:44' prior: 34372390!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'SpringScriptor.morph') fileInObjectAndCode.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:44' prior: 34372588!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 15:10' prior: 34372798!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	src := self sourceCodeAt: #compute:.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.	Scriptor position: morph topLeft + (140@50).! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:42' prior: 34373437!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 14:00' prior: 34373799!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMDVdIG9uIDIwIE9jdG9iZXIgMjAwNCBhdCAyOjAwOjUzIHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA7CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GCUJ5dGVBcnJheQgAAAABBAAAAAAQAwA7BhFUVEZvbnREZXNjcmlwdGlvbggAAAARBAAAAAARCmdseXBoVGFibGURBmdseXBocxEJa2VyblBhaXJzEQljb3B5cmlnaHQRCmZhbWlseU5hbWURCGZ1bGxOYW1lEQ1zdWJmYW1pbHlOYW1lEQp1bmlxdWVOYW1lEQt2ZXJzaW9uTmFtZREOcG9zdHNjcmlwdE5hbWURCXRyYWRlbWFyaxEGYm91bmRzEQp1bml0c1BlckVtEQhhc2NlbmRlchEJZGVzY2VuZGVyEQdsaW5lR2FwARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50EAMAOwYMUGFzdGVVcE1vcnBoCAAAABgEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADihELYm9yZGVyV2lkdGgRC2JvcmRlckNvbG9yEQlwcmVzZW50ZXIRBW1vZGVsEQZjdXJzb3IRB3BhZGRpbmcRD2JhY2tncm91bmRNb3JwaBEQdHVydGxlVHJhaWxzRm9ybREJdHVydGxlUGVuERNsYXN0VHVydGxlUG9zaXRpb25zEQppc1BhcnRzQmluEQ5hdXRvTGluZUxheW91dBEOaW5kaWNhdGVDdXJzb3IRC3Jlc2l6ZVRvRml0ERN3YW50c01vdXNlT3ZlckhhbG9zEQp3b3JsZFN0YXRlEQpncmlkZGluZ09uEAMAOwYGQml0bWFwCAAAAAEEAAAAABADADsGC1RhYmxlTGF5b3V0CAAAAAMEAAAAABEKcHJvcGVydGllcxEObWluRXh0ZW50Q2FjaGUQAwA7BgxUZXh0RW1waGFzaXMIAAAAAwQAAAAAEQxlbXBoYXNpc0NvZGURB3NldE1vZGUQAwA7BhJJZGVudGl0eURpY3Rpb25hcnkIAAAAAwQAAAAACgAAA6gKAAADrxADADsGCFJ1bkFycmF5CAAAAAYEAAAAABEEcnVucxEGdmFsdWVzEQlsYXN0SW5kZXgRB2xhc3RSdW4RCmxhc3RPZmZzZXQQAwA7BgZTeW1ib2wIAAAAAQQAAAAAEAMAOwYRVGV4dEZvbnRSZWZlcmVuY2UIAAAAAwQAAAAAEQpmb250TnVtYmVyEQRmb250EAMAOwYQTGF5b3V0UHJvcGVydGllcwgAAAAEBAAAAAAKAAABdQoAAAGACgAAAYsQAwA7BgZOdW1iZXIIAAAAAQQAAAAAEAMAOwYHVFRDRm9udAgAAAAGBAAAAAERDnR0Y0Rlc2NyaXB0aW9uEQlwb2ludFNpemURD2ZvcmVncm91bmRDb2xvchEFY2FjaGURC2Rlcml2YXRpdmVzARADADsGDEVsbGlwc2VNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDAQEBEAMAOwYLU2tldGNoTW9ycGgIAAAADAQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQxvcmlnaW5hbEZvcm0RDXJvdGF0aW9uU3R5bGURCnNjYWxlUG9pbnQRDWZyYW1lc1RvRHdlbGwRC3JvdGF0ZWRGb3JtEAMAOwYNVGV4dEF0dHJpYnV0ZQgAAAABBAAAAAABEAMAOwYGU3RyaW5nCAAAAAEEAAAAABADADsGFExhcmdlUG9zaXRpdmVJbnRlZ2VyCAAAAAEEAAAAABADADsGDURpc3BsYXlNZWRpdW0IAAAAAQQAAAAAARADADsGDEFic3RyYWN0Rm9udAgAAAABBAAAAAABEAMAOwYNRGlzcGxheU9iamVjdAgAAAABBAAAAAABEAMAOwYOTW9ycGhFeHRlbnNpb24IAAAADAQAAAAAEQZsb2NrZWQRB3Zpc2libGURBnN0aWNreRELYmFsbG9vblRleHQRE2JhbGxvb25UZXh0U2VsZWN0b3IRDGV4dGVybmFsTmFtZREMaXNQYXJ0c0Rvbm9yEQphY3RvclN0YXRlEQZwbGF5ZXIRDGV2ZW50SGFuZGxlchEPb3RoZXJQcm9wZXJ0aWVzAQEBEAMAOwYOUmVjdGFuZ2xlTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgxADADsGCVRleHRNb3JwaAgAAAAUBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDEQl0ZXh0U3R5bGURBHRleHQRCHdyYXBGbGFnEQlwYXJhZ3JhcGgRBmVkaXRvchEJY29udGFpbmVyEQtwcmVkZWNlc3NvchEJc3VjY2Vzc29yEQtsYXN0R2VzdHVyZREPYmFja2dyb3VuZENvbG9yEQdtYXJnaW5zEAMAOwYWU2VxdWVuY2VhYmxlQ29sbGVjdGlvbggAAAABBAAAAAAQAwA7Bg5UZXh0Rm9udENoYW5nZQgAAAACBAAAAAAKAAAGhRADADsGDUJvcmRlcmVkTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgwEBAQEBEAMAOwYJRGlza1Byb3h5CAAAAAUEAAAAABEQZ2xvYmFsT2JqZWN0TmFtZRELcHJlU2VsZWN0b3IRE2NvbnN0cnVjdG9yU2VsZWN0b3IRD2NvbnN0cnVjdG9yQXJncxADADsGCVRleHRTdHlsZQgAAAANBAAAAAARCWZvbnRBcnJheREOZm9udEZhbWlseVNpemURCGxpbmVHcmlkEQhiYXNlbGluZREJYWxpZ25tZW50EQtmaXJzdEluZGVudBEKcmVzdEluZGVudBELcmlnaHRJbmRlbnQRCXRhYnNBcnJheREPbWFyZ2luVGFic0FycmF5EQdsZWFkaW5nERBkZWZhdWx0Rm9udEluZGV4EAMAOwYRT3JpZW50ZWRGaWxsU3R5bGUIAAAABAQAAAAACgAAA/QKAAAD/AoAAAQHAQEBARADADsGDFNpbXBsZUJvcmRlcggAAAAEBAAAAAARCWJhc2VDb2xvchEFY29sb3IRBXdpZHRoEAMAOwYKU3RyaWtlRm9udAgAAAATBAAAAAARE2NoYXJhY3RlclRvR2x5cGhNYXARBnhUYWJsZREGZ2x5cGhzEQRuYW1lEQR0eXBlEQhtaW5Bc2NpaREIbWF4QXNjaWkRCG1heFdpZHRoEQxzdHJpa2VMZW5ndGgRBmFzY2VudBEHZGVzY2VudBEHeE9mZnNldBEGcmFzdGVyEQlzdWJzY3JpcHQRC3N1cGVyc2NyaXB0EQhlbXBoYXNpcxEPZGVyaXZhdGl2ZUZvbnRzEQlwb2ludFNpemUQAwA7BgRGb3JtCAAAAAYEAAAAABEEYml0cxEFd2lkdGgRBmhlaWdodBEFZGVwdGgRBm9mZnNldBADADsGCUxvb2t1cEtleQgAAAACBAAAAAARA2tleQEBAQEQAwA7BhFBcnJheWVkQ29sbGVjdGlvbggAAAABBAAAAAABAQEBEAMAOwYJUmVjdGFuZ2xl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AAAABAgAAAAGAQEQAwA7BgxsYXlvdXRQb2xpY3kQAwV2EBEBVAoAACanBgpzaHJpbmtXcmFwAwQAAAAABgZjZW50ZXIGBG5vbmUEAAAAAAYHdG9wTGVmdAYLbGVmdFRvUmlnaHQKAAAuTQMDCgAALlgKAAAuTQQAAAAABD////8QAwO8BAAAAVcEAAAAFBADADsKAAAmXhAEDC0BEAQChwQAAAAABAAAACALgAYBB/8AAAEEAAAAARADADsKAAAmvgoAAC3XEAMAOwoAACaRCgAALioEAAAAAAoAAC6lEAkJWRADDbgQAwO8BAAAAHgEAAAALxADA7wEAAACHQ5AYyAAAAAAAAoAABLMCAAAAAIQDw7VDweALwjAQwoAAC7nCgAAJugBEAQChwQ/////BAAAACALgAMBBf8QDAiuAwIDAQEBAwEBARADBeAEAAAAAggAAAAEARADADsKAAAmXhAEDC0BEAQChwQtK0utBAAAACALgAYBB/+0tOsEAAAAAQEQAwA7CgAAJr4KAAAvLwQAAAABCgAAL24BCAAAACAQAwO8BAAAAAAE////+BADA7wEAAAAAQT////5EAMDvAQAAAADBP////kQAwO8BAAAAAQE////+hADA7wEAAAABQT////7EAMDvAQAAAAGBP////wQAwO8BAAAAAcE/////RADA7wEAAAABwT/////EAMDvAQAAAAIBAAAAAAQAwO8BAAAAAcEAAAAARADA7wEAAAABwQAAAADEAMDvAQAAAAGBAAAAAQQAwO8BAAAAAUEAAAABRADA7wEAAAABAQAAAAGEAMDvAQAAAADBAAAAAcQAwO8BAAAAAEEAAAABxADA7wEAAAAAAQAAAAIEAMDvAT/////BAAAAAcQAwO8BP////0EAAAABxADA7wE/////AQAAAAGEAMDvAT////7BAAAAAUQAwO8BP////oEAAAABBADA7wE////+QQAAAADEAMDvAT////5BAAAAAEQAwO8BP////gEAAAAABADA7wE////+QT/////EAMDvAT////5BP////0QAwO8BP////oE/////BADA7wE////+wT////7EAMDvAT////8BP////oQAwO8BP////0E////+RADA7wE/////wT////5BAAAAAABAQEQFAmfDwjALyHQmQoAAC7nCAAAAAABEAQChwQAAAAABAAAACALgAYBB/8AAAEQDAiuAwIDAQERBENvZGUDAQEBEAMF4AQAAAACCAAAAAQQAwA7CgAAJpEQBAabCgAAJqcKAAAuMwMBARADADsKAAAmvhAEAocEPW+bxgQAAAAgC4AGAQf/9fnxBAAAAAAKAAAxhxANC0kIAAAABBAFCusKAAAMYgEGG2ZhbWlseU5hbWU6c2l6ZTplbXBoYXNpemVkOggAAAADEQdOZXdZb3JrBAAAAAwEAAAAABAFCusKAAAMYgEKAAAyFggAAAADEQdOZXdZb3JrBAAAAA8EAAAAABAFCusKAAAMYgEKAAAyFggAAAADEQdOZXdZb3JrBAAAABUEAAAAABAFCusKAAAMYgEKAAAyFggAAAADEQdOZXdZb3JrBAAAABoEAAAAAAEEAAAADgQAAAAMBAAAAAAEAAAAAAQAAAAABAAAAAAQBQrrBg1UZXh0Q29uc3RhbnRzAQYDYXQ6CAAAAAEGEERlZmF1bHRUYWJzQXJyYXkQBQrrCgAAMuMBCgAAMvMIAAAAAQYWRGVmYXVsdE1hcmdpblRhYnNBcnJheQQAAAACBAAAAAEQAw3hEcAAAOINCXYgPC0gbWFzczEgbG9jYXRpb24gLSBtYXNzMiBsb2NhdGlvbi4JImFjdHVhbCBsZW5ndGgiDQluIDwtIHYgbm9ybWFsaXplZCAqIHJlc3QuCQkJCSJyZXN0IGxlbmd0aCINCWYgPC0gKHYgLSBuICkgKiBrLgkJCQkJCQkiY29tcHV0ZSBmb3JjZSINCW1hc3MxIGFkZEZvcmNlOmYuCQkJCQkJImFkZCB0byBtYXNzMSINCW1hc3MyIGFkZEZvcmNlOmYgbmVnYXRlZC4JCQkJImFuZCB0byBtYXNzMiINEAYGDAgAAAAZBAAAAAIEAAAAJgQAAAABBAAAAA0EAAAAAQQAAAAfBAAAAAEEAAAACwQAAAABBAAAABsEAAAAAQQAAAANBAAAAAEEAAAAEAQAAAABBAAAAAgEAAAAAQQAAAAMBAAAAAEEAAAAEAQAAAABBAAAAA4EAAAAAQQAAAAMBAAAAAIIAAAAGQgAAAACEAIKfgQAAAABEAMGaAEQBgbgEAUK6woAAABhAQYRZGVzY3JpcHRpb25OYW1lZDoIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAADGHEAIOAwgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQgAAAAEEAYG4AoAADTSBAAAAAkQBAKHBDwv/8IBARACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYG4AoAADTSBAAAAAkKAAAxhxACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYG4AoAADTSBAAAAAkQBAKHBAAAAAAEAAAAEAuABgEHAAEAARACDgMIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQgAAAADEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAwZoAQoAADTOEAIDKxAEAocEPC//wgEBCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAICEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAQIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysQBAKHBDwv/8IBAQgAAAADEAIKfgQAAAABEAMFrQQAAAACAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAwZoAQoAADTOEAIDKxAEAocEPC//wgEBCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAgIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysQBAKHBDwv/8IBAQgAAAADEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAgMrEAQChwQ8LwvCAQEQAwZoAQoAADTOCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAgIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysQBAKHBDwv/8IBAQgAAAADEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4IAAAABBACCn4EAAAAARADBa0EAAAAAQIQAgMrEAQChwQ8LwvCAQEQAwZoAQoAADTOCAAAAAMQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zggAAAAEEAIKfgQAAAABEAMFrQQAAAABAhADBmgBCgAANM4QAgMrEAQChwQ8L//CAQEIAAAAAxACCn4EAAAAARADBa0EAAAAAgIQAwZoAQoAADTOCAAAAAQQAgp+BAAAAAEQAwWtBAAAAAECEAMGaAEKAAA0zhACAysKAAA2LQQAAADhBAAAABkEAAAAAAIBAQEBAQEQBAKHBDvf//8BAQEBEAUC2gQ9b5vGAQEEAAAAABAMCK4DAgMBAREKUmVjdGFuZ2xlMwMBAQEQAwXgBAAAAAQIAAAABgEBEAMAOwoAAC4YEAMFdhARAVQKAAAmpwoAAC4zAwQAAAAACgAALlgKAAAuTQQAAAAACgAALlgKAAAuYQoAAC5NAwMKAAAuWAoAAC5NBAAAAAAEP////xADA7wEAAAAFgQAAABNEAMAOwoAACZeEAQMLQEKAAAupQQAAAABEAMAOwoAACa+CgAAPZAQAwA7CgAAJpEKAAA91gQAAAAACgAALqUBEAQChwQmLOf/AQEQDAiuAwIDAQERDlNwcmluZ1NjcmlwdG9yAwEBARADBeAEAAAACQgAAAASEAMAOwoAACa+EAgD1xADA7wEAAAAtgQAAAAgEAMDvAQAAAANBAAAABUQAwO8BP///+sEAAAADQgAAAACEAMAOw4AAAAAAAAAABAEAocEIxvf/wQAAAAgC4AGAQf/jL3/EAMAOw4/8AAAAAAAABAEAocEKU3v/wQAAAAgC4AGAQf/pd7/C4DhJOIAPv+Mvf8W/4y+/y7/jb7/Jv+Nv/8a/46//z7/jsD/B/+PwP8+/4/B/xL/j8L/Mv+Qwv8m/5DD/xr/kcP/Ov+RxP8K/5LE/z7/ksX/Ev+Sxv8y/5PG/yL/k8f/Hv+Ux/86/5TI/wr/lcj/Pv+Vyf8O/5XK/zb/lsr/Iv+Wy/8e/5fL/zb/l8z/Dv+YzP8+/5jN/w7/mM7/Nv+Zzv8e/5nP/yL/ms//Nv+a0P8O/5vQ/z7/m9H/Cv+b0v86/5zS/x7/nNP/Iv+d0/8y/53U/xL/ntT/Pv+e1f8K/57W/zr/n9b/Gv+f1/8m/6DX/zL/oNj/Ev+h2P8+/6HZ/wf/odr/Pv+i2v8a/6Lb/yb/o9v/Lv+j3P8W/6Tc/z7/pN3/B/+l3v8DAwEBAQEBEAMAOwYMc2hhZG93T2Zmc2V0EAMDvAQAAAADBAAAAAMQAwA7BgtzaGFkb3dDb2xvchAFAtoEAAAAAAQAAAAgC4AGAQdSAAABBAAAAFIBEAMAOwoAACZeEAQMLRAEAocEIxvf/wQAAAAgC4AGAQf/jL3/CgAAQK8EAAAAAQEBEAMAOwYNY2xpcFN1Ym1vcnBocwIBEAMAOwoAAC4YEAMFdhARAVQKAAAmsgoAAC4zAwQAAAAACgAALlgKAAAuTQQAAAAACgAALlgGC3RvcFRvQm90dG9tCgAALk0DAwoAAC5YCgAALk0EAAAAAAQ/////ARADADsGDWhhc0Ryb3BTaGFkb3cCEAMAOwYLY29ybmVyU3R5bGUGB3JvdW5kZWQQAwA7CgAAJpEKAABA9CENDQ=='! !!TDemoSpring class methodsFor: 'compiler' stamp: 'ar 10/20/2004 13:45' prior: 34396768!compilerClass	^TDemoCompiler! !!TDemoSpring class methodsFor: 'compiler' stamp: 'ar 10/20/2004 13:45' prior: 34396873!parserClass	^TDemoParser! !----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoParser1.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:59 pm'!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #105] on 20 October 2004 at 2:00:53 pm'!----End fileIn of a stream----!!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/21/2004 15:49' prior: 34402635!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -1000.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 31 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/21/2004 15:49' prior: 34516569!compute: k	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -500.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(10 1 2 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1bFBitstreamVeraSans#12.0,f1bc239239239FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c239255239! !----STARTUP----#(22 October 2004 4:43:30 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croquet0.1-116-FlagAndreas.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #116] on 21 October 2004 at 4:53:24 pm'!"Change Set:		ProjectSizeFixDate:			21 October 2004Author:			Andreas RaabMake sure project sizes work okay."!!TeapotMorph methodsFor: 'toys' stamp: 'ar 10/21/2004 16:43' prior: 52813275!makeLinkToProject: projName	"import an existing morphic project, creating a window for it in front of the camera"	| win tmorph newWorld proj |	proj := Project named: projName.	tmorph _ TMorphic new initializeOpaque: true extent: proj world extent.	newWorld _ TMorphMonitor new initializeWithWorld: projName extent: tmorph targetExtent.	newWorld eventsTo: tmorph.		win _ activeCamera avatar makeWindowInFront.	win contents: tmorph.	^ win.! !----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #117] on 21 October 2004 at 8:03:11 pm'!"Change Set:		TSpringComputeDate:			21 October 2004Author:			Andreas RaabUse #compute for computation inside TSpring"!!TSpring methodsFor: 'accessing' stamp: 'ar 10/21/2004 19:50'!compute	^self compute: -500.! !!TTapestry methodsFor: 'compute' stamp: 'ar 10/21/2004 19:50' prior: 33845514!compute	true ifTrue:[ self addWind: 0.7.]. "add a wind force"	true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. "set force to the gravity"	true ifTrue:[		springs do:[ :s | s compute. ].		masses do:[ :m | m compute. ].		].		self initBounds.	self future: 20 perform: #compute.! !----End fileIn of a stream----!----SNAPSHOT----#(22 October 2004 4:44 am) Croquet0.1-118-FlagAndreas.image priorSource: 906957!'From Jasmine-rc1 of 7 October 2004 [latest update: #117] on 22 October 2004 at 4:59:55 am'!Compiler subclass: #TDemoCompiler	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TuringDemo'!TMass subclass: #TDemoMass	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!Parser subclass: #TDemoParser	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TuringDemo'!TSpring subclass: #TDemoSpring	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!TWind subclass: #TDemoWind	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs texture tuv normals boundSphere time wire xsize ysize topLeft topRight bottomLeft bottomRight material wind deltaTrans tackPoints '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!!TDemoCompiler methodsFor: 'as yet unclassified' stamp: 'ar 10/19/2004 17:34' prior: 34343952!translate: aStream noPattern: noPattern ifFail: failBlock	| tree |	tree _ 		TDemoParser new			parse: aStream			class: class			noPattern: noPattern			context: context			notifying: requestor			ifFail: [^ failBlock value].	^ tree! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 15:18' prior: 34344262!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self meta compile: code.	].! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:47' prior: 34344627!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'MassScriptor.morph') fileInObjectAndCode.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:47' prior: 34344821!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 19:47'!moveScriptor: evt	| lastMousePos |	evt isMouseUp ifTrue:[		evt hand showTemporaryCursor: nil.		^Scriptor removeProperty: #lastMousePos	].	evt isMouseDown ifTrue:[		Scriptor comeToFront.		evt hand showTemporaryCursor: Cursor normal.		^Scriptor setProperty: #lastMousePos toValue: evt position	].	lastMousePos := Scriptor valueOfProperty: #lastMousePos.	Scriptor setProperty: #lastMousePos toValue: evt position.	Scriptor position: Scriptor position + evt position - lastMousePos.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'das 10/22/2004 01:26' prior: 34345029!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	Scriptor on: #mouseDown send: #moveScriptor: to: self.	Scriptor on: #mouseMove send: #moveScriptor: to: self.	Scriptor on: #mouseUp send: #moveScriptor: to: self.	morph := Scriptor allMorphs detect:[:any| any externalName = 'CloseButton'].	morph on: #click send: #delete to: Scriptor.	src := self sourceCodeAt: #compute.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.	Scriptor position: morph bottomLeft + (40@-250).! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:40' prior: 34345666!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoMass class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 19:41' prior: 34346026!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMTddIG9uIDIxIE9jdG9iZXIgMjAwNCBhdCA3OjQxOjMxIHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA9CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GCUJ5dGVBcnJheQgAAAABBAAAAAAQAwA7BhFUVEZvbnREZXNjcmlwdGlvbggAAAARBAAAAAARCmdseXBoVGFibGURBmdseXBocxEJa2VyblBhaXJzEQljb3B5cmlnaHQRCmZhbWlseU5hbWURCGZ1bGxOYW1lEQ1zdWJmYW1pbHlOYW1lEQp1bmlxdWVOYW1lEQt2ZXJzaW9uTmFtZREOcG9zdHNjcmlwdE5hbWURCXRyYWRlbWFyaxEGYm91bmRzEQp1bml0c1BlckVtEQhhc2NlbmRlchEJZGVzY2VuZGVyEQdsaW5lR2FwARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50EAMAOwYMUGFzdGVVcE1vcnBoCAAAABgEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADihELYm9yZGVyV2lkdGgRC2JvcmRlckNvbG9yEQlwcmVzZW50ZXIRBW1vZGVsEQZjdXJzb3IRB3BhZGRpbmcRD2JhY2tncm91bmRNb3JwaBEQdHVydGxlVHJhaWxzRm9ybREJdHVydGxlUGVuERNsYXN0VHVydGxlUG9zaXRpb25zEQppc1BhcnRzQmluEQ5hdXRvTGluZUxheW91dBEOaW5kaWNhdGVDdXJzb3IRC3Jlc2l6ZVRvRml0ERN3YW50c01vdXNlT3ZlckhhbG9zEQp3b3JsZFN0YXRlEQpncmlkZGluZ09uEAMAOwYGQml0bWFwCAAAAAEEAAAAABADADsGC1RhYmxlTGF5b3V0CAAAAAMEAAAAABEKcHJvcGVydGllcxEObWluRXh0ZW50Q2FjaGUQAwA7BgxUZXh0RW1waGFzaXMIAAAAAwQAAAAAEQxlbXBoYXNpc0NvZGURB3NldE1vZGUQAwA7BhJJZGVudGl0eURpY3Rpb25hcnkIAAAAAwQAAAAACgAAA6gKAAADrxADADsGCFJ1bkFycmF5CAAAAAYEAAAAABEEcnVucxEGdmFsdWVzEQlsYXN0SW5kZXgRB2xhc3RSdW4RCmxhc3RPZmZzZXQQAwA7BgZTeW1ib2wIAAAAAQQAAAAAEAMAOwYRVGV4dEZvbnRSZWZlcmVuY2UIAAAAAwQAAAAAEQpmb250TnVtYmVyEQRmb250EAMAOwYQTGF5b3V0UHJvcGVydGllcwgAAAAEBAAAAAAKAAABdQoAAAGACgAAAYsQAwA7BgZOdW1iZXIIAAAAAQQAAAAAEAMAOwYHVFRDRm9udAgAAAAGBAAAAAERDnR0Y0Rlc2NyaXB0aW9uEQlwb2ludFNpemURD2ZvcmVncm91bmRDb2xvchEFY2FjaGURC2Rlcml2YXRpdmVzARADADsGDEVsbGlwc2VNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDAQEBEAMAOwYLU2tldGNoTW9ycGgIAAAADAQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQxvcmlnaW5hbEZvcm0RDXJvdGF0aW9uU3R5bGURCnNjYWxlUG9pbnQRDWZyYW1lc1RvRHdlbGwRC3JvdGF0ZWRGb3JtEAMAOwYNVGV4dEF0dHJpYnV0ZQgAAAABBAAAAAABEAMAOwYGU3RyaW5nCAAAAAEEAAAAABADADsGC01lc3NhZ2VTZW5kCAAAAAQEAAAAABEIcmVjZWl2ZXIRCHNlbGVjdG9yEQlhcmd1bWVudHMQAwA7BhRMYXJnZVBvc2l0aXZlSW50ZWdlcggAAAABBAAAAAAQAwA7Bg1EaXNwbGF5TWVkaXVtCAAAAAEEAAAAABADADsGDEFic3RyYWN0Rm9udAgAAAABBAAAAAABEAMAOwYNRGlzcGxheU9iamVjdAgAAAABBAAAAAABEAMAOwYOTW9ycGhFeHRlbnNpb24IAAAADAQAAAAAEQZsb2NrZWQRB3Zpc2libGURBnN0aWNreRELYmFsbG9vblRleHQRE2JhbGxvb25UZXh0U2VsZWN0b3IRDGV4dGVybmFsTmFtZREMaXNQYXJ0c0Rvbm9yEQphY3RvclN0YXRlEQZwbGF5ZXIRDGV2ZW50SGFuZGxlchEPb3RoZXJQcm9wZXJ0aWVzAQEBEAMAOwYOUmVjdGFuZ2xlTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgxADADsGCVRleHRNb3JwaAgAAAAUBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDEQl0ZXh0U3R5bGURBHRleHQRCHdyYXBGbGFnEQlwYXJhZ3JhcGgRBmVkaXRvchEJY29udGFpbmVyEQtwcmVkZWNlc3NvchEJc3VjY2Vzc29yEQtsYXN0R2VzdHVyZREPYmFja2dyb3VuZENvbG9yEQdtYXJnaW5zEAMAOwYWU2VxdWVuY2VhYmxlQ29sbGVjdGlvbggAAAABBAAAAAAQAwA7Bg5UZXh0Rm9udENoYW5nZQgAAAACBAAAAAAKAAAGhRADADsGDUJvcmRlcmVkTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKCgAABHYKAAAEgwEBAQEBEAMAOwYJRGlza1Byb3h5CAAAAAUEAAAAABEQZ2xvYmFsT2JqZWN0TmFtZRELcHJlU2VsZWN0b3IRE2NvbnN0cnVjdG9yU2VsZWN0b3IRD2NvbnN0cnVjdG9yQXJncxADADsGCVRleHRTdHlsZQgAAAANBAAAAAARCWZvbnRBcnJheREOZm9udEZhbWlseVNpemURCGxpbmVHcmlkEQhiYXNlbGluZREJYWxpZ25tZW50EQtmaXJzdEluZGVudBEKcmVzdEluZGVudBELcmlnaHRJbmRlbnQRCXRhYnNBcnJheREPbWFyZ2luVGFic0FycmF5EQdsZWFkaW5nERBkZWZhdWx0Rm9udEluZGV4EAMAOwYRT3JpZW50ZWRGaWxsU3R5bGUIAAAABAQAAAAACgAAA/QKAAAD/AoAAAQHEAMAOwYMRXZlbnRIYW5kbGVyCAAAAB8EAAAAABESbW91c2VEb3duUmVjaXBpZW50ERFtb3VzZURvd25TZWxlY3RvchESbW91c2VNb3ZlUmVjaXBpZW50ERFtb3VzZU1vdmVTZWxlY3RvchEXbW91c2VTdGlsbERvd25SZWNpcGllbnQRFm1vdXNlU3RpbGxEb3duU2VsZWN0b3IREG1vdXNlVXBSZWNpcGllbnQRD21vdXNlVXBTZWxlY3RvchETbW91c2VFbnRlclJlY2lwaWVudBESbW91c2VFbnRlclNlbGVjdG9yERNtb3VzZUxlYXZlUmVjaXBpZW50ERJtb3VzZUxlYXZlU2VsZWN0b3IRG21vdXNlRW50ZXJEcmFnZ2luZ1JlY2lwaWVudBEabW91c2VFbnRlckRyYWdnaW5nU2VsZWN0b3IRG21vdXNlTGVhdmVEcmFnZ2luZ1JlY2lwaWVudBEabW91c2VMZWF2ZURyYWdnaW5nU2VsZWN0b3IREmtleVN0cm9rZVJlY2lwaWVudBERa2V5U3Ryb2tlU2VsZWN0b3IRDnZhbHVlUGFyYW1ldGVyERJzdGFydERyYWdSZWNpcGllbnQREXN0YXJ0RHJhZ1NlbGVjdG9yERNkb3VibGVDbGlja1NlbGVjdG9yERRkb3VibGVDbGlja1JlY2lwaWVudBEaZG91YmxlQ2xpY2tUaW1lb3V0U2VsZWN0b3IRG2RvdWJsZUNsaWNrVGltZW91dFJlY2lwaWVudBENY2xpY2tTZWxlY3RvchEOY2xpY2tSZWNpcGllbnQRD2dlc3R1cmVTZWxlY3RvchEQZ2VzdHVyZVJlY2lwaWVudBEXZ2VzdHVyZURpY3Rpb25hcnlPck5hbWUBAQEQAwA7BgxTaW1wbGVCb3JkZXIIAAAABAQAAAAAEQliYXNlQ29sb3IRBWNvbG9yEQV3aWR0aBADADsGBEZvcm0IAAAABgQAAAAAEQRiaXRzEQV3aWR0aBEGaGVpZ2h0EQVkZXB0aBEGb2Zmc2V0EAMAOwYKU3RyaWtlRm9udAgAAAATBAAAAAARE2NoYXJhY3RlclRvR2x5cGhNYXARBnhUYWJsZREGZ2x5cGhzEQRuYW1lEQR0eXBlEQhtaW5Bc2NpaREIbWF4QXNjaWkRCG1heFdpZHRoEQxzdHJpa2VMZW5ndGgRBmFzY2VudBEHZGVzY2VudBEHeE9mZnNldBEGcmFzdGVyEQlzdWJzY3JpcHQRC3N1cGVyc2NyaXB0EQhlbXBoYXNpcxEPZGVyaXZhdGl2ZUZvbnRzEQlwb2ludFNpemUQAwA7BglMb29rdXBLZXkIAAAAAgQAAAAAEQNrZXkBAQEBEAMAOwYRQXJyYXllZENvbGxlY3Rpb24IAAAAAQQAAAAAAQEBARADADsGCVJlY3RhbmdsZQgAAAADBAAAAAARBm9yaWdpbhEGY29ybmVyEAMAOwYEVGV4dAgAAAADBAAAAAARBnN0cmluZxEEcnVucxADADsGCVdlYWtBcnJheQgAAAABBAAAAAAQAwA7BgtQcm90b09iamVjdAgAAAABBAAAAAABEAMAOwYJTWFnbml0dWRlCAAAAAEEAAAAAAEQAwA7BgpDb2xsZWN0aW9uCAAAAAEEAAAAAAEQAwA7BgdJbnRlZ2VyCAAAAAEEAAAAABADADsGBUFycmF5CAAAAAEEAAAAABADADsGA1NldAgAAAADBAAAAAAKAAADqAoAAAOvEAMAOwoAAAA7CAAAAAMEAAAAAAoAABBdEQV2YWx1ZRADADsGElRpY2tJbmRpY2F0b3JNb3JwaAgAAAAPBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAEdgoAAASDEQhzdGVwVGltZREHY29ybmVycxEFaW5kZXgRBXJhbmdlEQlpc1RpY2tpbmcRCGxhc3RUaWNrEQxzdXBlcmNsYXNzZXMQAwAgBAAAAD0IAAAAYBADADsKAAAASAoAABBqEAMAOwoAAABhCgAAAlsBEAMAOwoAAAE4CgAAAlsQAwA7CgAAAVQKAAAGmxADADsKAAACWwoAABDzARADADsKAAACcgoAAAbKEAMAOwoAAAKHCgAAAlsQAwA7CgAAAsAKAAACWwEQAwA7CgAAAtoKAAAChxADADsKAAADEAoAAAJbEAMAOwoAAAMrCgAAB/0BEAMAOwoAAANMCgAAAlsQAwA7CgAAACAKAAARcAEBEAMAOwoAAAO8CgAAAlsQAwA7CgAAA9cKAAAMMhADADsKAAAEQAoAAAraEAMAOwoAAAVgCgAAEGoQAwA7CgAABXYKAAABOBADADsKAAAFrQoAAAf9EAMAOwoAAAXgCgAAACAQAwA7CgAABgwKAAAQahADADsKAAAGUgoAAAgbEAMAOwoAAAZoCgAACrcQAwA7CgAABpsKAAACWxADADsKAAAGygoAABEPEAMAOwoAAAbgCgAACKwBEAMAOwoAAAc4CgAACtoBAQEQAwA7CgAAB38KAAADTBADADsKAAAH/QoAAAJbARADADsKAAAIGwoAABBqEAMAOwoAAAgxCgAAAlsQAwA7CgAACGsKAAARRBADADsKAAAIjwoAAAjJEAMAOwoAAAisCgAAAlsBEAMAOwoAAAjJCgAAAlsBEAMAOwoAAAjnCgAAAlsBAQEQAwA7CgAACZIKAAAK2hADADsKAAAJ2AoAAAmSEAMAOwoAAAqRCgAAESkQAwA7CgAACrcKAAAH/RADADsKAAAK2goAAANMAQEBAQEQAwA7CgAACyQKAAACWxADADsKAAALggoAAAJbEAMAOwoAAAwyCgAAAsAQAwA7CgAADGIKAAACWwEBARADADsKAAAPBAoAAAMQEAMAOwoAAA85CgAACI8QAwA7CgAAD3EKAAAIrBADADsKAAAQSAoAABEPAQEBARADADsKAAAQagoAAAqRAQEBARADADsKAAAQjwoAAAJbEAMAOwoAABC4CgAAEGoQAwA7CgAAENoKAAARWxADADsKAAAQ8xEDbmlsARADADsKAAARDwoAAAJbARADADsKAAARKQoAAAJbARADADsKAAARRAoAAAbKEAMAOwoAABFbCgAAEGoQAwA7CgAAEXAKAAARKRADADsKAAAAOwoAABBIEAMAOwoAABGsCgAABzgQBwNMDxHgsy5RYAo/////CAAAAAIQCQmSDxHwtC5AyAoAABW9CAAAAAMQDAd/DxHwtBwAyAoAABXSCAAAAAABEAQChwQAAAP/BAAAACALgAYBB/8AAP8QDAjnAwIDAQEBAwEBARADBeAEAAAAAwgAAAAFEAMAOwYQZm9yd2FyZERpcmVjdGlvbg4AAAAAAAAAABADADsGC2Jhc2VHcmFwaGljEAYPOQcAAAyb7JQRABL/+Ph44nEAFv/4+HjiKQAH/6ioqCUAB/+oqKgZACL/+Ph4rQDa/+//950AC/+oqKj/oKCgHQAL/6CgoP+oqKgVACb/+Ph4rQDa/+//96EACv+oqKgVAA7/qKioFQAq//j4eKkA2v/v//ehAA//oKCg/6ioqP+goKANAA//oKCg/6ioqP+goKAVABL/+Ph4E//Q0GD/CAgA/wAACP+AgEAO//j4eKkA2v/v//elACL/qKioFQAS//j4eAf/0NBgCv8AAAgH/4CAQA7/+Ph4JQAHPAAAAAr8AAAAB3gAAAAJAAdLAAAACvwAAAAHPAAAAF0Apv/v//cL/j1BP/5wd3Mu/+//96UAI/+oqKj/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCgFQAS//j4eAf/2NhgCv8AAAgH/3h4QBL/+Ph4IQAHPAAAAAr8AAAAE+QAAAAPAAAAAAAAALcAAAAK/AAAAAc8AAAACQALPwAAAA8AAAAZAAc8AAAAFQAHPAAAABkAFv/v//cK/tLg2SL/7//3D/7g7+f+s7+5/tLg2SL/7//3D/7g7+f+s7+5/tLg2RL/7//3M/7g7+f+s7+5/tLg2f/v//f+0uDZ/rO/uf7g7+f+s7+5/gICAv41ODb+s7+5/tLg2Sb/7//3GQAK/wAAAT0ADw8AAAA/AAAAHgAAAD0AHv+oqKgZABb/+Ph4Cv8AAAgH/4CAQBL/+Ph4IQAnPAAAAPwAAADDAAAA6gAAAFoAAAAeAAAA+QAAAOEAAAD8AAAACjwAAAAn/AAAAPkAAAD8AAAA6gAAAEsAAAAAAAAASwAAAPwAAAD5AAAACvwAAAATPAAAAEsAAAD8AAAA+QAAAAr8AAAABzwAAAARAAr/7//3C/7g7+f+X2ViDv4CAgIP/rbCvP7g7+f+X2ViCv4CAgJz/gUFBf6MlZD/7//3/rbCvP4CAgL+NTg2/hMUFP4CAgL+X2Vi/kBEQv4CAgL+ExQU/rbCvP/v//f+tsK8/gICAv41ODb+ExQU/gICAv44Ozn/7//3/rbCvP4CAgL+foaC/+//9/5+hoL+AgIC/rbCvBL+AgICH/5+hoL+4O/n/l9lYv4CAgL+BQUF/hYXF/6os60O/+//9xkAEv8AAAEZAAsPAAAAmQAAAAr8AAAAK/kAAABpAAAAAAAAADwAAAD8AAAAxgAAANsAAAD8AAAA1QAAAA8AAAApACv/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKioEQAW//j4eA//GBgQ/xAQCP+IiEAS//j4eCEAGzwAAAD8AAAAtAAAAHgAAADSAAAAlgAAAAq0AAAAV/wAAAA8AAAADwAAAC0AAAAAAAAAPAAAAPwAAAC0AAAAAAAAAHgAAAD2AAAAHgAAAAAAAAA/AAAADwAAAHgAAAD2AAAAHgAAAAAAAAA/AAAADwAAABEACv/v//cP/mJoZf4CAgL+X2ViCv7E0cqT/tLg2f5iaGX+AgIC/m10cP62wrz+MjU0/gUFBf7E0cr+tsK8/gICAv5DR0X+tsK8/jU4Nv4CAgL+bXRw/oyVkP4CAgL+foaC/+//9/62wrz+AgIC/jU4Nv62wrz+X2Vi/gICAv6MlZD+tsK8/gICAv5+hoL/7//3/n6Ggv4CAgL+tsK8/+//9/4CAgL+RkpICv/v//cb/mJoZf4CAgL+jJWQ/+//9/41ODb+HB0cDv/v//cZABb/AAABFQA7lgAAAPwAAACKAAAAPAAAAMkAAAD5AAAALQAAADwAAAD8AAAAxgAAADwAAACoAAAA/AAAADwAAAAlADL/qKioDQAW//j4eA//QEAY/yAgEP+YmEgS//j4eCEAEzwAAAD8AAAAtAAAAB4AAAAK/AAAAA9aAAAAtAAAAPwAAAAKPAAAAAfqAAAADvwAAAAP4QAAAAAAAABLAAAACvwAAAATzAAAAJkAAAAPAAAASwAAAAr8AAAAD8wAAACZAAAADwAAABEACv/v//cP/kZKSP4CAgL+tsK8Dv/v//eP/kZKSP4CAgL+tsK8/+//9/6MlZD+AgIC/qizrf62wrz+AgIC/n6Ggv/v//f+RkpI/gICAv62wrz+4O/n/gICAv5GSkj/7//3/rbCvP4CAgL+foaC/+//9/7E0cr+AgIC/nB3c/62wrz+AgIC/n6Ggv/v//f+cHdz/gICAv62wrz/7//3/gICAv5GSkgK/+//9wf+RkpIEv4CAgIL/ggICP7S4NkK/+//9xkAGv8AAAERADu0AAAA/AAAADwAAAAAAAAAaQAAAPwAAABLAAAAPAAAAPwAAAB4AAAAAAAAAHgAAAD8AAAAeAAAACEAQ/+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKio/6CgoP+oqKj/oKCg/6ioqP+goKD/qKio/6CgoAAAAAAW//j4eA//YGAw/zAwGP+oqFAS//j4eCEAQzwAAAD8AAAAtAAAAAAAAACWAAAA0gAAAAAAAAC0AAAA/AAAADwAAAC0AAAA/AAAAEsAAAAPAAAA6gAAAPAAAAAJAC8eAAAAPwAAAKsAAAD8AAAASwAAAAAAAAAeAAAAPwAAAKsAAAD8AAAASwAAABEACv/v//cP/lRZVv4CAgL+qLOtDv/v//cb/lRZVv4CAgL+qLOt/+//9/5iaGX+AgICCv62wrxv/gICAv5+hoL/7//3/kZKSP4CAgL+tsK8/+//9/4CAgL+RkpI/+//9/62wrz+AgIC/nB3c//v//f+mqSf/gICAv5+hoL+tsK8/gICAv5wd3P/7//3/kZKSP4CAgL+tsK8/+//9/4CAgL+RkpICv/v//cP/lRZVv4CAgL+tsK8Gv/v//cZABr/AAABEQAbpQAAAPwAAABLAAAAAAAAAJYAAAD8AAAACjwAAAAb/AAAAHgAAAAAAAAAeAAAAPwAAAB4AAAAHQBG/6ioqBb/+Ph4D/94eDj/ODgg/7i4WBL/+Ph4IQAPPAAAAPwAAAC0AAAAEQBbtAAAAPwAAAA8AAAApQAAAPwAAACcAAAAqAAAAOcAAADwAAAAAAAAAHgAAACcAAAAfgAAALoAAAD5AAAALQAAAHgAAACcAAAAfgAAALoAAAD5AAAALQAAABEACv/v//cf/sTRyv4T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5A5AdfAAAAAAAAoAABW9CAAAAAIQDxGsDxHwyBMw3AoAADUXCAAAAAABEAQChwQ/////BAAAACALgAMBBf8QDAjnAwIDAQEBAwEBARADBeAEAAAAAggAAAAEARADADsKAAAjtxAEDwQBEAQChwQtK0utBAAAACALgAYBB/+0tOsEAAAAAQEQAwA7CgAAJBcKAAA1XwQAAAABCgAANZ4BCAAAACAQAwO8BAAAAAAE////+BADA7wEAAAAAQT////5EAMDvAQAAAADBP////kQAwO8BAAAAAQE////+hADA7wEAAAABQT////7EAMDvAQAAAAGBP////wQAwO8BAAAAAcE/////RADA7wEAAAABwT/////EAMDvAQAAAAIBAAAAAAQAwO8BAAAAAcEAAAAARADA7wEAAAABwQAAAADEAMDvAQAAAAGBAAAAAQQAwO8BAAAAAUEAAAABRADA7wEAAAABAQAAAAGEAMDvAQAAAADBAAAAAcQAwO8BAAAAAEEAAAABxADA7wEAAAAAAQAAAAIEAMDvAT/////BAAAAAcQAwO8BP////0EAAAABxADA7wE/////AQAAAAGEAMDvAT////7BAAAAAUQAwO8BP////oEAAAABBADA7wE////+QQAAAADEAMDvAT////5BAAAAAEQAwO8BP////gEAAAAABADA7wE////+QT/////EAMDvAT////5BP////0QAwO8BP////oE/////BADA7wE////+wT////7EAMDvAT////8BP////oQAwO8BP////0E////+RADA7wE/////wT////5BAAAAAABAQEQFAnYDxMwyC5BXwoAADUXCAAAAAABEAQChwQAAAAABAAAACALgAYBB/8AAAEQDAjnAwIDAQERBENvZGUDAQEBEAMF4AQAAAADCAAAAAgQAwA7CgAAI+oQBAabCgAAJAAKAAAzZAMQAwA7BgxhY2NlcHRBY3Rpb24QBAgxEAULJAYJVERlbW9NYXNzAQYIeW91cnNlbGYIAAAAAAYPY29tcGlsZVNjcmlwdG9yCAAAAAABEAMAOwoAACQXEAQChwQ9b5vGBAAAACALgAYBB//1+fEBAQEBBAAAAAAKAAA3txANC4IIAAAABBAFCyQKAAAPcQEGG2ZhbWlseU5hbWU6c2l6ZTplbXBoYXNpemVkOggAAAADEQdOZXdZb3JrBAAAAAwEAAAAABAFCyQKAAAPcQEKAAA4lAgAAAADEQdOZXdZb3JrBAAAAA8EAAAAABAFCyQKAAAPcQEKAAA4lAgAAAADEQdOZXdZb3JrBAAAABUEAAAAABAFCyQKAAAPcQEKAAA4lAgAAAADEQdOZXdZb3JrBAAAABoEAAAAAAEEAAAADgQAAAAMBAAAAAAEAAAAAAQAAAAABAAAAAAQBQskBg1UZXh0Q29uc3RhbnRzAQYDYXQ6CAAAAAEGEERlZmF1bHRUYWJzQXJyYXkQBQskCgAAOWEBCgAAOXEIAAAAAQYWRGVmYXVsdE1hcmdpblRhYnNBcnJheQQAAAACBAAAAAEQAxC4EcAAAT9UZXN0IG1hc3MgPD4gMA0JWWVzDQkJdCA8LSAwLjAyLiAJCQkJCQkJCSJzY2FsZSBmYWN0b3IiDQkJYWNjZWwgPC0gbWFzcyAqIGZvcmNlLiAJCQkJCSJjb21wdXRlIGFjY2VsZXJhdGlvbiINCQl2ZWxvY2l0eSBpbmNyZWFzZUJ5OiAwLjkgKiBhY2NlbCAqIHQuCQkiaW5jcmVhc2UgdmVsb2NpdHkiDQkJdmVsb2NpdHkgbXVsdGlwbHlCeTogMC45OTUuIAkJCQkiZGFtcCB2ZWxvY2l0eSINCQlsb2NhdGlvbiBpbmNyZWFzZUJ5OiB2ZWxvY2l0eSAqIHQuCSAJImNoYW5nZSBsb2NhdGlvbiINCUVuZC4NZm9yY2UgcmVzZXQgCQkJCQkJCQkJCSJyZXNldCBmb3JjZSINEAYGDAgAAAAeBAAAACkEAAAAAQQAAAAMBAAAAAEEAAAAHwQAAAABBAAAABQEAAAAAQQAAAAWBAAAAAEEAAAAEwQAAAABBAAAABEEAAAAAQQAAAAWBAAAAAEEAAAADAQAAAABBAAAAA0EAAAAAQQAAAAWBAAAAAEEAAAAEQQAAAABBAAAAA8EAAAAAQQAAAAdBAAAAAEEAAAACwQAAAACCAAAAB4IAAAAAxACCrcEAAAAARADBmgBEAYG4BAFCyQKAAAAYQEGEWRlc2NyaXB0aW9uTmFtZWQ6CAAAAAEREUJpdHN0cmVhbVZlcmFTYW5zBAAAAAkKAAAz/hACENoIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEIAAAABBAGBuAQBQskCgAAAGEBCgAAO9AIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAADe3EAIQ2ggAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEQBgbgEAULJAoAAABhAQoAADvQCAAAAAEREUJpdHN0cmVhbVZlcmFTYW5zBAAAAAkKAAA3txACENoIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYG4BAFCyQKAAAAYQEKAAA70AgAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAM/4QAhDaCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEQAwWtBAAAAAECCAAAAAQQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAhACAysQBAKHBDvv/74BAQgAAAADEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAgIIAAAABBACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAECEAIDKxAEAocEO+//vgEBCAAAAAMQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAggAAAAEEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIQAgMrEAQChwQ77/++AQEIAAAAAxACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAICCAAAAAQQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAhACAysQBAKHBDvv/74BAQgAAAADEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIIAAAABBACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAECEAIDKxAEAocEO+//vgEBCAAAAAMQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAggAAAAEEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIQAgMrEAQChwQ77/++AQEIAAAAAxACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAICCAAAAAQQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAhACAysQBAKHBDvv/74BAQgAAAADEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIIAAAABBACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAECEAIDKxAEAocEO+//vgEBCAAAAAMQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAggAAAAEEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIQAgMrEAQChwQ77/++AQEIAAAAAxACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAICCAAAAAQQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAhACAysQBAKHBDvv/74BAQgAAAADEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIIAAAABBACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAECEAIDKxAEAocEO+//vgEBCAAAAAMQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAggAAAAEEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIQAgMrEAQChwQ77/++AQEIAAAAAxACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAICCAAAAAQQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAABAhACAysQBAKHBDvv/74BAQgAAAADEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIIAAAABBACCrcEAAAAARADBmgBCgAAO8IQAwWtBAAAAAECEAIDKxAEAocEO+//vgEBCAAAAAMQAgq3BAAAAAEQAwZoAQoAADvCEAMFrQQAAAACAggAAAAEEAIKtwQAAAABEAMGaAEKAAA7whADBa0EAAAAAQIQAgMrEAQChwQ77/++AQEEAAAAEAQAAAABBAAAAA8CAQEBAQEBEAQChwQ73///AQEBARAFAtoEJz5z/wEBBAAAAAAQDAjnAwIDAQERClJlY3RhbmdsZTMDAQEBEAMF4AQAAAAECAAAAAYBARADADsKAAAz2BADBXYQEQFUCgAAJAAKAAAzZAMEAAAAAAoAADOgCgAAM4wEAAAAAAoAADOgCgAAM6kKAAAzjAMDCgAAM6AKAAAzjAQAAAAABD////8QAwO8BAAAABYEAAAAiRADADsKAAAjtxAEDwQBCgAANNUEAAAAARADADsKAAAkFwoAAEW5EAMAOwoAACPqCgAARf8EAAAAAAoAADTVARAEAocEJizn/wEBEAwI5wMCAwEBEQxNYXNzU2NyaXB0b3IDAQEQHwxiCgAAOB0GDW1vdmVTY3JpcHRvcjoKAAA4HQoAAEbCAQEKAAA4HQoAAEbCAQEBAQEBAQEBAQEBAQEBAQEBAQEBARADBeAEAAAACQgAAAAaAQEBAQEBAQEQAwA7CgAAM9gQAwV2EBEBVAoAACQLCgAAM2QDBAAAAAAKAAAzoAoAADOMBAAAAAAKAAAzoAYLdG9wVG9Cb3R0b20KAAAzjAMDCgAAM6AKAAAzjAQAAAAABD////8BEAMAOwYMc2hhZG93T2Zmc2V0EAMDvAQAAAADBAAAAAMBAQEBARADADsKAAAkFxAIA9cQAwO8BAAAAV0EAAAAuRADA7wEAAAADQQAAAAVEAMDvAT////rBAAAAA0IAAAAAhADADsOAAAAAAAAAAAQBAKHBCMb3/8EAAAAIAuABgEH/4y9/xADADsOP/AAAAAAAAAQBAKHBClN7/8EAAAAIAuABgEH/6Xe/wuA4STiAD7/jL3/Fv+Mvv8u/42+/yb/jb//Gv+Ov/8+/47A/wf/j8D/Pv+Pwf8S/4/C/zL/kML/Jv+Qw/8a/5HD/zr/kcT/Cv+SxP8+/5LF/xL/ksb/Mv+Txv8i/5PH/x7/lMf/Ov+UyP8K/5XI/z7/lcn/Dv+Vyv82/5bK/yL/lsv/Hv+Xy/82/5fM/w7/mMz/Pv+Yzf8O/5jO/zb/mc7/Hv+Zz/8i/5rP/zb/mtD/Dv+b0P8+/5vR/wr/m9L/Ov+c0v8e/5zT/yL/ndP/Mv+d1P8S/57U/z7/ntX/Cv+e1v86/5/W/xr/n9f/Jv+g1/8y/6DY/xL/odj/Pv+h2f8H/6Ha/z7/otr/Gv+i2/8m/6Pb/y7/o9z/Fv+k3P8+/6Td/wf/pd7/AwMQAwA7BgtzaGFkb3dDb2xvchAFAtoEAAAAAAQAAAAgC4AGAQdWAAABBAAAAFYQAwA7CgAAI+oKAABHIAEBEAMAOwYNY2xpcFN1Ym1vcnBocwIQAwA7Bg1oYXNEcm9wU2hhZG93AhADADsGC2Nvcm5lclN0eWxlBgdyb3VuZGVkAQEQAwA7CgAAI7cQBA8EEAQChwQjG9//BAAAACALgAYBB/+Mvf8KAABJ0gQAAAABIQ0N'! !!TDemoMass class methodsFor: 'parser' stamp: 'ar 10/20/2004 13:38' prior: 34367648!compilerClass	^TDemoCompiler! !!TDemoMass class methodsFor: 'parser' stamp: 'ar 10/20/2004 13:38' prior: 34367749!parserClass	^TDemoParser! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01' prior: 34367843!blockUntil: stopCondition varNodes: variableNodes inner: innerBlock	"Parse statements in a block until stopCondition is met"	| stmts returns start more blockComment temporaryBlockVariables |	start _ prevMark + requestorOffset.	temporaryBlockVariables _ self temporaryBlockVariables.	stmts _ OrderedCollection new.	"give initial comment to block, since others trail statements"	blockComment _ currentComment.	currentComment _ nil.	returns _ false.	more := true.	[more and:[stopCondition value not]] whileTrue:[		start _ self startOfNextToken.		(returns _ self matchAnswer) ifTrue:[			self addComment.			stmts addLast: (parseNode isReturningIf					ifTrue: [parseNode]					ifFalse: [ReturnNode new							expr: parseNode							encoder: encoder							sourceRange: (start to: self endOfLastToken)]).		] ifFalse:[			self expression ifTrue:[				self addComment.				stmts addLast: parseNode			] ifFalse:[				self addComment.				stmts size = 0 ifTrue:[					stmts addLast: (encoder encodeVariable:'nil')				]			]		].		self match: #period.		hereType == #doIt ifTrue:[more := false].	].	more ifFalse:[^false].	parseNode _ BlockNode new				arguments: variableNodes				statements: stmts				returns: returns				from: encoder.	parseNode comment: blockComment.	parseNode temporaries: temporaryBlockVariables.	encoder noteSourceRange: (self endOfLastToken to: self endOfLastToken) forNode: parseNode.	"The scope of the parameters and temporary block variables is no longer active."	temporaryBlockVariables do: [:variable | variable scope: -1].	variableNodes do: [:variable | variable scope: -1].	^ true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:56' prior: 34369544!expression	here = 'Test' ifTrue:[^self testYesNo].	^super expression! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01' prior: 34369683!innerBlock: varNodes until: stopCondition	"Parse statements in a block until stopCondition is met"	^self blockUntil: stopCondition varNodes: varNodes inner: true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:01' prior: 34369915!matchAnswer	"Parse a return statement"	(self matchToken: 'return') ifTrue:[		parseNode := encoder encodeVariable: 'nil'.		^true].	((self matchToken: 'answer') or:[self match: #upArrow]) ifTrue:[		self expression ifFalse:[^self expected: 'expression to return'].		^true].	^false! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:17' prior: 34370269!testYesNo	| start condition trueBlock selector args |	start _ self startOfNextToken.	self advance.	self expression ifFalse:[self expected: 'Condition'].	condition := parseNode.	here = 'Yes' ifFalse:[^self expected: 'Yes'].	self advance.	(self innerBlock: #() until:[here = 'No' or:[here = 'End']]) 		ifFalse:[^self expected: 'end (if) or No'].	trueBlock := parseNode.	here = 'No' ifTrue:[		self advance.		(self innerBlock: #() until:[here = 'end']) 			ifFalse:[^self expected: 'end (if)'].		failBlock := parseNode.		selector := #ifTrue:ifFalse:.		args := {trueBlock. failBlock}.	] ifFalse:[		selector := #ifTrue:.		args := {trueBlock}.	].	self advance.	parseNode := MessageNode new		receiver: condition		selector: selector		arguments: args		precedence: 3		from: encoder		sourceRange: (start to: self endOfLastToken).	^true! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 17:21' prior: 34371191!variable	| varName varStart varEnd |	varStart _ self startOfNextToken + requestorOffset.	varName _ self advance.	varEnd _ self endOfLastToken + requestorOffset.	^ encoder encodeVariable: varName		sourceRange: (varStart to: varEnd)		ifUnknown: [encoder bindTemp: varName]! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:45' prior: 34371538!xBinary	super xBinary.	(token = '<' and:[hereChar = $-]) ifTrue:[		token _ (token , (String with: self step)) asSymbol.		tokenType := #leftArrow.	].! !!TDemoParser methodsFor: 'parsing' stamp: 'ar 10/19/2004 16:59' prior: 34371760!xLetter	super xLetter.	tokenType == #word ifTrue:[		token = 'Yes' ifTrue:[tokenType := #yes].		token = 'No' ifTrue:[tokenType := #no].		token = 'End' ifTrue:[tokenType := #end].	].! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 19:46' prior: 34372022!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self meta compile: code.	].! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:44' prior: 34372390!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'SpringScriptor.morph') fileInObjectAndCode.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:44' prior: 34372588!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 19:46'!moveScriptor: evt	| lastMousePos |	evt isMouseUp ifTrue:[		evt hand showTemporaryCursor: nil.		^Scriptor removeProperty: #lastMousePos	].	evt isMouseDown ifTrue:[		Scriptor comeToFront.		evt hand showTemporaryCursor: Cursor normal.		^Scriptor setProperty: #lastMousePos toValue: evt position	].	lastMousePos := Scriptor valueOfProperty: #lastMousePos.	Scriptor setProperty: #lastMousePos toValue: evt position.	Scriptor position: Scriptor position + evt position - lastMousePos.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 19:44' prior: 34372798!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	Scriptor on: #mouseDown send: #moveScriptor: to: self.	Scriptor on: #mouseMove send: #moveScriptor: to: self.	Scriptor on: #mouseUp send: #moveScriptor: to: self.	morph := Scriptor allMorphs detect:[:any| any externalName = 'CloseButton'].	morph on: #click send: #delete to: Scriptor.	src := self sourceCodeAt: #compute.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.	Scriptor position: morph topLeft + (140@50).! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/20/2004 13:42' prior: 34373437!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoSpring class methodsFor: 'scriptor' stamp: 'ar 10/21/2004 19:59' prior: 34373799!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMTddIG9uIDIxIE9jdG9iZXIgMjAwNCBhdCA3OjU5OjQ4IHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA8CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GCUJ5dGVBcnJheQgAAAABBAAAAAAQAwA7BhFUVEZvbnREZXNjcmlwdGlvbggAAAARBAAAAAARCmdseXBoVGFibGURBmdseXBocxEJa2VyblBhaXJzEQljb3B5cmlnaHQRCmZhbWlseU5hbWURCGZ1bGxOYW1lEQ1zdWJmYW1pbHlOYW1lEQp1bmlxdWVOYW1lEQt2ZXJzaW9uTmFtZREOcG9zdHNjcmlwdE5hbWURCXRyYWRlbWFyaxEGYm91bmRzEQp1bml0c1BlckVtEQhhc2NlbmRlchEJZGVzY2VuZGVyEQdsaW5lR2FwARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50ARADADsGBkJpdG1hcAgAAAABBAAAAAAQAwA7BgtUYWJsZUxheW91dAgAAAADBAAAAAARCnByb3BlcnRpZXMRDm1pbkV4dGVudENhY2hlEAMAOwYMVGV4dEVtcGhhc2lzCAAAAAMEAAAAABEMZW1waGFzaXNDb2RlEQdzZXRNb2RlEAMAOwYSSWRlbnRpdHlEaWN0aW9uYXJ5CAAAAAMEAAAAAAoAAAOoCgAAA68QAwA7BghSdW5BcnJheQgAAAAGBAAAAAARBHJ1bnMRBnZhbHVlcxEJbGFzdEluZGV4EQdsYXN0UnVuEQpsYXN0T2Zmc2V0EAMAOwYGU3ltYm9sCAAAAAEEAAAAABADADsGEVRleHRGb250UmVmZXJlbmNlCAAAAAMEAAAAABEKZm9udE51bWJlchEEZm9udBADADsGEExheW91dFByb3BlcnRpZXMIAAAABAQAAAAACgAAAXUKAAABgAoAAAGLEAMAOwYGTnVtYmVyCAAAAAEEAAAAABADADsGB1RUQ0ZvbnQIAAAABgQAAAABEQ50dGNEZXNjcmlwdGlvbhEJcG9pbnRTaXplEQ9mb3JlZ3JvdW5kQ29sb3IRBWNhY2hlEQtkZXJpdmF0aXZlcwEQAwA7BgxFbGxpcHNlTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQtib3JkZXJXaWR0aBELYm9yZGVyQ29sb3IBAQEQAwA7BgtTa2V0Y2hNb3JwaAgAAAAMBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oRDG9yaWdpbmFsRm9ybRENcm90YXRpb25TdHlsZREKc2NhbGVQb2ludBENZnJhbWVzVG9Ed2VsbBELcm90YXRlZEZvcm0QAwA7Bg1UZXh0QXR0cmlidXRlCAAAAAEEAAAAAAEQAwA7BgZTdHJpbmcIAAAAAQQAAAAAEAMAOwYLTWVzc2FnZVNlbmQIAAAABAQAAAAAEQhyZWNlaXZlchEIc2VsZWN0b3IRCWFyZ3VtZW50cxADADsGFExhcmdlUG9zaXRpdmVJbnRlZ2VyCAAAAAEEAAAAABADADsGDURpc3BsYXlNZWRpdW0IAAAAAQQAAAAAEAMAOwYMQWJzdHJhY3RGb250CAAAAAEEAAAAAAEQAwA7Bg1EaXNwbGF5T2JqZWN0CAAAAAEEAAAAAAEQAwA7Bg5Nb3JwaEV4dGVuc2lvbggAAAAMBAAAAAARBmxvY2tlZBEHdmlzaWJsZREGc3RpY2t5EQtiYWxsb29uVGV4dBETYmFsbG9vblRleHRTZWxlY3RvchEMZXh0ZXJuYWxOYW1lEQxpc1BhcnRzRG9ub3IRCmFjdG9yU3RhdGURBnBsYXllchEMZXZlbnRIYW5kbGVyEQ9vdGhlclByb3BlcnRpZXMBAQEQAwA7Bg5SZWN0YW5nbGVNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAGTwoAAAZcEAMAOwYJVGV4dE1vcnBoCAAAABQEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADigoAAAZPCgAABlwRCXRleHRTdHlsZREEdGV4dBEId3JhcEZsYWcRCXBhcmFncmFwaBEGZWRpdG9yEQljb250YWluZXIRC3ByZWRlY2Vzc29yEQlzdWNjZXNzb3IRC2xhc3RHZXN0dXJlEQ9iYWNrZ3JvdW5kQ29sb3IRB21hcmdpbnMQAwA7BhZTZXF1ZW5jZWFibGVDb2xsZWN0aW9uCAAAAAEEAAAAABADADsGDlRleHRGb250Q2hhbmdlCAAAAAIEAAAAAAoAAAVmEAMAOwYNQm9yZGVyZWRNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAGTwoAAAZcAQEBAQEQAwA7BglEaXNrUHJveHkIAAAABQQAAAAAERBnbG9iYWxPYmplY3ROYW1lEQtwcmVTZWxlY3RvchETY29uc3RydWN0b3JTZWxlY3RvchEPY29uc3RydWN0b3JBcmdzEAMAOwYJVGV4dFN0eWxlCAAAAA0EAAAAABEJZm9udEFycmF5EQ5mb250RmFtaWx5U2l6ZREIbGluZUdyaWQRCGJhc2VsaW5lEQlhbGlnbm1lbnQRC2ZpcnN0SW5kZW50EQpyZXN0SW5kZW50EQtyaWdodEluZGVudBEJdGFic0FycmF5EQ9tYXJnaW5UYWJzQXJyYXkRB2xlYWRpbmcREGRlZmF1bHRGb250SW5kZXgQAwA7BhFPcmllbnRlZEZpbGxTdHlsZQgAAAAEBAAAAAAKAAAD9AoAAAP8CgAABAcQAwA7BgxFdmVudEhhbmRsZXIIAAAAHwQAAAAAERJtb3VzZURvd25SZWNpcGllbnQREW1vdXNlRG93blNlbGVjdG9yERJtb3VzZU1vdmVSZWNpcGllbnQREW1vdXNlTW92ZVNlbGVjdG9yERdtb3VzZVN0aWxsRG93blJlY2lwaWVudBEWbW91c2VTdGlsbERvd25TZWxlY3RvchEQbW91c2VVcFJlY2lwaWVudBEPbW91c2VVcFNlbGVjdG9yERNtb3VzZUVudGVyUmVjaXBpZW50ERJtb3VzZUVudGVyU2VsZWN0b3IRE21vdXNlTGVhdmVSZWNpcGllbnQREm1vdXNlTGVhdmVTZWxlY3RvchEbbW91c2VFbnRlckRyYWdnaW5nUmVjaXBpZW50ERptb3VzZUVudGVyRHJhZ2dpbmdTZWxlY3RvchEbbW91c2VMZWF2ZURyYWdnaW5nUmVjaXBpZW50ERptb3VzZUxlYXZlRHJhZ2dpbmdTZWxlY3RvchESa2V5U3Ryb2tlUmVjaXBpZW50ERFrZXlTdHJva2VTZWxlY3RvchEOdmFsdWVQYXJhbWV0ZXIREnN0YXJ0RHJhZ1JlY2lwaWVudBERc3RhcnREcmFnU2VsZWN0b3IRE2RvdWJsZUNsaWNrU2VsZWN0b3IRFGRvdWJsZUNsaWNrUmVjaXBpZW50ERpkb3VibGVDbGlja1RpbWVvdXRTZWxlY3RvchEbZG91YmxlQ2xpY2tUaW1lb3V0UmVjaXBpZW50EQ1jbGlja1NlbGVjdG9yEQ5jbGlja1JlY2lwaWVudBEPZ2VzdHVyZVNlbGVjdG9yERBnZXN0dXJlUmVjaXBpZW50ERdnZXN0dXJlRGljdGlvbmFyeU9yTmFtZQEBARADADsGBEZvcm0IAAAABgQAAAAAEQRiaXRzEQV3aWR0aBEGaGVpZ2h0EQVkZXB0aBEGb2Zmc2V0EAMAOwYMU2ltcGxlQm9yZGVyCAAAAAQEAAAAABEJYmFzZUNvbG9yEQVjb2xvchEFd2lkdGgQAwA7BgpTdHJpa2VGb250CAAAABMEAAAAABETY2hhcmFjdGVyVG9HbHlwaE1hcBEGeFRhYmxlEQZnbHlwaHMRBG5hbWURBHR5cGURCG1pbkFzY2lpEQhtYXhBc2NpaREIbWF4V2lkdGgRDHN0cmlrZUxlbmd0aBEGYXNjZW50EQdkZXNjZW50EQd4T2Zmc2V0EQZyYXN0ZXIRCXN1YnNjcmlwdBELc3VwZXJzY3JpcHQRCGVtcGhhc2lzEQ9kZXJpdmF0aXZlRm9udHMRCXBvaW50U2l6ZRADADsGCUxvb2t1cEtleQgAAAACBAAAAAARA2tleQEBAQEQAwA7BhFBcnJheWVkQ29sbGVjdGlvbggAAAABBAAAAAABAQEBEAMAOwYJUmVjdGFuZ2xlCAAAAAMEAAAAABEGb3JpZ2luEQZjb3JuZXIQAwA7BgRUZXh0CAAAAAMEAAAAABEGc3RyaW5nEQRydW5zEAMAOwYJV2Vha0FycmF5CAAAAAEEAAAAABADADsGC1Byb3RvT2JqZWN0CAAAAAEEAAAAAAEQAwA7BglNYWduaXR1ZGUIAAAAAQQAAAAAARADADsGCkNvbGxlY3Rpb24IAAAAAQQAAAAAARADADsGB0ludGVnZXIIAAAAAQQAAAAAEAMAOwYFQXJyYXkIAAAAAQQAAAAAEAMAOwYDU2V0CAAAAAMEAAAAAAoAAAOoCgAAA68QAwA7CgAAADsIAAAAAwQAAAAACgAAD04RBXZhbHVlEAMAOwYSVGlja0luZGljYXRvck1vcnBoCAAAAA8EAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADigoAAAZPCgAABlwRCHN0ZXBUaW1lEQdjb3JuZXJzEQVpbmRleBEFcmFuZ2URCWlzVGlja2luZxEIbGFzdFRpY2sRDHN1cGVyY2xhc3NlcxADACAEAAAAPAgAAABgEAMAOwoAAABICgAAD1sQAwA7CgAAAGEKAAACWwEQAwA7CgAA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AAAEAAAAIAuABgEH/wAAAQQAAAABEAMAOwoAACQgCgAANIAQAwA7CgAAI/MKAAA0ygQAAAAACgAANS4QCQiDEAMPgBADA7wEAAABxgQAAADFEAMDvAQAAANrDkBz4AAAAAAACgAAFKEIAAAAAhAPEJ0PHGDFHaDZCgAANXAIAAAAAAEQBAKHBD////8EAAAAIAuAAwEF/xAMB9gDAgMBAQEDAQEBEAMEwQQAAAACCAAAAAQBEAMAOwoAACPAEAQOLQEQBAKHBC0rS60EAAAAIAuABgEH/7S06wQAAAABARADADsKAAAkIAoAADW4BAAAAAEKAAA19wEIAAAAIBADA7wEAAAAAAT////4EAMDvAQAAAABBP////kQAwO8BAAAAAME////+RADA7wEAAAABAT////6EAMDvAQAAAAFBP////sQAwO8BAAAAAYE/////BADA7wEAAAABwT////9EAMDvAQAAAAHBP////8QAwO8BAAAAAgEAAAAABADA7wEAAAABwQAAAABEAMDvAQAAAAHBAAAAAMQAwO8BAAAAAYEAAAABBADA7wEAAAABQQAAAAFEAMDvAQAAAAEBAAAAAYQAwO8BAAAAAMEAAAABxADA7wEAAAAAQQAAAAHEAMDvAQAAAAABAAAAAgQAwO8BP////8EAAAABxADA7wE/////QQAAAAHEAMDvAT////8BAAAAAYQAwO8BP////sEAAAABRADA7wE////+gQAAAAEEAMDvAT////5BAAAAAMQAwO8BP////kEAAAAARADA7wE////+AQAAAAAEAMDvAT////5BP////8QAwO8BP////kE/////RADA7wE////+gT////8EAMDvAT////7BP////sQAwO8BP////wE////+hADA7wE/////QT////5EAMDvAT/////BP////kEAAAAAAEBARAUCMkPHaDFNrE+CgAANXAIAAAAAAEQBAKHBAAAAAAEAAAAIAuABgEH/wAAARAMB9gDAgMBAREEQ29kZQMBAQEQAwTBBAAAAAMIAAAACBADADsKAAAj8xAEBXwKAAAkCQoAADO9AxADADsGDGFjY2VwdEFjdGlvbhAEByIQBQoVBgtURGVtb1NwcmluZwEGCHlvdXJzZWxmCAAAAAAGD2NvbXBpbGVTY3JpcHRvcggAAAAAARADADsKAAAkIBAEAocEPW+bxgQAAAAgC4AGAQf/9fnxAQEBAQQAAAAACgAAOBAQDQpzCAAAAAQQBQoVCgAADmIBBhtmYW1pbHlOYW1lOnNpemU6ZW1waGFzaXplZDoIAAAAAxEHTmV3WW9yawQAAAAMBAAAAAAQBQoVCgAADmIBCgAAOO8IAAAAAxEHTmV3WW9yawQAAAAPBAAAAAAQBQoVCgAADmIBCgAAOO8IAAAAAxEHTmV3WW9yawQAAAAVBAAAAAAQBQoVCgAADmIBCgAAOO8IAAAAAxEHTmV3WW9yawQAAAAaBAAAAAABBAAAAA4EAAAADAQAAAAABAAAAAAEAAAAAAQAAAAAEAUKFQYNVGV4dENvbnN0YW50cwEGA2F0OggAAAABBhBEZWZhdWx0VGFic0FycmF5EAUKFQoAADm8AQoAADnMCAAAAAEGFkRlZmF1bHRNYXJnaW5UYWJzQXJyYXkEAAAAAgQAAAABEAMPqRHAAAEHDQlrIDwtIC01MDAuCQkJCQkJCQkic3ByaW5nIGNvbnN0YW50Ig0JdiA8LSBtYXNzMSBsb2NhdGlvbiAtIG1hc3MyIGxvY2F0aW9uLgkiYWN0dWFsIGxlbmd0aCINCW4gPC0gdiBub3JtYWxpemVkICogcmVzdC4JCQkJInJlc3QgbGVuZ3RoIg0JZiA8LSAodiAtIG4gKSAqIGsuCQkJCQkJCSJjb21wdXRlIGZvcmNlIg0JbWFzczEgYWRkRm9yY2U6Zi4JCQkJCQkiYWRkIHRvIG1hc3MxIg0JbWFzczIgYWRkRm9yY2U6ZiBuZWdhdGVkLgkJCQkiYW5kIHRvIG1hc3MyIg0QBgTtCAAAAB8EAAAAAgQAAAAJBAAAAAkEAAAAAQQAAAAPBAAAAAEEAAAAAgQAAAAmBAAAAAEEAAAADQQAAAABBAAAAB8EAAAAAQQAAAALBAAAAAEEAAAAGwQAAAABBAAAAA0EAAAAAQQAAAAQBAAAAAEEAAAACAQAAAABBAAAAAwEAAAAAQQAAAAQBAAAAAEEAAAADgQAAAABBAAAAAwEAAAAAggAAAAfCAAAAAIQAgmoBAAAAAEQAwVJARAGBcEQBQoVCgAAAGEBBhFkZXNjcmlwdGlvbk5hbWVkOggAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAOBAQAg/LCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBCAAAAAQQBgXBEAUKFQoAAABhAQoAADv4CAAAAAEREUJpdHN0cmVhbVZlcmFTYW5zBAAAAAkQBAKHBDov/6IBARACD8sIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYFwRAFChUKAAAAYQEKAAA7+AgAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAOBAQAg/LCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARAGBcEQBQoVCgAAAGEBCgAAO/gIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAADRXEAIPywgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBCAAAAAMQAgmoBAAAAAEQAwVJAQoAADvqEAMEjgQAAAABAggAAAACEAIJqAQAAAABEAMFSQEKAAA76ggAAAADEAIJqAQAAAABEAMFSQEKAAA76hACAysQBAKHBD0vi8IBAQgAAAADEAIJqAQAAAABEAMFSQEKAAA76hADBI4EAAAAAgIIAAAAAxACCagEAAAAARADBUkBCgAAO+oQAgMrEAQChwQ9L4vCAQEIAAAAAhACCagEAAAAARADBUkBCgAAO+oIAAAAAxACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAMFSQEKAAA76hACAysQBAKHBDov/6IBAQgAAAADEAIJqAQAAAABEAMEjgQAAAACAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAECEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrEAQChwQ6L/+iAQEIAAAAAxACCagEAAAAARADBI4EAAAAAgIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAMFSQEKAAA76hACAysQBAKHBDov/6IBAQgAAAADEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAICEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrEAQChwQ6L/+iAQEIAAAAAxACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAIDKxAEAocEOi6LogEBEAMFSQEKAAA76ggAAAADEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAICEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrEAQChwQ6L/+iAQEIAAAAAxACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAIDKxAEAocEOi6LogEBEAMFSQEKAAA76ggAAAADEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAICEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrCgAAPWsEAAAAAQQAAAABBAAAAAACAQEBAQEBEAQChwQ73///AQEBARAFAtoEPW+bxgEBBAAAAAAQDAfYAwIDAQERClJlY3RhbmdsZTMDAQEBEAMEwQQAAAAECAAAAAYBARADADsKAAA0MRADBFcQEQFUCgAAJAkKAAAzvQMEAAAAAAoAADP5CgAAM+UEAAAAAAoAADP5CgAANAIKAAAz5QMDCgAAM/kKAAAz5QQAAAAABD////8BEAMAOwoAACPAEAQOLQEKAAA1LgQAAAABEAMAOwoAACQgCgAARcIQAwA7CgAAI/MKAABGCAQAAAAACgAANS4BEAQChwQmLOf/AQEQDAfYAwIDAQERDlNwcmluZ1NjcmlwdG9yAwEBEB8LUwoAADh2Bg1tb3ZlU2NyaXB0b3I6CgAAOHYKAABGwAEBCgAAOHYKAABGwAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEQAwTBBAAAAAkIAAAAGgEBAQEBAQEBEAMAOwYMc2hhZG93T2Zmc2V0EAMDvAQAAAADBAAAAAMQAwA7CgAANDEQAwRXEBEBVAoAACQUCgAAM70DBAAAAAAKAAAz+QoAADPlBAAAAAAKAAAz+QYLdG9wVG9Cb3R0b20KAAAz5QMDCgAAM/kKAAAz5QQAAAAABD////8BAQEBAQEQAwA7CgAAJCAQCAPXEAMDvAQAAAIEBAAAALYQAwO8BAAAAA0EAAAAFRADA7wE////6wQAAAANCAAAAAIQAwA7DgAAAAAAAAAAEAQChwQjG9//BAAAACALgAYBB/+Mvf8QAwA7Dj/wAAAAAAAAEAQChwQpTe//BAAAACALgAYBB/+l3v8LgOEk4gA+/4y9/xb/jL7/Lv+Nvv8m/42//xr/jr//Pv+OwP8H/4/A/z7/j8H/Ev+Pwv8y/5DC/yb/kMP/Gv+Rw/86/5HE/wr/ksT/Pv+Sxf8S/5LG/zL/k8b/Iv+Tx/8e/5TH/zr/lMj/Cv+VyP8+/5XJ/w7/lcr/Nv+Wyv8i/5bL/x7/l8v/Nv+XzP8O/5jM/z7/mM3/Dv+Yzv82/5nO/x7/mc//Iv+az/82/5rQ/w7/m9D/Pv+b0f8K/5vS/zr/nNL/Hv+c0/8i/53T/zL/ndT/Ev+e1P8+/57V/wr/ntb/Ov+f1v8a/5/X/yb/oNf/Mv+g2P8S/6HY/z7/odn/B/+h2v8+/6La/xr/otv/Jv+j2/8u/6Pc/xb/pNz/Pv+k3f8H/6Xe/wMDEAMAOwYLc2hhZG93Q29sb3IQBQLaBAAAAAAEAAAAIAuABgEHUgAAAQQAAABSEAMAOwoAACPzCgAARz4BARADADsGDWNsaXBTdWJtb3JwaHMCEAMAOwYNaGFzRHJvcFNoYWRvdwIQAwA7Bgtjb3JuZXJTdHlsZQYHcm91bmRlZAEBEAMAOwoAACPAEAQOLRAEAocEIxvf/wQAAAAgC4AGAQf/jL3/CgAASdAEAAAAASENDQ=='! !!TDemoSpring class methodsFor: 'compiler' stamp: 'ar 10/20/2004 13:45' prior: 34396768!compilerClass	^TDemoCompiler! !!TDemoSpring class methodsFor: 'compiler' stamp: 'ar 10/20/2004 13:45' prior: 34396873!parserClass	^TDemoParser! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/21/2004 23:21'!compileScriptor	| hdr pane code |	Cursor wait showWhile:[		hdr := self sourceCodeAt: #compute.		hdr := hdr copyFrom: 1 to: (hdr asString indexOf: Character cr).		pane := Scriptor allMorphs detect:[:any| any externalName = 'Code'].		code := hdr, pane contents.		self meta compile: code.	].! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/21/2004 23:21'!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'SpringScriptor.morph') fileInObjectAndCode.! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/21/2004 23:21'!loadScriptor	"self loadScriptor"	Scriptor := (RWBinaryOrTextStream with: self scriptorData base64Decoded) reset fileInObjectAndCode.! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/22/2004 01:04'!moveScriptor: evt	| lastMousePos |	evt isMouseUp ifTrue:[		evt hand showTemporaryCursor: nil.		^Scriptor removeProperty: #lastMousePos	].	evt isMouseDown ifTrue:[		Scriptor comeToFront.		evt hand showTemporaryCursor: Cursor normal.		^Scriptor setProperty: #lastMousePos toValue: evt position	].	lastMousePos := Scriptor valueOfProperty: #lastMousePos.	Scriptor setProperty: #lastMousePos toValue: evt position.	Scriptor position: Scriptor position + evt position - lastMousePos.! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/22/2004 01:17'!openScriptor	"self openScriptor"	| src code morph |	Scriptor ifNil:[self loadScriptor].	Scriptor on: #mouseDown send: #moveScriptor: to: self.	Scriptor on: #mouseMove send: #moveScriptor: to: self.	Scriptor on: #mouseUp send: #moveScriptor: to: self.	morph := Scriptor allMorphs detect:[:any| any externalName = 'CloseButton'].	morph on: #click send: #delete to: Scriptor.	src := self sourceCodeAt: #compute.	src := src copyFrom: (src asString indexOf: Character cr)+1 to: src size.	code := Scriptor allMorphs detect:[:any| any externalName = 'Code'].	code contents: src.	code wrapFlag: true.	code backgroundColor: (Color r: 0.935 g: 1.0 b: 1.0).	code setProperty: #acceptAction toValue: (MessageSend receiver: self selector: #compileScriptor).	morph := CroquetGlobals theTeapotMorph ifNil:[ActiveWorld].	morph addMorphFront: Scriptor.	Scriptor position: morph topLeft + (140@50).! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/21/2004 23:21'!saveScriptor	"self saveScriptor"	"self openScriptor"	"self loadScriptor"	| data |	data := RWBinaryOrTextStream on: String new.	data fileOutClass: nil andObject: Scriptor.	data := data contents.	data := data base64Encoded.	self class compile: 'scriptorData ^',data storeString.! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/22/2004 01:06'!scriptorData ^'J0Zyb20gSmFzbWluZS1yYzEgb2YgNyBPY3RvYmVyIDIwMDQgW2xhdGVzdCB1cGRhdGU6ICMxMTddIG9uIDIxIE9jdG9iZXIgMjAwNCBhdCA3OjU5OjQ4IHBtJyENDSFPYmplY3RTY2FubmVyIG5ldyBpbml0aWFsaXplIQ0NDQ0hc2VsZiBzbWFydFJlZlN0cmVhbSEEAAAABAgAAAAEEQ9jbGFzcyBzdHJ1Y3R1cmUJAAAAAwYKRGljdGlvbmFyeQQAAAA8CAAAAGAJAAAAAwYLQXNzb2NpYXRpb24GCUJ5dGVBcnJheQgAAAABBAAAAAAQAwA7BhFUVEZvbnREZXNjcmlwdGlvbggAAAARBAAAAAARCmdseXBoVGFibGURBmdseXBocxEJa2VyblBhaXJzEQljb3B5cmlnaHQRCmZhbWlseU5hbWURCGZ1bGxOYW1lEQ1zdWJmYW1pbHlOYW1lEQp1bmlxdWVOYW1lEQt2ZXJzaW9uTmFtZREOcG9zdHNjcmlwdE5hbWURCXRyYWRlbWFyaxEGYm91bmRzEQp1bml0c1BlckVtEQhhc2NlbmRlchEJZGVzY2VuZGVyEQdsaW5lR2FwARADADsGDExheW91dFBvbGljeQgAAAABBAAAAAAQAwA7BhVUYWJsZUxheW91dFByb3BlcnRpZXMIAAAAEQQAAAAAEQloUmVzaXppbmcRCXZSZXNpemluZxENZGlzYWJsZUxheW91dBEJY2VsbEluc2V0EQ9jZWxsUG9zaXRpb25pbmcRC2NlbGxTcGFjaW5nEQtsYXlvdXRJbnNldBENbGlzdENlbnRlcmluZxENbGlzdERpcmVjdGlvbhELbGlzdFNwYWNpbmcREXJldmVyc2VUYWJsZUNlbGxzEQ9ydWJiZXJCYW5kQ2VsbHMRDXdyYXBDZW50ZXJpbmcRDXdyYXBEaXJlY3Rpb24RC21pbkNlbGxTaXplEQttYXhDZWxsU2l6ZRADADsGBk9iamVjdAgAAAABBAAAAAABEAMAOwYFRmxvYXQIAAAAAQQAAAAAEAMAOwYFQ29sb3IIAAAABAQAAAAAEQNyZ2IRC2NhY2hlZERlcHRoERBjYWNoZWRCaXRQYXR0ZXJuEAMAOwYJRmlsbFN0eWxlCAAAAAEEAAAAAAEQAwA7BhBUcmFuc2x1Y2VudENvbG9yCAAAAAUEAAAAAAoAAAKYCgAAAp0KAAACqhEFYWxwaGEQAwA7BgtCb3JkZXJTdHlsZQgAAAABBAAAAAAQAwA7BglUZXh0Q29sb3IIAAAAAgQAAAAAEQVjb2xvcgEQAwA7BgVNb3JwaAgAAAAHBAAAAAARBmJvdW5kcxEFb3duZXIRCXN1Ym1vcnBocxEKZnVsbEJvdW5kcxEFY29sb3IRCWV4dGVuc2lvbhADADsKAAAAIAgAAAADBAAAAAARBXRhbGx5EQVhcnJheQEBEAMAOwYFUG9pbnQIAAAAAwQAAAAAEQF4EQF5EAMAOwYRR3JhZGllbnRGaWxsU3R5bGUIAAAACAQAAAAAEQZvcmlnaW4RCWRpcmVjdGlvbhEGbm9ybWFsEQljb2xvclJhbXARCXBpeGVsUmFtcBEGcmFkaWFsEQ1pc1RyYW5zbHVjZW50ARADADsGBkJpdG1hcAgAAAABBAAAAAAQAwA7BgtUYWJsZUxheW91dAgAAAADBAAAAAARCnByb3BlcnRpZXMRDm1pbkV4dGVudENhY2hlEAMAOwYMVGV4dEVtcGhhc2lzCAAAAAMEAAAAABEMZW1waGFzaXNDb2RlEQdzZXRNb2RlEAMAOwYSSWRlbnRpdHlEaWN0aW9uYXJ5CAAAAAMEAAAAAAoAAAOoCgAAA68QAwA7BghSdW5BcnJheQgAAAAGBAAAAAARBHJ1bnMRBnZhbHVlcxEJbGFzdEluZGV4EQdsYXN0UnVuEQpsYXN0T2Zmc2V0EAMAOwYGU3ltYm9sCAAAAAEEAAAAABADADsGEVRleHRGb250UmVmZXJlbmNlCAAAAAMEAAAAABEKZm9udE51bWJlchEEZm9udBADADsGEExheW91dFByb3BlcnRpZXMIAAAABAQAAAAACgAAAXUKAAABgAoAAAGLEAMAOwYGTnVtYmVyCAAAAAEEAAAAABADADsGB1RUQ0ZvbnQIAAAABgQAAAABEQ50dGNEZXNjcmlwdGlvbhEJcG9pbnRTaXplEQ9mb3JlZ3JvdW5kQ29sb3IRBWNhY2hlEQtkZXJpdmF0aXZlcwEQAwA7BgxFbGxpcHNlTW9ycGgIAAAACQQAAAAACgAAA10KAAADZQoAAANsCgAAA3cKAAADgwoAAAOKEQtib3JkZXJXaWR0aBELYm9yZGVyQ29sb3IBAQEQAwA7BgtTa2V0Y2hNb3JwaAgAAAAMBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oRDG9yaWdpbmFsRm9ybRENcm90YXRpb25TdHlsZREKc2NhbGVQb2ludBENZnJhbWVzVG9Ed2VsbBELcm90YXRlZEZvcm0QAwA7Bg1UZXh0QXR0cmlidXRlCAAAAAEEAAAAAAEQAwA7BgZTdHJpbmcIAAAAAQQAAAAAEAMAOwYLTWVzc2FnZVNlbmQIAAAABAQAAAAAEQhyZWNlaXZlchEIc2VsZWN0b3IRCWFyZ3VtZW50cxADADsGFExhcmdlUG9zaXRpdmVJbnRlZ2VyCAAAAAEEAAAAABADADsGDURpc3BsYXlNZWRpdW0IAAAAAQQAAAAAEAMAOwYMQWJzdHJhY3RGb250CAAAAAEEAAAAAAEQAwA7Bg1EaXNwbGF5T2JqZWN0CAAAAAEEAAAAAAEQAwA7Bg5Nb3JwaEV4dGVuc2lvbggAAAAMBAAAAAARBmxvY2tlZBEHdmlzaWJsZREGc3RpY2t5EQtiYWxsb29uVGV4dBETYmFsbG9vblRleHRTZWxlY3RvchEMZXh0ZXJuYWxOYW1lEQxpc1BhcnRzRG9ub3IRCmFjdG9yU3RhdGURBnBsYXllchEMZXZlbnRIYW5kbGVyEQ9vdGhlclByb3BlcnRpZXMBAQEQAwA7Bg5SZWN0YW5nbGVNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAGTwoAAAZcEAMAOwYJVGV4dE1vcnBoCAAAABQEAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADigoAAAZPCgAABlwRCXRleHRTdHlsZREEdGV4dBEId3JhcEZsYWcRCXBhcmFncmFwaBEGZWRpdG9yEQljb250YWluZXIRC3ByZWRlY2Vzc29yEQlzdWNjZXNzb3IRC2xhc3RHZXN0dXJlEQ9iYWNrZ3JvdW5kQ29sb3IRB21hcmdpbnMQAwA7BhZTZXF1ZW5jZWFibGVDb2xsZWN0aW9uCAAAAAEEAAAAABADADsGDlRleHRGb250Q2hhbmdlCAAAAAIEAAAAAAoAAAVmEAMAOwYNQm9yZGVyZWRNb3JwaAgAAAAJBAAAAAAKAAADXQoAAANlCgAAA2wKAAADdwoAAAODCgAAA4oKAAAGTwoAAAZcAQEBAQEQAwA7BglEaXNrUHJveHkIAAAABQQAAAAAERBnbG9iYWxPYmplY3ROYW1lEQtwcmVTZWxlY3RvchETY29uc3RydWN0b3JTZWxlY3RvchEPY29uc3RydWN0b3JBcmdzEAMAOwYJVGV4dFN0eWxlCAAAAA0EAAAAABEJZm9udEFycmF5EQ5mb250RmFtaWx5U2l6ZREIbGluZUdyaWQRCGJhc2VsaW5lEQlhbGlnbm1lbnQRC2ZpcnN0SW5kZW50EQpyZXN0SW5kZW50EQtyaWdodEluZGVudBEJdGFic0FycmF5EQ9tYXJnaW5UYWJzQXJyYXkRB2xlYWRpbmcREGRlZmF1bHRGb250SW5kZXgQAwA7BhFPcmllbnRlZEZpbGxTdHlsZQgAAAAEBAAAAAAKAAAD9AoAAAP8CgAABAcQAwA7BgxFdmVudEhhbmRsZXIIAAAAHwQAAAAAERJtb3VzZURvd25SZWNpcGllbnQREW1vdXNlRG93blNlbGVjdG9yERJtb3VzZU1vdmVSZWNpcGllbnQREW1vdXNlTW92ZVNlbGVjdG9yERdtb3VzZVN0aWxsRG93blJlY2lwaWVudBEWbW91c2VTdGlsbERvd25TZWxlY3RvchEQbW91c2VVcFJlY2lwaWVudBEPbW91c2VVcFNlbGVjdG9yERNtb3VzZUVudGVyUmVjaXBpZW50ERJtb3VzZUVudGVyU2VsZWN0b3IRE21vdXNlTGVhdmVSZWNpcGllbnQREm1vdXNlTGVhdmVTZWxlY3RvchEbbW91c2VFbnRlckRyYWdnaW5nUmVjaXBpZW50ERptb3VzZUVudGVyRHJhZ2dpbmdTZWxlY3RvchEbbW91c2VMZWF2ZURyYWdnaW5nUmVjaXBpZW50ERptb3VzZUxlYXZlRHJhZ2dpbmdTZWxlY3RvchESa2V5U3Ryb2tlUmVjaXBpZW50ERFrZXlTdHJva2VTZWxlY3RvchEOdmFsdWVQYXJhbWV0ZXIREnN0YXJ0RHJhZ1JlY2lwaWVudBERc3RhcnREcmFnU2VsZWN0b3IRE2RvdWJsZUNsaWNrU2VsZWN0b3IRFGRvdWJsZUNsaWNrUmVjaXBpZW50ERpkb3VibGVDbGlja1RpbWVvdXRTZWxlY3RvchEbZG91YmxlQ2xpY2tUaW1lb3V0UmVjaXBpZW50EQ1jbGlja1NlbGVjdG9yEQ5jbGlja1JlY2lwaWVudBEPZ2VzdHVyZVNlbGVjdG9yERBnZXN0dXJlUmVjaXBpZW50ERdnZXN0dXJlRGljdGlvbmFyeU9yTmFtZQEBARADADsGBEZvcm0IAAAABgQAAAAAEQRiaXRzEQV3aWR0aBEGaGVpZ2h0EQVkZXB0aBEGb2Zmc2V0EAMAOwYMU2ltcGxlQm9yZGVyCAAAAAQEAAAAABEJYmFzZUNvbG9yEQVjb2xvchEFd2lkdGgQAwA7BgpTdHJpa2VGb250CAAAABMEAAAAABETY2hhcmFjdGVyVG9HbHlwaE1hcBEGeFRhYmxlEQZnbHlwaHMRBG5hbWURBHR5cGURCG1pbkFzY2lpEQhtYXhBc2NpaREIbWF4V2lkdGgRDHN0cmlrZUxlbmd0aBEGYXNjZW50EQdkZXNjZW50EQd4T2Zmc2V0EQZyYXN0ZXIRCXN1YnNjcmlwdBELc3VwZXJzY3JpcHQRCGVtcGhhc2lzEQ9kZXJpdmF0aXZlRm9udHMRCXBvaW50U2l6ZRADADsGCUxvb2t1cEtleQgAAAACBAAAAAARA2tleQEBAQEQAwA7BhFBcnJheWVkQ29sbGVjdGlvbggAAAABBAAAAAABAQEBEAMAOwYJUmVjdGFuZ2xlCAAAAAMEAAAAABEGb3JpZ2luEQZjb3JuZXIQAwA7BgRUZXh0CAAAAAMEAAAAABEGc3RyaW5nEQRydW5zEAMAOwYJV2Vha0FycmF5CAAAAAEEAAAAABADADsGC1Byb3RvT2JqZWN0CAAAAAEEAAAAAAEQAwA7BglNYWduaXR1ZGUIAAAAAQQAAAAAARADADsGCkNvbGxlY3Rpb24IAAAAAQQAAAAAARADADsGB0ludGVnZXIIAAAAAQQAAAAAEAMAOwYFQXJyYXkIAAAAAQQAAAAAEAMAOwYDU2V0CAAAAAMEAAAAAAoAAAOoCgAAA68QAwA7CgAAADsIAAAAAwQAAAAACgAAD04RBXZhbHVlEAMAOwYSVGlja0luZGljYXRvck1vcnBoCAAAAA8EAAAAAAoAAANdCgAAA2UKAAADbAoAAAN3CgAAA4MKAAADigoAAAZPCgAABlwRCHN0ZXBUaW1lEQdjb3JuZXJzEQVpbmRleBEFcmFuZ2URCWlzVGlja2luZxEIbGFzdFRpY2sRDHN1cGVyY2xhc3NlcxADACAEAAAAPAgAAABgEAMAOwoAAABICgAAD1sQAwA7CgAAAGEKAAACWwEQAwA7CgAA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AAAEAAAAIAuABgEH/wAAAQQAAAABEAMAOwoAACQgCgAANIAQAwA7CgAAI/MKAAA0ygQAAAAACgAANS4QCQiDEAMPgBADA7wEAAABxgQAAADFEAMDvAQAAANrDkBz4AAAAAAACgAAFKEIAAAAAhAPEJ0PHGDFHaDZCgAANXAIAAAAAAEQBAKHBD////8EAAAAIAuAAwEF/xAMB9gDAgMBAQEDAQEBEAMEwQQAAAACCAAAAAQBEAMAOwoAACPAEAQOLQEQBAKHBC0rS60EAAAAIAuABgEH/7S06wQAAAABARADADsKAAAkIAoAADW4BAAAAAEKAAA19wEIAAAAIBADA7wEAAAAAAT////4EAMDvAQAAAABBP////kQAwO8BAAAAAME////+RADA7wEAAAABAT////6EAMDvAQAAAAFBP////sQAwO8BAAAAAYE/////BADA7wEAAAABwT////9EAMDvAQAAAAHBP////8QAwO8BAAAAAgEAAAAABADA7wEAAAABwQAAAABEAMDvAQAAAAHBAAAAAMQAwO8BAAAAAYEAAAABBADA7wEAAAABQQAAAAFEAMDvAQAAAAEBAAAAAYQAwO8BAAAAAMEAAAABxADA7wEAAAAAQQAAAAHEAMDvAQAAAAABAAAAAgQAwO8BP////8EAAAABxADA7wE/////QQAAAAHEAMDvAT////8BAAAAAYQAwO8BP////sEAAAABRADA7wE////+gQAAAAEEAMDvAT////5BAAAAAMQAwO8BP////kEAAAAARADA7wE////+AQAAAAAEAMDvAT////5BP////8QAwO8BP////kE/////RADA7wE////+gT////8EAMDvAT////7BP////sQAwO8BP////wE////+hADA7wE/////QT////5EAMDvAT/////BP////kEAAAAAAEBARAUCMkPHaDFNrE+CgAANXAIAAAAAAEQBAKHBAAAAAAEAAAAIAuABgEH/wAAARAMB9gDAgMBAREEQ29kZQMBAQEQAwTBBAAAAAMIAAAACBADADsKAAAj8xAEBXwKAAAkCQoAADO9AxADADsGDGFjY2VwdEFjdGlvbhAEByIQBQoVBgtURGVtb1NwcmluZwEGCHlvdXJzZWxmCAAAAAAGD2NvbXBpbGVTY3JpcHRvcggAAAAAARADADsKAAAkIBAEAocEPW+bxgQAAAAgC4AGAQf/9fnxAQEBAQQAAAAACgAAOBAQDQpzCAAAAAQQBQoVCgAADmIBBhtmYW1pbHlOYW1lOnNpemU6ZW1waGFzaXplZDoIAAAAAxEHTmV3WW9yawQAAAAMBAAAAAAQBQoVCgAADmIBCgAAOO8IAAAAAxEHTmV3WW9yawQAAAAPBAAAAAAQBQoVCgAADmIBCgAAOO8IAAAAAxEHTmV3WW9yawQAAAAVBAAAAAAQBQoVCgAADmIBCgAAOO8IAAAAAxEHTmV3WW9yawQAAAAaBAAAAAABBAAAAA4EAAAADAQAAAAABAAAAAAEAAAAAAQAAAAAEAUKFQYNVGV4dENvbnN0YW50cwEGA2F0OggAAAABBhBEZWZhdWx0VGFic0FycmF5EAUKFQoAADm8AQoAADnMCAAAAAEGFkRlZmF1bHRNYXJnaW5UYWJzQXJyYXkEAAAAAgQAAAABEAMPqRHAAAEHDQlrIDwtIC01MDAuCQkJCQkJCQkic3ByaW5nIGNvbnN0YW50Ig0JdiA8LSBtYXNzMSBsb2NhdGlvbiAtIG1hc3MyIGxvY2F0aW9uLgkiYWN0dWFsIGxlbmd0aCINCW4gPC0gdiBub3JtYWxpemVkICogcmVzdC4JCQkJInJlc3QgbGVuZ3RoIg0JZiA8LSAodiAtIG4gKSAqIGsuCQkJCQkJCSJjb21wdXRlIGZvcmNlIg0JbWFzczEgYWRkRm9yY2U6Zi4JCQkJCQkiYWRkIHRvIG1hc3MxIg0JbWFzczIgYWRkRm9yY2U6ZiBuZWdhdGVkLgkJCQkiYW5kIHRvIG1hc3MyIg0QBgTtCAAAAB8EAAAAAgQAAAAJBAAAAAkEAAAAAQQAAAAPBAAAAAEEAAAAAgQAAAAmBAAAAAEEAAAADQQAAAABBAAAAB8EAAAAAQQAAAALBAAAAAEEAAAAGwQAAAABBAAAAA0EAAAAAQQAAAAQBAAAAAEEAAAACAQAAAABBAAAAAwEAAAAAQQAAAAQBAAAAAEEAAAADgQAAAABBAAAAAwEAAAAAggAAAAfCAAAAAIQAgmoBAAAAAEQAwVJARAGBcEQBQoVCgAAAGEBBhFkZXNjcmlwdGlvbk5hbWVkOggAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAOBAQAg/LCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBCAAAAAQQBgXBEAUKFQoAAABhAQoAADv4CAAAAAEREUJpdHN0cmVhbVZlcmFTYW5zBAAAAAkQBAKHBDov/6IBARACD8sIAAABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBEAYFwRAFChUKAAAAYQEKAAA7+AgAAAABERFCaXRzdHJlYW1WZXJhU2FucwQAAAAJCgAAOBAQAg/LCAAAAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBARAGBcEQBQoVCgAAAGEBCgAAO/gIAAAAARERQml0c3RyZWFtVmVyYVNhbnMEAAAACQoAADRXEAIPywgAAAEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBCAAAAAMQAgmoBAAAAAEQAwVJAQoAADvqEAMEjgQAAAABAggAAAACEAIJqAQAAAABEAMFSQEKAAA76ggAAAADEAIJqAQAAAABEAMFSQEKAAA76hACAysQBAKHBD0vi8IBAQgAAAADEAIJqAQAAAABEAMFSQEKAAA76hADBI4EAAAAAgIIAAAAAxACCagEAAAAARADBUkBCgAAO+oQAgMrEAQChwQ9L4vCAQEIAAAAAhACCagEAAAAARADBUkBCgAAO+oIAAAAAxACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAMFSQEKAAA76hACAysQBAKHBDov/6IBAQgAAAADEAIJqAQAAAABEAMEjgQAAAACAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAECEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrEAQChwQ6L/+iAQEIAAAAAxACCagEAAAAARADBI4EAAAAAgIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAMFSQEKAAA76hACAysQBAKHBDov/6IBAQgAAAADEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAICEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrEAQChwQ6L/+iAQEIAAAAAxACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAIDKxAEAocEOi6LogEBEAMFSQEKAAA76ggAAAADEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAICEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrEAQChwQ6L/+iAQEIAAAAAxACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqCAAAAAQQAgmoBAAAAAEQAwSOBAAAAAECEAIDKxAEAocEOi6LogEBEAMFSQEKAAA76ggAAAADEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oIAAAABBACCagEAAAAARADBI4EAAAAAQIQAwVJAQoAADvqEAIDKxAEAocEOi//ogEBCAAAAAMQAgmoBAAAAAEQAwSOBAAAAAICEAMFSQEKAAA76ggAAAAEEAIJqAQAAAABEAMEjgQAAAABAhADBUkBCgAAO+oQAgMrCgAAPWsEAAAAAQQAAAABBAAAAAACAQEBAQEBEAQChwQ73///AQEBARAFAtoEPW+bxgEBBAAAAAAQDAfYAwIDAQERClJlY3RhbmdsZTMDAQEBEAMEwQQAAAAECAAAAAYBARADADsKAAA0MRADBFcQEQFUCgAAJAkKAAAzvQMEAAAAAAoAADP5CgAAM+UEAAAAAAoAADP5CgAANAIKAAAz5QMDCgAAM/kKAAAz5QQAAAAABD////8BEAMAOwoAACPAEAQOLQEKAAA1LgQAAAABEAMAOwoAACQgCgAARcIQAwA7CgAAI/MKAABGCAQAAAAACgAANS4BEAQChwQmLOf/AQEQDAfYAwIDAQERDlNwcmluZ1NjcmlwdG9yAwEBEB8LUwoAADh2Bg1tb3ZlU2NyaXB0b3I6CgAAOHYKAABGwAEBCgAAOHYKAABGwAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEQAwTBBAAAAAkIAAAAGgEBAQEBAQEBEAMAOwYMc2hhZG93T2Zmc2V0EAMDvAQAAAADBAAAAAMQAwA7CgAANDEQAwRXEBEBVAoAACQUCgAAM70DBAAAAAAKAAAz+QoAADPlBAAAAAAKAAAz+QYLdG9wVG9Cb3R0b20KAAAz5QMDCgAAM/kKAAAz5QQAAAAABD////8BAQEBAQEQAwA7CgAAJCAQCAPXEAMDvAQAAAIEBAAAALYQAwO8BAAAAA0EAAAAFRADA7wE////6wQAAAANCAAAAAIQAwA7DgAAAAAAAAAAEAQChwQjG9//BAAAACALgAYBB/+Mvf8QAwA7Dj/wAAAAAAAAEAQChwQpTe//BAAAACALgAYBB/+l3v8LgOEk4gA+/4y9/xb/jL7/Lv+Nvv8m/42//xr/jr//Pv+OwP8H/4/A/z7/j8H/Ev+Pwv8y/5DC/yb/kMP/Gv+Rw/86/5HE/wr/ksT/Pv+Sxf8S/5LG/zL/k8b/Iv+Tx/8e/5TH/zr/lMj/Cv+VyP8+/5XJ/w7/lcr/Nv+Wyv8i/5bL/x7/l8v/Nv+XzP8O/5jM/z7/mM3/Dv+Yzv82/5nO/x7/mc//Iv+az/82/5rQ/w7/m9D/Pv+b0f8K/5vS/zr/nNL/Hv+c0/8i/53T/zL/ndT/Ev+e1P8+/57V/wr/ntb/Ov+f1v8a/5/X/yb/oNf/Mv+g2P8S/6HY/z7/odn/B/+h2v8+/6La/xr/otv/Jv+j2/8u/6Pc/xb/pNz/Pv+k3f8H/6Xe/wMDEAMAOwYLc2hhZG93Q29sb3IQBQLaBAAAAAAEAAAAIAuABgEHUgAAAQQAAABSEAMAOwoAACPzCgAARz4BARADADsGDWNsaXBTdWJtb3JwaHMCEAMAOwYNaGFzRHJvcFNoYWRvdwIQAwA7Bgtjb3JuZXJTdHlsZQYHcm91bmRlZAEBEAMAOwoAACPAEAQOLRAEAocEIxvf/wQAAAAgC4AGAQf/jL3/CgAASdAEAAAAASENDQ=='! !!TDemoWind class methodsFor: 'compiler' stamp: 'das 10/21/2004 23:22'!compilerClass	^TDemoCompiler! !!TDemoWind class methodsFor: 'compiler' stamp: 'das 10/21/2004 23:22'!parserClass	^TDemoParser! !!TTapestry methodsFor: 'render' stamp: 'das 10/22/2004 03:51'!doRender: ogl wire: doWire	| index m |	ogl glDisable: GLCullFace.	doWire ifFalse:[ material enable: ogl.].	1 to: xsize-1 do:[:i |	doWire ifFalse:[ ogl glBegin: GLTriangleStrip.] 		ifTrue:[ ogl glBegin: GLLineStrip.].		1 to: ysize do:[:j |			index _ (i-1*ysize)+j.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.			index _ index +ysize.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.		].		ogl glEnd.	].	doWire ifTrue:[		1 to: xsize do:[:j |			ogl glBegin: GLLineStrip.			1 to: ysize do:[:i |				ogl glVertex3fv: (masses at:(j-1*ysize)+i) location.].			ogl glEnd.		].	]	ifFalse:[material disable: ogl.]."This is to render the springs to see if these make any sense...they do now.	springs do:[:s |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: s mass1 location+(0@2@0.3).		ogl glVertex3fv: s mass2 location+(0@2@0.3).		ogl glEnd.		].""	masses do:[:ms |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: ms location.		ogl glVertex3fv: ms location - ms normal.		ogl glEnd.		]."	ogl setCull.! !!TTapestry methodsFor: 'render' stamp: 'das 10/22/2004 04:01' prior: 33762798!render: ogl	deltaTrans ~=0.0 ifTrue:[		material transparency: material transparency + deltaTrans.		material transparency > 1.0 ifTrue:[material transparency: 1.0. deltaTrans _ 0.0].		material transparency < 0.0 ifTrue:[material transparency: 0.0. deltaTrans _ 0.0].		].	material transparency == 1.0 ifTrue:[		self doRender: ogl wire: false.]	ifFalse: [self doRender: ogl wire: true.].! !!TTapestry methodsFor: 'render' stamp: 'das 10/22/2004 03:57'!renderAlpha: ogl	self doRender: ogl wire: false.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 03:30' prior: 33768967!initialize	super initialize.	time _ 0.0.	material _ TMaterial new.	material ambientColor:#(1 1 1 1)asFloatArray.	material diffuseColor: #(1 1 1 1)asFloatArray.	self reset.	self compute.	wire _ true.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 04:05'!release"release the tack points"	tackPoints do:[:tp | (masses at: tp) mass: 1.0.].	topLeft mass:0.0.	topRight mass:0.0.	deltaTrans _ 0.001.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 04:03' prior: 33843724!reset	| m s scl |	masses _ OrderedCollection new.	springs _ OrderedCollection new.	tackPoints _ OrderedCollection new.	wind _ TWind new initialize.		xsize _ 18.	ysize _ 9.	scl _ 1.0.	1 to: xsize do:[:i |		1 to: ysize do:[:j |			m _ TMass new.			m force: 0@0@0.			m location: scl*((i-1)@0@(j-1)).			m uv: ((m location x/(xsize-1))@((m location z/(ysize-1))))/scl.			j = 1 ifTrue:[m location: m location + (0@(scl negated)@scl)].			j = ysize ifTrue:[m location: m location + (0@(scl negated)@scl negated)].			m mass: 1.0.			m normal: (0@0@1).			masses add: m.		].	].	1 to: xsize do:[:i |		1 to: ysize do:[:j |			j~=ysize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i-1*ysize+j+1).				springs add: s.				].			i~=xsize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i*ysize+j).				springs add: s.				].			(i ~= xsize and:[j~=ysize])ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j+1) mass: (masses at:i*ysize+j).				springs add: s.					].		"	s _ TSpring new.			s mass: (masses at:i-1*xsize+j+1) mass: (masses at:i*xsize+j).			springs add: s."		]	].	topLeft _ masses at:1.	topRight _ masses at: masses size -ysize+1.	bottomLeft _ masses at:ysize.	bottomRight _ masses at: masses size."set the tack points"	tackPoints add:1.	tackPoints add: 2.	tackPoints add: ysize.	tackPoints add: ysize-1.	tackPoints add: masses size-ysize+1.	tackPoints add: masses size-ysize+2.	tackPoints add: masses size - 1.	tackPoints add: masses size.	tackPoints do:[:tp | (masses at: tp) mass: 0.0.].	boundSphere _ TBoundSphere new.	boundSphere frame: self.	self initBounds. 	material transparency: 0.0.	deltaTrans _ 0.0.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 03:53'!hasAlpha	^ material hasAlpha.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 03:44' prior: 33735996!texture	^ material texture.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 03:30' prior: 33736086!texture: txtr	material texture: txtr.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/21/2004 22:50'!addForce: f	masses do:[ :m | m addForce: f. ].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/22/2004 02:38'!addWind	wind compute.	wind on ifTrue:[		masses do:[ :m | m addWindForce: wind force norm: wind direction. ].].! !!TTapestry methodsFor: 'compute' stamp: 'das 10/22/2004 02:33' prior: 34520297!compute	self computeNorms.	"true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. ""set force to the gravity"	true ifTrue:[		self addWind.		springs do:[ :s | s compute. ]. 		masses do:[ :m | m compute. ].		self addWind.		].	self initBounds.	self future: 10 perform: #compute.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/21/2004 22:52'!computeNorms	| index mn |	1 to: xsize - 1 do:[:i |		1 to: ysize - 1 do:[ :j |			index _ i-1*ysize+j.			mn _ masses at: index.			mn normal: 				(((masses at: index +1 ) location - mn location) cross: 				((masses at: index + ysize)location - mn location))safelyNormalized.			].			index _ i*ysize.			mn _ masses at: index.			mn normal: 				((mn location - (masses at: index - 1 ) location) cross: 				((masses at: index + ysize)location - mn location))normalized.		].	masses size - xsize to: masses size do:[ :in | 		(masses at: in) normal: (masses at: in - ysize)normal].! !!TTapestry methodsFor: 'events' stamp: 'das 10/22/2004 02:11' prior: 33875227!keyDown: pointer	| c |	c _ pointer event2D keyCharacter.	c = $t ifTrue:[		self meta wire: wire not.		].	c = $r ifTrue:[		self meta reset.		].	c = $m ifTrue:[		masses anyOne class openScriptor.	].	c = $s ifTrue:[		springs anyOne class openScriptor.	].	c = $w ifTrue:[		wind class openScriptor.	].	c =$f ifTrue:[		self meta release.		].! !TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs wind material deltaTrans tuv normals boundSphere time wire xsize ysize tackPoints topLeft topRight bottomLeft bottomRight '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoParser.4.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #117] on 22 October 2004 at 4:59:59 am'!Object subclass: #TMass	instanceVariableNames: 'location iLocation velocity mass force uv normal '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!TMass subclass: #TDemoMass	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!TSpring subclass: #TDemoSpring	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!Object subclass: #TWind	instanceVariableNames: 'time force direction on '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!TWind subclass: #TDemoWind	instanceVariableNames: ''	classVariableNames: 'Scriptor '	poolDictionaries: ''	category: 'TuringDemo'!!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:26' prior: 34400651!<> anObject	^self ~= anObject! !!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:27' prior: 34400765!increaseBy: anObject	^self += anObject! !!Object methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:27' prior: 34400888!multiplyBy: anObject	^self *= anObject! !!B3DFloatArray methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:29' prior: 34401018!reset	"Make me zero"	1 to: self basicSize do:[:i| self basicAt: i put: 0].! !!Float class methodsFor: 'constants' stamp: 'das 10/21/2004 23:36'!twoPi	^ Twopi! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 10/22/2004 03:32' prior: 34460007!initializeDefaultSpace	| space tframe texture |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space."	texture _ TTexture				new initializeWithFileName: 'CanadaFlag.png'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@7.0@5.	space addChild: tframe."	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	"self makeStartupLink: space."	^space! !!TDemoMass methodsFor: 'compute' stamp: 'das 10/22/2004 04:14' prior: 34401177!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"reset force"!]style[(49 1 10 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc226255226,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc226255226! !!TMass class methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:38' prior: 34403855!new	^TDemoMass basicNew! !!TSpring methodsFor: 'accessing' stamp: 'das 10/21/2004 22:48' prior: 34520185!compute		| v n k |	k _ -700.	v _ (mass1 location - mass2 location).	n _ v normalized * rest.	v _ (v-n)*k.	mass1 addForce: v.	mass2 addForce: v negated.! !!TDemoSpring methodsFor: 'accessing' stamp: 'das 10/22/2004 04:14'!compute	k <- -1600.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1bFBitstreamVeraSans#12.0,f1bc223223223FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1bFBitstreamVeraSans#12.0,f1bc223223223FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c223255223! !!TSpring class methodsFor: '*TuringDemo' stamp: 'ar 10/19/2004 17:38' prior: 34403970!new	^TDemoSpring basicNew! !!TWind methodsFor: 'as yet unclassified' stamp: 'das 10/21/2004 22:43'!compute	| windPeriod windPhase twoPi scl |	scl _ 0.5.	windPeriod _ 15.0.	windPhase _ 0.9.	twoPi _ 2 * Float pi.	force _scl * (B3DVector3 x: 0.5 * (( time * twoPi/(windPeriod * windPhase)) cos) 		y: 0.5 * ((time * twoPi/windPeriod) sin)		z: -4.0).	direction _ force normalized.	time _ time + 0.04.! !!TWind methodsFor: 'as yet unclassified' stamp: 'das 10/21/2004 22:44'!direction	^ direction.! !!TWind methodsFor: 'as yet unclassified' stamp: 'das 10/21/2004 22:44'!force 	^ force.! !!TWind methodsFor: 'as yet unclassified' stamp: 'das 10/22/2004 02:29'!initialize	time _ 0.0.	on _ false.! !!TWind methodsFor: 'as yet unclassified' stamp: 'das 10/22/2004 02:30'!on	^ on.! !!TDemoWind methodsFor: 'compute' stamp: 'das 10/22/2004 04:14'!computeon <- false.									"turn wind on/off"Test on	Yes	scl <- 0.40.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.04.					"next time"	End.!]style[(8 21 1 16 1 1 13 1 20 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0! !!TWind class methodsFor: 'as yet unclassified' stamp: 'das 10/21/2004 23:38'!new	^TDemoWind basicNew! !!TWind class methodsFor: 'as yet unclassified' stamp: 'das 10/21/2004 23:38'!openScriptor! !'From Jasmine-rc1 of 7 October 2004 [latest update: #117] on 21 October 2004 at 7:41:31 pm'!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #117] on 21 October 2004 at 7:59:48 pm'!----End fileIn of a stream----!'From Jasmine-rc1 of 7 October 2004 [latest update: #117] on 21 October 2004 at 7:59:48 pm'!----End fileIn of a stream----!"Postscript:Initialize the scriptor object."  TDemoMass loadScriptor.   TDemoSpring loadScriptor.   TDemoWind loadScriptor!----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoFlag.4.cs----!----SNAPSHOT----#(22 October 2004 4:44:57 am) Croq0.1-118-Flag.image priorSource: 966191!----QUIT----#(22 October 2004 4:45:14 am) Croq0.1-118-Flag.image priorSource: 1074378!----STARTUP----#(22 October 2004 4:52:31 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croq0.1-118-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 04:54' prior: 34622151!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.00 @ -0.0 @ 0.00).					"reset force"!]style[(49 1 10 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 04:55' prior: 34629208!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.00 @ -3.5 @ 0.00).					"reset force"!]style[(49 1 10 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 04:55' prior: 34630689!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- mass * force. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.995. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"reset force"!]style[(49 1 10 1 31 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc225255225,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc225255225! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 04:56' prior: 34623965!compute	k <- -1600.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -500.0.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 32 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1bFBitstreamVeraSans#12.0,f1bc222222222FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1bFBitstreamVeraSans#12.0,f1bc222222222FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c222255222! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 04:57' prior: 34626286!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 0.40.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.04.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 20 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(22 October 2004 5:00:21 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croq0.1-118-Flag.image!----QUIT----#(22 October 2004 5:00:42 am) Croq0.1-118-Flag.image priorSource: 1074469!----STARTUP----#(22 October 2004 1:38:12 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\Croq0.1-118-Flag.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 22 October 2004 at 4:11:15 pm'!Object subclass: #TMass	instanceVariableNames: 'location iLocation velocity mass force uv normal gravity '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs wind material deltaTrans tuv normals boundSphere time wire xsize ysize tackPoints topLeft topRight bottomLeft bottomRight matTxtr mat linkLength '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!!TDemoSpring methodsFor: 'accessing' stamp: 'das 10/22/2004 15:43' prior: 34623965!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1bc221221221FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1bFBitstreamVeraSans#12.0,f1bc221221221FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c221255221! !!TMass methodsFor: 'accessing' stamp: 'das 10/22/2004 12:07'!iLocation	^ iLocation.! !!TMass methodsFor: 'accessing' stamp: 'das 10/22/2004 11:41'!iLocation: loc	iLocation _ loc.! !!TMass methodsFor: 'accessing' stamp: 'das 10/22/2004 13:03' prior: 33842923!location: loc	location _ loc.	iLocation _ loc.	velocity _ 0@0@0.	force _ 0@0@0.	gravity _ 0@0@0.! !!TMass methodsFor: 'compute' stamp: 'das 10/22/2004 12:10'!restore	| v l |	location ~= iLocation ifTrue:[		"move the point slowly towards the iLocation"		v _ (iLocation - location).		l _ v length.		l <= 0.02 ifTrue:[location _ iLocation]		ifFalse:[ location := location + (0.1*v/l).].		^ false] ifFalse:[^ true].! !!TDemoMass methodsFor: 'compute' stamp: 'das 10/22/2004 15:51' prior: 34622151!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"force reset.!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 2 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc220255220,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc220255220! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/22/2004 15:36'!makeBridge: ptr	| bridge texture |	texture _ TTexture				new initializeWithFileName: 'CanadaFlag.png'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/22/2004 14:40'!makeBridgeButton	| bttn tframe len |	tframe _ TTapestry new initialize.	tframe extent: 7@5.	len _ 0.15.	tframe linkLength: len.	tframe translation: (7@0@5)*len/-2.0.	bttn _ TButton new initializeWithFrame: tframe.	bttn persist: true.	bttn target: self action: #makeBridge:.	bttn spin: true.	^ bttn.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/22/2004 14:39' prior: 33705492!makePopup	| tframe |	popup ifNotNil:[		(popup isChild: camLoc) ifTrue:[ self killPopup. popup _ nil. ^self.].		].	tframe _ TButtonHolder new."	tframe addChild: self makeEditBoxButton.	tframe addChild: self makeBoxButton."	tframe addChild: self makeXTerminalButton.	tframe addChild: self makePortalButton.	tframe addChild: self makePortal3DButton.	tframe addChild: self makeWireFilterButton.	tframe addChild: self makeExitButton.	tframe addChild: self makeCADButton.	tframe addChild: self makeBridgeButton.	tframe addChild: self makeBrowserButton.	popup _ TWindow new.	popup translationX: 0 y: 0.0 z: -6.0.	popup contents3D: tframe.	popup radius: 0.1.	popup fullBright: true.! !!TSpace methodsFor: 'ambient sound' stamp: 'das 10/22/2004 13:28'!loadAmbientSound: soundName	| myFile mySound fd |	fd _ (FileDirectory default directoryNamed:'sounds').	(fd fileExists: soundName) ifFalse:[^self].	myFile _ MPEGFile openFile: (fd fullNameFor: soundName).	mySound _ myFile audioPlayerForChannel: 1.	mySound repeat: false.	mySound volume: 1.0.	^mySound! !!TTapestry methodsFor: 'render' stamp: 'das 10/22/2004 11:50' prior: 34613024!doRender: ogl wire: doWire	| index m |	ogl glDisable: GLCullFace.	1 to: xsize-1 do:[:i |	doWire ifFalse:[ ogl glBegin: GLTriangleStrip.] 		ifTrue:[ ogl glBegin: GLLineStrip.].		1 to: ysize do:[:j |			index _ (i-1*ysize)+j.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.			index _ index +ysize.			m _ masses at: index.			ogl glNormal3fv: m normal.			ogl glTexCoord2f: m uv x with: m uv y.			ogl glVertex3fv: m location.		].		ogl glEnd.	].	doWire ifTrue:[		1 to: xsize do:[:j |			ogl glBegin: GLLineStrip.			1 to: ysize do:[:i |				ogl glVertex3fv: (masses at:(j-1*ysize)+i) location.].			ogl glEnd.		].	]."This is to render the springs to see if these make any sense...they do now.	springs do:[:s |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: s mass1 location+(0@2@0.3).		ogl glVertex3fv: s mass2 location+(0@2@0.3).		ogl glEnd.		].""	masses do:[:ms |		ogl glBegin: GLLineStrip.		ogl glVertex3fv: ms location.		ogl glVertex3fv: ms location - ms normal.		ogl glEnd.		]."	ogl setCull.! !!TTapestry methodsFor: 'render' stamp: 'das 10/22/2004 12:09' prior: 34614294!render: ogl	deltaTrans ~=0.0 ifTrue:[		matTxtr transparency: matTxtr transparency + deltaTrans.		matTxtr transparency > 1.0 ifTrue:[matTxtr transparency: 1.0. deltaTrans _ 0.0].		matTxtr transparency < 0.0 ifTrue:[matTxtr transparency: 0.0. deltaTrans _ 0.0].		mat transparency: 1.0-matTxtr transparency.		].matTxtr transparency ~=0.0 ifTrue:[bottomLeft restore].mat ambientColor:#(0.3 0.3 0.5 1.0)asFloatArray.	mat transparency = 1.0 ifTrue:[		mat enable: ogl.		self doRender: ogl wire: true.		mat disable: ogl.].	matTxtr transparency = 1.0 ifTrue:[		matTxtr enable: ogl.		self doRender: ogl wire: false.		matTxtr disable: ogl.		].! !!TTapestry methodsFor: 'render' stamp: 'das 10/22/2004 11:55' prior: 34614754!renderAlpha: ogl	mat transparency ~= 1.0 ifTrue:[		mat enable: ogl.		self doRender: ogl wire: true.		mat disable: ogl.].	matTxtr transparency ~= 1.0 ifTrue:[		matTxtr enable: ogl.		self doRender: ogl wire: false.		matTxtr disable: ogl.		].! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 13:11' prior: 33768556!initBounds	| box |	box _ TBox new.	box growVertex: (masses at: 1) location.	box growVertex: (masses at: ysize) location.		box growVertex: (masses at: masses size-ysize+1) location.		box growVertex: (masses at: masses size) location.	box extent max > 1000.0 ifTrue:[self reset].	boundSphere localPosition: box center radius: box radius.	boundSphere box: box.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 15:10' prior: 34614892!initialize	super initialize.	time _ 0.0.	xsize _ 18.	ysize _ 9.	linkLength _ 1.0.	mat _ TMaterial new.	mat ambientColor:#(1 1 1 1)asFloatArray.	mat diffuseColor: #(1 1 1 1)asFloatArray.	matTxtr _ TMaterial new.	matTxtr ambientColor:#(1 1 1 1)asFloatArray.	matTxtr diffuseColor: #(1 1 1 1)asFloatArray.	self reset.	wire _ true.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 15:38' prior: 34615170!release"release the tack points"	tackPoints do:[:tp | (masses at: tp) mass: 1.0.].	topLeft mass:0.0.	bottomLeft mass:0.0.	deltaTrans _ 0.003.	self root ambientSoundPlaying ifFalse:[		self root ambientSound: (self root loadAmbientSound:'CanadaX.mp3').		self root startAmbientSound.	].! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 15:44' prior: 34615402!reset	| m s |	self root ~= self ifTrue:[		self root stopAmbientSound.].	masses _ OrderedCollection new.	springs _ OrderedCollection new.	tackPoints _ OrderedCollection new.	wind _ TWind new initialize.		1 to: xsize do:[:i |		1 to: ysize do:[:j |			m _ TMass new.			m force: 0@0@0.			m location: linkLength*((i-1)@0@(j-1)).			m uv: ((m location x/(xsize-1))@(1-(m location z/(ysize-1))))/linkLength.			j = 1 ifTrue:[m location: m location + (0@(linkLength negated)@linkLength)].			j = ysize ifTrue:[m location: m location + (0@(linkLength negated)@linkLength negated)].			m mass: 1.0.			m normal: (0@0@1).			masses add: m.		].	].	1 to: xsize do:[:i |		1 to: ysize do:[:j |			j~=ysize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i-1*ysize+j+1).				springs add: s.				].			i~=xsize ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j) mass: (masses at:i*ysize+j).				springs add: s.				].			(i ~= xsize and:[j~=ysize])ifTrue:[				s _ TSpring new.				s mass: (masses at:i-1*ysize+j+1) mass: (masses at:i*ysize+j).				springs add: s.					].		"	s _ TSpring new.			s mass: (masses at:i-1*xsize+j+1) mass: (masses at:i*xsize+j).			springs add: s."		]	].	topLeft _ masses at:1.	topRight _ masses at: masses size -ysize+1.	bottomLeft _ masses at:ysize.	bottomRight _ masses at: masses size.	bottomLeft iLocation:linkLength*(0@(ysize)@0)."set the tack points"	tackPoints add:1.	tackPoints add: 2.	tackPoints add: ysize.	tackPoints add: ysize-1.	tackPoints add: masses size-ysize+1.	tackPoints add: masses size-ysize+2.	tackPoints add: masses size - 1.	tackPoints add: masses size.	tackPoints do:[:tp | (masses at: tp) mass: 0.0.].	boundSphere _ TBoundSphere new.	boundSphere frame: self.	self initBounds. 	matTxtr transparency: 0.0.	mat transparency: 1.0.	deltaTrans _ 0.0.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/22/2004 14:50'!terminate	self root ~= self ifTrue:[		self root stopAmbientSound.].	masses _ nil.	self removeSelf.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 13:57'!boundingBox		^ boundSphere box.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 14:37'!colorize: clr	mat ambientColor: clr.	mat diffuseColor: clr! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 14:41'!extent	^ xsize@ysize.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 13:48'!extent: ext	xsize _ ext x.	ysize _ ext y.	self reset.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 11:52' prior: 34617216!hasAlpha	^ mat hasAlpha.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 14:15'!linkLength		^ linkLength.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 14:15'!linkLength: ll		linkLength _ ll.	self reset.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 14:35'!material: m	mat _ m.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 11:49' prior: 34617333!texture	^ matTxtr texture.! !!TTapestry methodsFor: 'accessing' stamp: 'das 10/22/2004 11:46' prior: 34617448!texture: txtr	matTxtr texture: txtr.! !!TTapestry methodsFor: 'compute' stamp: 'das 10/22/2004 14:48' prior: 34617872!compute	masses ifNil:[ ^ self ].	self computeNorms.	"true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. ""set force to the gravity"	true ifTrue:[		self addWind.		springs do:[ :s | s compute. ]. 		masses do:[ :m | m compute. ].		self addWind.		springs do:[ :s | s compute. ]. 		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 10 perform: #compute.! !!TTapestry methodsFor: 'events' stamp: 'das 10/22/2004 14:50' prior: 34618901!keyDown: pointer	| c |	c _ pointer event2D keyCharacter.	c = $t ifTrue:[		self meta wire: wire not.		].	c = $r ifTrue:[		self meta reset.		].	c = $m ifTrue:[		masses anyOne class openScriptor.	].	c = $s ifTrue:[		springs anyOne class openScriptor.	].	c = $w ifTrue:[		wind class openScriptor.	].	c =$f ifTrue:[		self meta release.		].	c =$D ifTrue:[		self meta terminate.		].! !!TWind methodsFor: 'as yet unclassified' stamp: 'das 10/22/2004 13:04'!on: bool	on _ bool.! !!TDemoWind methodsFor: 'compute' stamp: 'das 10/22/2004 15:43' prior: 34626286!computeon <- false.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 21 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c219255219,f1bFBitstreamVeraSans#12.0! !!TDemoWind class methodsFor: 'scriptor' stamp: 'das 10/22/2004 13:07' prior: 34584633!initScriptor	"self initScriptor"	Scriptor := (FileStream readOnlyFileNamed: 'WindScriptor.morph') fileInObjectAndCode.! !!TeapotMorph methodsFor: 'initialization' stamp: 'das 10/22/2004 15:21' prior: 33668855!initializeDefaultSpace	| space tframe waveDemo |"self initializeTweakWorld.""self makeJIVE."	space _ TSpace new.	space url: 'http://www.reed.com/TeaLand/spaces/intro.tea'.	activeCamera avatar enter: space."	space ambientSound: (self loadAmbientSound:'intro.mp3')."	self makeLight: space.	self world doOneCycleNow.	txtr _ TTexture				new initializeWithFileName: 'checker.bmp'				mipmap: true				shrinkFit: false.		self makeFloor: space fileName:'lawn.BMP'.	self world doOneCycleNow.	waveDemo _ self makeWaveDemo: space.	self makeWaveDemo: waveDemo at: -30@-1@-30 in: space.	self makeWaveDemo: waveDemo at: 30@-1@-30 in: space.	self makeWaveDemo: waveDemo at: 30@-1@30 in: space.	self makeWaveDemo: waveDemo at: -30@-1@30 in: space.	self world doOneCycleNow.	self makeKay: space.	self world doOneCycleNow.	self makeMirror: space. 	self world doOneCycleNow."	self makeMirror2: space."	self makePyramid: space.	self world doOneCycleNow.	"self makeUnderwater: space."	self makeUnderwater3: space.	self world doOneCycleNow.	self makePopUp: space.	self world doOneCycleNow.	self makeChess: space.	self world doOneCycleNow.	self makeProjectLink: space.	self world doOneCycleNow.	self makeFlash: space.	self world doOneCycleNow."	self makeStartupLink: space."	self world doOneCycleNow."	self makeGallery: space."	self world doOneCycleNow.	self makeDungeon: space.	self world doOneCycleNow.	self make3Body: space.	self world doOneCycleNow.	"self makeSolar: space."	self makeClock: space.	self world doOneCycleNow.	self makeSlime: space.	self world doOneCycleNow.	self makeMars: space.	self world doOneCycleNow."	self makeManual: space."	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	self world doOneCycleNow."	tframe _ TPortal3D initializeWithSpace: space.	win _ TWindow new.	win translationX: -12 y: 0.0 z: 5.0.	win contents3D: tframe.	space addChild: win."	^space! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 10/22/2004 15:21' prior: 34621151!initializeDefaultSpace	| space tframe |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space.""	texture _ TTexture				new initializeWithFileName: 'CanadaFlag.png'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@4.0@5.	space addChild: tframe.""	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	"self makeStartupLink: space."	^space! !TTapestry removeSelector: #scale:!TFrame subclass: #TTapestry	instanceVariableNames: 'masses springs wind mat matTxtr deltaTrans tuv boundSphere time wire xsize ysize linkLength tackPoints topLeft topRight bottomLeft bottomRight '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!Object subclass: #TMass	instanceVariableNames: 'location iLocation velocity mass force gravity uv normal '	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Flag'!----End fileIn of C:\Documents and Settings\Panasonic\Desktop\Jasmine\TDemoBridge.3.cs----!----SNAPSHOT----#(22 October 2004 1:38:51 pm) OOPSLA-118-Flag.image priorSource: 1082529!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:47' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:47' prior: 34657145!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:48' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -500.0.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 32 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:49' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(22 October 2004 1:54:38 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\OOPSLA-118-Flag.image!!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:57' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:57' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 13:57' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !----STARTUP----#(22 October 2004 4:37:41 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\OOPSLA-118-Flag.image!----SNAPSHOT----#(22 October 2004 4:39:54 pm) LoadedOOPSLA-118-Flag.image priorSource: 1102529!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:40' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:41' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:42' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(22 October 2004 4:45:28 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:46' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:46' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:46' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(22 October 2004 4:47:56 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:48' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:49' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 16:49' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(22 October 2004 6:33:07 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 18:34' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 18:34' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/22/2004 18:34' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(23 October 2004 6:39:32 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/23/2004 06:46' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/23/2004 06:46' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/23/2004 06:46' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/23/2004 06:50' prior: 34690963!computeon <- false.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 21 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/23/2004 06:51' prior: 34692776!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(23 October 2004 10:27:39 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!'From Vancouver1.0 of 28 September 2004 [latest update: #329] on 23 October 2004 at 10:26:52 am'!----STARTUP----#(23 October 2004 10:31:15 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!'From Vancouver1.0 of 28 September 2004 [latest update: #271] on 8 October 2004 at 6:50:22 pm'!----STARTUP----#(23 October 2004 10:35:38 am) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!'From TeaSqueak3.2 of 19 September 2002 [latest update: #450] on 4 October 2004 at 2:15:22 pm'!----STARTUP----#(24 October 2004 6:10:12 pm) as C:\Documents and Settings\Panasonic\Desktop\Jasmine\LoadedOOPSLA-118-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'ack 10/24/2004 18:11' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'ack 10/24/2004 18:11' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 30 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'ack 10/24/2004 18:12' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(25 October 2004 9:06:18 am) as C:\JCroquet\LoadedOOPSLA-118-Flag.image!!TeapotMorph methodsFor: 'toys' stamp: 'dsa 10/25/2004 09:08' prior: 33658637!makeMars: sp	| win sp2 p1 p2 lt tframe pic rover |	p1 _ TPortal new.	lt _ TLight new.	lt rotationAroundZ: 120.	lt addRotationAroundY: 2.	lt translationX: 10 y: 0 z:10.	sp2 _ TSpace new.	sp2 addChild: lt.	sp2 color:(Color r: 0.6 g: 0.5 b: 0.2).	sp2 url: 'http://www.reed.com/TeaLand/spaces/redplanet.tea'.	win _ TWindow new.	win translationX: -20 y: 0.0 z: 0.0.	win contents: p1.	sp addChild: win.	pic _ TTexture new initializeWithFileName: 'McCahill.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	p2 _ TPortal new.	win _ TWindow new.	win rotationAroundY: 225.	win translationX: 40.0 y:-17.0 z: 40.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.	self world doOneCycleNow.	rover _ TRover new.	rover translationX:10 y:-19.11 z:0.	sp2 addChild: rover.	self world doOneCycleNow.	tframe _ self loadURL: 'http://www.reed.com/TeaLand/spaces/mars.tea'.	tframe ifNil:[		tframe _ (TLoad3DSMax new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'mars'. 'masterTerrain.ase'}) scale: 0.05) frame."		tframe rotationAroundX: -90."		tframe boundsDepth: 2.		tframe initBounds.		TExporter export: tframe asBinary:'http://www.reed.com/TeaLand/spaces/mars.tea'.		].	tframe translationX: 0.0 y: 22.0 z:0.0.	TQuadTree new initializeWithSpace: sp2 frame: tframe. 	self makeSnapshot: sp2 angle: 15 translation:(B3DVector3 x:21.26738166809082 y:-17.4773292541504 z:38.1824035644531).! !!TeapotMorph methodsFor: 'toys' stamp: 'dsa 10/25/2004 09:51'!updateAvatarX	"Update my avatar by replicating it among all of the members of my party"	| old new |	old := activeCamera avatar.Transcript show: 'Out with the old: '; show: old teaObjectName;cr.	new := TAvatar meta new.	new meta loadAvatar: avatarPath.	new meta nickname: self nickname.	new meta host: self localTeaHost hostName.	new meta localTransform: old localTransform.Transcript show: 'In with the new: '; show: new teaObjectName;cr.	"Install it"	old parent meta addChild: new.	activeCamera avatar: new.Transcript show: 'Whas that again?: '; show: old teaObjectName;cr;cr.	^old! !!TeapotMorph methodsFor: 'toys' stamp: 'dsa 10/25/2004 09:52' prior: 52846038!updateAvatar	"Update my avatar by replicating it among all of the members of my party"	| old new |	old := activeCamera avatar.Transcript show: 'Out with the old: '; show: old teaObjectName;cr.	new := TAvatar new.	new loadAvatar: avatarPath.	new nickname: self nickname.	new host: self localTeaHost hostName.	new localTransform: old localTransform.Transcript show: 'In with the new: '; show: new teaObjectName;cr.	"Install it"	old parent addChild: new.	activeCamera avatar: new.Transcript show: 'Whas that again?: '; show: old teaObjectName;cr;cr.	^old! !!TeapotMorph methodsFor: 'toys' stamp: 'dsa 10/25/2004 09:53' prior: 34704300!updateAvatar	"Update my avatar by replicating it among all of the members of my party"	| old new |	old := activeCamera avatar.Transcript show: 'Out with the old: '; show: old teaObjectName;cr.	new := TAvatar meta new.	new meta loadAvatar: avatarPath.	new meta nickname: self nickname.	new meta host: self localTeaHost hostName.	new meta localTransform: old localTransform.Transcript show: 'In with the new: '; show: new teaObjectName;cr.	"Install it"	old parent meta addChild: new.	activeCamera avatar: new.Transcript show: 'Whas that again?: '; show: old teaObjectName;cr;cr.	^old! !TeapotMorph removeSelector: #updateAvatarX!----STARTUP----#(25 October 2004 7:05 am) as C:\JCroquet\LoadedOOPSLA-118-Flag.image!!TeapotMorph methodsFor: 'toys' stamp: 'das 10/25/2004 07:06' prior: 33658637!makeMars: sp	| win sp2 p1 p2 lt tframe pic rover |	p1 _ TPortal new.	lt _ TLight new.	lt rotationAroundZ: 120.	lt addRotationAroundY:2.	lt translationX: 10 y: 0 z:10.	sp2 _ TSpace new.	sp2 addChild: lt.	sp2 color:(Color r: 0.6 g: 0.5 b: 0.2).	sp2 url: 'http://www.reed.com/TeaLand/spaces/redplanet.tea'.	win _ TWindow new.	win translationX: -20 y: 0.0 z: 0.0.	win contents: p1.	sp addChild: win.	pic _ TTexture new initializeWithFileName: 'McCahill.bmp'				mipmap: true				shrinkFit: false.	win rectFront: pic.	win closeContents.	p2 _ TPortal new.	win _ TWindow new.	win rotationAroundY: 225.	win translationX: 40.0 y:-17.0 z: 40.0.	win contents: p2.	sp2 addChild: win.	p1 linkPortal: p2.	self world doOneCycleNow.	rover _ TRover new.	rover translationX:10 y:-19.11 z:0.	sp2 addChild: rover.	self world doOneCycleNow.	tframe _ self loadURL: 'http://www.reed.com/TeaLand/spaces/mars.tea'.	tframe ifNil:[		tframe _ (TLoad3DSMax new initializeWithFileName: (FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'mars'. 'masterTerrain.ase'}) scale: 0.05) frame."		tframe rotationAroundX: -90."		tframe boundsDepth: 2.		tframe initBounds.		TExporter export: tframe asBinary:'http://www.reed.com/TeaLand/spaces/mars.tea'.		].	tframe translationX: 0.0 y: 22.0 z:0.0.	TQuadTree new initializeWithSpace: sp2 frame: tframe. 	self makeSnapshot: sp2 angle: 15 translation:(B3DVector3 x:21.26738166809082 y:-17.4773292541504 z:38.1824035644531).! !----SNAPSHOT----#(25 October 2004 7:09:55 am) LoadedOOPSLA-119-Flag.image priorSource: 1113860!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:11' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:12' prior: 34707451!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:12' prior: 34637825!compute	k <- -500.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:13' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !ambientSound!!TSpace methodsFor: 'ambient sound' stamp: 'das 10/25/2004 07:14' prior: 34643178!loadAmbientSound: soundName	| myFile mySound fd |	fd _ (FileDirectory default directoryNamed:'sounds').	(fd fileExists: soundName) ifFalse:[^nil].	myFile _ MPEGFile openFile: (fd fullNameFor: soundName).	mySound _ myFile audioPlayerForChannel: 1.	mySound repeat: false.	mySound volume: 1.0.	^mySound! !----STARTUP----#(25 October 2004 7:18:23 am) as C:\JCroquet\LoadedOOPSLA-119-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:19' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:19' prior: 34714179!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:19' prior: 34637825!compute	k <- -500.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:19' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(25 October 2004 7:24:29 am) as C:\JCroquet\LoadedOOPSLA-119-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:25' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:25' prior: 34720500!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 4)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:26' prior: 34637825!compute	k <- -500.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:26' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(25 October 2004 7:28:21 am) as C:\JCroquet\LoadedOOPSLA-119-Flag.image!!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/25/2004 07:30' prior: 34641509!makeBridge: ptr	| bridge texture |	texture _ TTexture meta				new meta initializeWithFileName: 'CanadaFlag.png'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge meta texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 07:33' prior: 34651393!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c218255218,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'compute' stamp: 'das 10/25/2004 07:36' prior: 34727353!computeon <- false.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 21 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c217255217,f1bFBitstreamVeraSans#12.0! !----SNAPSHOT----#(25 October 2004 7:37:10 am) LoadedOOPSLA-119-Flag.image priorSource: 1152829!----STARTUP----#(25 October 2004 7:48:06 am) as C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\LoadedOOPSLA-119-Flag.image!!TDemoWind methodsFor: 'compute' stamp: 'das 10/25/2004 07:48' prior: 34729154!computeon <- false.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 21 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c216255216,f1bFBitstreamVeraSans#12.0! !----SNAPSHOT----#(25 October 2004 7:49:08 am) LoadedOOPSLA-119-Flag.image priorSource: 1176443!----SNAPSHOT----#(25 October 2004 7:51:29 am) LoadedOOPSLA-119-Flag.image priorSource: 1178477!----STARTUP----#(25 October 2004 8:32:44 am) as C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\LoadedOOPSLA-119-Flag.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #119] on 23 October 2004 at 3:12:59 pm'!"Change Set:		StickyDate:			23 October 2004Author:			David A. SmithWhen we select the big down arrow at the top of a window, this usually means that we want to use it in a first person mode. Now when this happens, you automatically switch to first person, until you leave, when you revert back to normal."!!TAvatar methodsFor: 'accessing' stamp: 'das 10/23/2004 15:09'!sticky	^ sticky.! !!TUserCamera methodsFor: 'transform' stamp: 'das 10/23/2004 15:10' prior: 34449897!followAvatar	| at ct trans bt weight |	avatar driving ifTrue:[avatar meta driveStep].	(thirdPerson ~= 0.0 and: [avatar sticky not]) ifTrue:[		at_ avatar globalTransform.		ct _ self localTransform.		weight := 1.0 / (thirdPersonLag max: 1).		trans _ B3DMatrix4x4 identity. 		trans translation: (B3DVector3 x:0.0 y:0.7 z: 4)*thirdPerson.		bt _ at composeWith: trans. "This is the target position of the camera"		trans _ ct translation + ((bt translation - ct translation) * weight)."at translation ~= ct translation ifTrue:[		self lookAt:at translation up: (B3DVector3 x:0 y:1 z:0) * thirdPerson.].self translation: trans."		currentSpace _ avatar root.		at _ at asQuaternion.		ct _ ct asQuaternion.		ct_ct slerpTo: at at: weight.		self localTransform: (ct asMatrix4x4 translation:trans).	]ifFalse:[		currentSpace _ avatar root.		self localTransform: avatar globalTransform.	].	pointer cameraTransform: self localTransform.	thirdPersonDelta ~=0 ifTrue:[		thirdPerson _ thirdPerson + thirdPersonDelta.		thirdPerson <= 0.0 ifTrue:[thirdPersonDelta _ 0. thirdPerson _ 0.0.].		thirdPerson >=1.0 ifTrue:[ thirdPersonDelta _ 0. thirdPerson _ 1.0].	].! !----End fileIn of C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\0120Sticky.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #120] on 23 October 2004 at 7:19:52 pm'!"Change Set:		FollowBetterDate:			23 October 2004Author:			David A. SmithThis cleans up the avatar following a bit more. I did not like either the final first person transition, because it was too abrubt, nor did I like the number of distances or where they were. First, I removed the test to see if thirdPerson ~= 0.0 because the code works fine either way, and second, I am using thirdPerson squared as the actual distance because this requires fewer positions and the distances are more useful. You still have the two dominant ones, 0 and 1, but now instead of having 2,3,4,5, we have 4 and 9."!!TUserCamera methodsFor: 'transform' stamp: 'das 10/23/2004 19:13' prior: 34733815!followAvatar	| at ct trans bt weight tp2 |	avatar driving ifTrue:[avatar meta driveStep].	avatar sticky ifFalse:[		tp2 _ thirdPerson squared.		at_ avatar globalTransform.		ct _ self localTransform.		weight := 1.0 / (thirdPersonLag max: 1).		trans _ B3DMatrix4x4 identity. 		trans translation: (B3DVector3 x:0.0 y:0.7 z: 4)*tp2.		bt _ at composeWith: trans. "This is the target position of the camera"		trans _ ct translation + ((bt translation - ct translation) * weight)."at translation ~= ct translation ifTrue:[		self lookAt:at translation up: (B3DVector3 x:0 y:1 z:0) * tp2.].self translation: trans."		currentSpace _ avatar root.		at _ at asQuaternion.		ct _ ct asQuaternion.		ct_ct slerpTo: at at: weight.		self localTransform: (ct asMatrix4x4 translation:trans).	]ifTrue:[		currentSpace _ avatar root.		self localTransform: avatar globalTransform.	].	pointer cameraTransform: self localTransform.! !!TUserCamera methodsFor: 'initialize' stamp: 'das 10/23/2004 17:11' prior: 33647042!initializeWithViewPort: vp	super initializeWithViewPort: vp.	pointer _ TPointer new.	pointer minDistance: zNear.	pointer camera: self.	self addChild: pointer.	yellowButtonPressed _ false.	redButtonPressed _ false.	doRender _ true.	remoteControl _ nil.	overlays _ OrderedCollection new.	self addOverlay: (buttonsOverlay _ TOverlayButtons new camera: self).	self addOverlay: (morphicOverlay _ vp).	"self addOverlay: (debugOverlay _ TDebugOverlay new)."	thirdPerson _ 1.0.	thirdPersonLag _ 4.0.	! !!TUserCamera methodsFor: 'events' stamp: 'das 10/23/2004 19:09' prior: 52539946!toggleAvatarPerson	thirdPerson := thirdPerson - 1.	thirdPerson < 0 ifTrue:[thirdPerson := 3].! !----End fileIn of C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\0121FollowBetter.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 25 October 2004 at 6:32:19 am'!----End fileIn of a stream----!----SNAPSHOT----#(25 October 2004 8:34:32 am) LoadedOOPSLA-120-Flag.image priorSource: 1178574!----STARTUP----#(25 October 2004 8:39:17 am) as C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\LoadedOOPSLA-120-Flag.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 10:15' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 10:15' prior: 34637825!compute	k <- -1400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * -400.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/25/2004 10:16' prior: 34731188!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.! !----STARTUP----#(26 October 2004 8:43:57 am) as C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\LoadedOOPSLA-120-Flag.image!!TeapotMorph methodsFor: 'tea time' stamp: 'das 10/26/2004 09:04' prior: 52857343!noteNewHost: aHost	"We just learned about a new host. Do whatever is necesary."	| old |	aHost scheduler: self. "all messages to me"	aHost hostName = self localTeaHost hostName ifTrue:[^self].	SoundPlayer hiThere.	old := self updateAvatar. "For example, broadcasting my avatar"	self "meta" destroyAvatarNamed: old teaObjectName.! !----STARTUP----#(26 October 2004 9:08:48 am) as C:\Documents and Settings\squeak\Desktop\Jasmine OOPSLA\LoadedOOPSLA-120-Flag.image!!TeapotMorph methodsFor: 'tea time' stamp: 'das 10/26/2004 09:09' prior: 52857343!noteNewHost: aHost	"We just learned about a new host. Do whatever is necesary."	| old |	aHost scheduler: self. "all messages to me"	aHost hostName = self localTeaHost hostName ifTrue:[^self].	SoundPlayer hiThere.	old := self updateAvatar. "For example, broadcasting my avatar"	self destroyAvatarNamed: old teaObjectName.! !----SNAPSHOT----#(26 October 2004 9:09:30 am) LoadedOOPSLA-120-Flag.image priorSource: 1183378!----SNAPSHOT----#(26 October 2004 9:18:08 am) LoadedOOPSLA-121-Flag.image priorSource: 1186046!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/26/2004 09:20' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/26/2004 09:20' prior: 34740765!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/26/2004 09:21' prior: 34637825!compute	k <- -00.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/26/2004 09:21' prior: 34741639!compute	k <- -400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/26/2004 09:21' prior: 34742007!compute	k <- -400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/26/2004 09:22' prior: 34731188!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.! !----STARTUP----#(26 October 2004 12:36:38 pm) as Macintosh HD:Croquet J:LoadedOOPSLA-121-Flag.image!----SNAPSHOT----#(26 October 2004 12:37:09 pm) LoadedOOPSLA-121-Flag.image priorSource: 1186143!----STARTUP----#(26 October 2004 12:37:49 pm) as Macintosh HD:Croquet J:LoadedOOPSLA-121-Flag.image!----SNAPSHOT----#(26 October 2004 12:44:48 pm) LoadedOOPSLA-121-Flag.image priorSource: 1188843!----STARTUP----#(26 October 2004 1:06:55 pm) as Macintosh HD:Croquet J:LoadedOOPSLA-121-Flag.image!currentSpace teaObjectName!----STARTUP----#(26 October 2004 2:43:14 pm) as Macintosh HD:Croquet J:LoadedOOPSLA-121-Flag.image!!TeapotMorph methodsFor: 'tea time' stamp: 'das 10/26/2004 16:35' prior: 34740148!noteNewHost: aHost	"We just learned about a new host. Do whatever is necesary."	| old |	aHost scheduler: self. "all messages to me"	aHost hostName = self localTeaHost hostName ifTrue:[^self].	SoundPlayer hiThere.	old := self updateAvatar. "For example, broadcasting my avatar"	self meta destroyAvatarNamed: old teaObjectName.! !!TeaParty methodsFor: 'private' stamp: 'das 10/26/2004 16:47' prior: 52734728!hello: aHostName nickname: aNickname	"message introducing a new host to this party"	| other newOther tn |	TeaParty transcriptOn ifTrue:[		Transcript cr; show: 'Hello from ', aHostName, ' (', aNickname, ')'.	].Transcript show: '+ hello:nickname:';cr.	other _ TeaHost name: aHostName.	newOther _ false.	mutex critical: [Transcript show: '+ mutex';cr.		teaHostSet at: aHostName ifAbsent: [ newOther _ true. ].		teaHostSet at: aHostName put: (Array with: other with: aNickname with: TeaTime nowAsMicroseconds + 45000000.0)].	newOther ifTrue: [		  "if we learn about someone new inform him of us"		TeaParty transcriptOn ifTrue:[Transcript cr; show: 'Tell other guy about me'.].		ForceTunnel notNil ifTrue: [myHost tunnelOut: aHostName].		tn _ TeaName new initialize: #PartyCoordinator class: false.		myHost to: other sendForEffect: (TeaMessage new setTarget: tn selector: #hello:nickname: arguments: (Array with: myHost hostName with: nickname)).		teapot ifNotNil:[teapot noteNewHost: other].Transcript show: '- mutex';cr.	].Transcript show: '- hello:nickname:';cr.! !!TeapotMorph methodsFor: 'tea time' stamp: 'das 10/26/2004 16:48' prior: 34743891!noteNewHost: aHost	"We just learned about a new host. Do whatever is necesary."	| old |Transcript show: '+ noteNewHost:';cr.	aHost scheduler: self. "all messages to me"	aHost hostName = self localTeaHost hostName ifTrue:[^self].	SoundPlayer hiThere.	old := self updateAvatar. "For example, broadcasting my avatar"	self meta destroyAvatarNamed: old teaObjectName.Transcript show: '- noteNewHost:';cr.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 16:48' prior: 52846038!updateAvatar	"Update my avatar by replicating it among all of the members of my party"	| old new |Transcript show: '+ updateAvatar';cr.	old := activeCamera avatar.Transcript show: 'Out with the old: '; show: old teaObjectName;cr.	new := TAvatar meta new.	new meta loadAvatar: avatarPath.	new meta nickname: self nickname.	new meta host: self localTeaHost hostName.	new meta localTransform: old localTransform.Transcript show: 'In with the new: '; show: new teaObjectName;cr.	"Install it"	old parent meta addChild: new.	activeCamera avatar: new.Transcript show: 'Whas that again?: '; show: old teaObjectName;cr;cr.Transcript show: '- updateAvatar';cr.	^old! !!TeaParty methodsFor: 'private' stamp: 'das 10/26/2004 16:54' prior: 34744306!hello: aHostName nickname: aNickname	"message introducing a new host to this party"	| other newOther tn |	TeaParty transcriptOn ifTrue:[		Transcript cr; show: 'Hello from ', aHostName, ' (', aNickname, ')'.	].Transcript show: '+ hello:nickname:';cr.	other _ TeaHost name: aHostName.	newOther _ false.	mutex critical: [Transcript show: '+ mutex';cr.		teaHostSet at: aHostName ifAbsent: [ newOther _ true. ].		teaHostSet at: aHostName put: (Array with: other with: aNickname with: TeaTime nowAsMicroseconds + 45000000.0)].	newOther ifTrue: [		  "if we learn about someone new inform him of us"		TeaParty transcriptOn ifTrue:[Transcript cr; show: 'Tell other guy about me'.].		ForceTunnel notNil ifTrue: [myHost tunnelOut: aHostName].		tn _ TeaName new initialize: #PartyCoordinator class: false.		myHost to: other sendForEffect: (TeaMessage new setTarget: tn selector: #hello:nickname: arguments: (Array with: myHost hostName with: nickname)).		teapot ifNotNil:[teapot noteNewHost: other].	].Transcript show: '- hello:nickname:';cr.! !!TeaParty methodsFor: 'private' stamp: 'das 10/26/2004 16:55' prior: 34746726!hello: aHostName nickname: aNickname	"message introducing a new host to this party"	| other newOther tn |	TeaParty transcriptOn ifTrue:[		Transcript cr; show: 'Hello from ', aHostName, ' (', aNickname, ')'.	].Transcript show: '+ hello:nickname:';cr.	other _ TeaHost name: aHostName.	newOther _ false.	mutex critical: [		teaHostSet at: aHostName ifAbsent: [ newOther _ true. ].		teaHostSet at: aHostName put: (Array with: other with: aNickname with: TeaTime nowAsMicroseconds + 45000000.0)].	newOther ifTrue: [Transcript show: '+ newOther';cr.		  "if we learn about someone new inform him of us"		TeaParty transcriptOn ifTrue:[Transcript cr; show: 'Tell other guy about me'.].		ForceTunnel notNil ifTrue: [myHost tunnelOut: aHostName].		tn _ TeaName new initialize: #PartyCoordinator class: false.		myHost to: other sendForEffect: (TeaMessage new setTarget: tn selector: #hello:nickname: arguments: (Array with: myHost hostName with: nickname)).		teapot ifNotNil:[teapot noteNewHost: other].Transcript show: '- newOther';cr.	].Transcript show: '- hello:nickname:';cr.! !!TAvatar methodsFor: 'accessing' stamp: 'das 10/26/2004 18:03'!parent: p	p ifNotNil:[super parent:p].! !----STARTUP----#(26 October 2004 6:06:40 pm) as Macintosh HD:Croquet J:LoadedOOPSLA-121-Flag.image!!TAvatar methodsFor: 'accessing' stamp: 'das 10/26/2004 18:08'!parent:p	p ifNotNil:[super parent:p].! !----SNAPSHOT----#(26 October 2004 6:08:30 pm) LoadedOOPSLA-121-Flag.image priorSource: 1189044!!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 18:22'!fishAvatar	| sp oldAvatar fish pic1 newAvatar |	oldAvatar := activeCamera avatar.	newAvatar := TAvatar meta new.	pic1 _ TTexture meta new meta initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	fish  := self meta loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.	fish meta solid: false.	fish meta scale: 3.	fish meta objectName: 'fish'.	fish material meta texture: pic1.	fish material meta textureMode: GLModulate.	newAvatar meta addChild: fish.	sp := oldAvatar parent.	newAvatar meta localTransform: oldAvatar localTransform.	sp meta removeChild: oldAvatar.	sp meta addChild: newAvatar.	activeCamera meta avatar: newAvatar.	newAvatar waitUntil: #spaceLeave.	sp := newAvatar parent.	oldAvatar meta localTransform: newAvatar localTransform.	sp meta removeChild: newAvatar.	sp meta addChild: oldAvatar.	activeCamera meta avatar: oldAvatar.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 18:23' prior: 33708273!makeSomeFish: sp target: fishTarget	| mesh pic1 pic2 pic3 rnd fish tMesh mat frame atar |	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea'.	tMesh ifNil:[		mesh _ (FileStream readOnlyFileNamed:(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'fish.mesh'})) fileInObjectAndCode.		mesh reverseFaceDirection.		mesh transformBy: ((B3DRotation angle: 180 axis: 0@1@0) asMatrix4x4 composedWithLocal: (B3DMatrix4x4 withScale: (1@1@1))).		mat _ TMaterial new.		mat ambientColor: #(1 1 1 1) asFloatArray.		mat diffuseColor: #(1 1 1 1) asFloatArray.		tMesh := TMesh new initializeWithVertices: mesh vertices 			alias: nil 			norms: mesh vertexNormals			textureUV: mesh texCoords			faceGroups: {1. mesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary:'http://www.reed.com/TeaLand/spaces/theFish.tea'.	].	pic1 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	pic2 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'RockFish.jpg')) mipmap: true shrinkFit: false.	pic3 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'Seniorita.jpg')) mipmap: true shrinkFit: false.	rnd := Random seed: 123456.	{pic1. pic2. pic3} do:[:tex|		1 to: 4 do:[:i|			fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.			fish scale: 3.			fish solid: false.			fish objectName: 'fish'.			fish material texture: tex.			fish material textureMode: GLModulate.			frame := TDemoFish new.			frame target: fishTarget.			frame translationX: rnd next * 20 - 10 y: rnd next z: rnd next * 20 - 10.			frame addChild: fish.			sp addChild: frame.		].	].	atar := TAvatar new.	fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.	fish solid: false.	fish scale: 3.	fish objectName: 'fish'.	fish material texture: pic1.	fish material textureMode: GLModulate.	atar addChild: fish.	self startScript: #fishAvatar 		withArguments: {atar} 		when:{sp. #objectEnter}.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 18:23' prior: 34750483!makeSomeFish: sp target: fishTarget	| mesh pic1 pic2 pic3 rnd fish tMesh mat frame atar |	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea'.	tMesh ifNil:[		mesh _ (FileStream readOnlyFileNamed:(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'fish.mesh'})) fileInObjectAndCode.		mesh reverseFaceDirection.		mesh transformBy: ((B3DRotation angle: 180 axis: 0@1@0) asMatrix4x4 composedWithLocal: (B3DMatrix4x4 withScale: (1@1@1))).		mat _ TMaterial new.		mat ambientColor: #(1 1 1 1) asFloatArray.		mat diffuseColor: #(1 1 1 1) asFloatArray.		tMesh := TMesh new initializeWithVertices: mesh vertices 			alias: nil 			norms: mesh vertexNormals			textureUV: mesh texCoords			faceGroups: {1. mesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary:'http://www.reed.com/TeaLand/spaces/theFish.tea'.	].	pic1 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	pic2 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'RockFish.jpg')) mipmap: true shrinkFit: false.	pic3 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'Seniorita.jpg')) mipmap: true shrinkFit: false.	rnd := Random seed: 123456.	{pic1. pic2. pic3} do:[:tex|		1 to: 4 do:[:i|			fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.			fish scale: 3.			fish solid: false.			fish objectName: 'fish'.			fish material texture: tex.			fish material textureMode: GLModulate.			frame := TDemoFish new.			frame target: fishTarget.			frame translationX: rnd next * 20 - 10 y: rnd next z: rnd next * 20 - 10.			frame addChild: fish.			sp addChild: frame.		].	].	atar := TAvatar new.	fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.	fish solid: false.	fish scale: 3.	fish objectName: 'fish'.	fish material texture: pic1.	fish material textureMode: GLModulate.	atar addChild: fish.	self startScript: #fishAvatar 		when:{sp. #objectEnter}.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 18:23' prior: 34752767!makeSomeFish: sp target: fishTarget	| mesh pic1 pic2 pic3 rnd fish tMesh mat frame |	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea'.	tMesh ifNil:[		mesh _ (FileStream readOnlyFileNamed:(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'fish.mesh'})) fileInObjectAndCode.		mesh reverseFaceDirection.		mesh transformBy: ((B3DRotation angle: 180 axis: 0@1@0) asMatrix4x4 composedWithLocal: (B3DMatrix4x4 withScale: (1@1@1))).		mat _ TMaterial new.		mat ambientColor: #(1 1 1 1) asFloatArray.		mat diffuseColor: #(1 1 1 1) asFloatArray.		tMesh := TMesh new initializeWithVertices: mesh vertices 			alias: nil 			norms: mesh vertexNormals			textureUV: mesh texCoords			faceGroups: {1. mesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary:'http://www.reed.com/TeaLand/spaces/theFish.tea'.	].	pic1 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	pic2 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'RockFish.jpg')) mipmap: true shrinkFit: false.	pic3 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'Seniorita.jpg')) mipmap: true shrinkFit: false.	rnd := Random seed: 123456.	{pic1. pic2. pic3} do:[:tex|		1 to: 4 do:[:i|			fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.			fish scale: 3.			fish solid: false.			fish objectName: 'fish'.			fish material texture: tex.			fish material textureMode: GLModulate.			frame := TDemoFish new.			frame target: fishTarget.			frame translationX: rnd next * 20 - 10 y: rnd next z: rnd next * 20 - 10.			frame addChild: fish.			sp addChild: frame.		].	].	self startScript: #fishAvatar 		when:{sp. #objectEnter}.! !!TeapotMorph methodsFor: 'tea time' stamp: 'das 10/26/2004 18:25' prior: 34740148!noteNewHost: aHost	"We just learned about a new host. Do whatever is necesary."	| old |	aHost scheduler: self. "all messages to me"	aHost hostName = self localTeaHost hostName ifTrue:[^self].	SoundPlayer hiThere.	old := self updateAvatar. "For example, broadcasting my avatar"	self meta destroyAvatarNamed: old teaObjectName.! !----STARTUP----#(26 October 2004 6:28:20 pm) as Macintosh HD:Croquet J:LoadedOOPSLA-121-Flag.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 26 October 2004 at 6:26:46 pm'!!TAvatar methodsFor: 'accessing' stamp: 'das 10/26/2004 18:08' prior: 34749234!parent:p	p ifNotNil:[super parent:p].! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 18:22'!fishAvatar	| sp oldAvatar fish pic1 newAvatar |	oldAvatar := activeCamera avatar.	newAvatar := TAvatar meta new.	pic1 _ TTexture meta new meta initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	fish  := self meta loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.	fish meta solid: false.	fish meta scale: 3.	fish meta objectName: 'fish'.	fish material meta texture: pic1.	fish material meta textureMode: GLModulate.	newAvatar meta addChild: fish.	sp := oldAvatar parent.	newAvatar meta localTransform: oldAvatar localTransform.	sp meta removeChild: oldAvatar.	sp meta addChild: newAvatar.	activeCamera meta avatar: newAvatar.	newAvatar waitUntil: #spaceLeave.	sp := newAvatar parent.	oldAvatar meta localTransform: newAvatar localTransform.	sp meta removeChild: newAvatar.	sp meta addChild: oldAvatar.	activeCamera meta avatar: oldAvatar.! !!TeapotMorph methodsFor: 'toys' stamp: 'das 10/26/2004 18:23' prior: 33708273!makeSomeFish: sp target: fishTarget	| mesh pic1 pic2 pic3 rnd fish tMesh mat frame |	tMesh  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea'.	tMesh ifNil:[		mesh _ (FileStream readOnlyFileNamed:(FileDirectory pathFrom: {FileDirectory default pathName. 'Content'. 'Underwater'. 'fish.mesh'})) fileInObjectAndCode.		mesh reverseFaceDirection.		mesh transformBy: ((B3DRotation angle: 180 axis: 0@1@0) asMatrix4x4 composedWithLocal: (B3DMatrix4x4 withScale: (1@1@1))).		mat _ TMaterial new.		mat ambientColor: #(1 1 1 1) asFloatArray.		mat diffuseColor: #(1 1 1 1) asFloatArray.		tMesh := TMesh new initializeWithVertices: mesh vertices 			alias: nil 			norms: mesh vertexNormals			textureUV: mesh texCoords			faceGroups: {1. mesh zeroBasedFaceGroup}			material: mat.		tMesh initBounds.		TExporter export: tMesh asBinary:'http://www.reed.com/TeaLand/spaces/theFish.tea'.	].	pic1 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'OpalEye.jpg')) mipmap: true shrinkFit: false.	pic2 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'RockFish.jpg')) mipmap: true shrinkFit: false.	pic3 _ TTexture new initializeWithFileName: (FileDirectory pathFrom: #('Content' 'Underwater' 'Seniorita.jpg')) mipmap: true shrinkFit: false.	rnd := Random seed: 123456.	{pic1. pic2. pic3} do:[:tex|		1 to: 4 do:[:i|			fish  := self loadURL: 'http://www.reed.com/TeaLand/spaces/theFish.tea' reuseExisting: false.			fish scale: 3.			fish solid: false.			fish objectName: 'fish'.			fish material texture: tex.			fish material textureMode: GLModulate.			frame := TDemoFish new.			frame target: fishTarget.			frame translationX: rnd next * 20 - 10 y: rnd next z: rnd next * 20 - 10.			frame addChild: fish.			sp addChild: frame.		].	].	self startScript: #fishAvatar 		when:{sp. #objectEnter}.! !!TeapotMorph methodsFor: 'tea time' stamp: 'das 10/26/2004 18:25' prior: 34740148!noteNewHost: aHost	"We just learned about a new host. Do whatever is necesary."	| old |	aHost scheduler: self. "all messages to me"	aHost hostName = self localTeaHost hostName ifTrue:[^self].	SoundPlayer hiThere.	old := self updateAvatar. "For example, broadcasting my avatar"	self meta destroyAvatarNamed: old teaObjectName.! !----End fileIn of Macintosh HD:Croquet J:FixAvatar.1.cs----!----SNAPSHOT----#(26 October 2004 6:29:21 pm) NOTLoadedOOPSLA-122-Flag.image priorSource: 1194844!----STARTUP----#(30 October 2004 11:52:06 am) as Macintosh HD:Croquet J:NOTLoadedOOPSLA-122-Flag.image!!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/30/2004 11:53' prior: 34726814!makeBridge: ptr	| bridge texture |	texture _ TTexture meta				new meta initializeWithFileName: 'japan-flag.gif'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge meta texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/30/2004 11:56' prior: 34646717!release"release the tack points"	tackPoints do:[:tp | (masses at: tp) mass: 1.0.].	topLeft mass:0.0.	bottomLeft mass:0.0.	deltaTrans _ 0.003.	self root ambientSoundPlaying ifFalse:[		self root ambientSound: (self root loadAmbientSound:'National_Anthem_JapanX.mp3').		self root startAmbientSound.	].! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/30/2004 11:57' prior: 34646289!initialize	super initialize.	time _ 0.0.	xsize _ 16.	ysize _ 9.	linkLength _ 1.0.	mat _ TMaterial new.	mat ambientColor:#(1 1 1 1)asFloatArray.	mat diffuseColor: #(1 1 1 1)asFloatArray.	matTxtr _ TMaterial new.	matTxtr ambientColor:#(1 1 1 1)asFloatArray.	matTxtr diffuseColor: #(1 1 1 1)asFloatArray.	self reset.	wire _ true.! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/30/2004 11:57' prior: 34639971!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/30/2004 11:57' prior: 34762813!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/30/2004 11:57' prior: 34731188!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TTapestry methodsFor: 'initialize' stamp: 'das 10/30/2004 11:58' prior: 34762376!initialize	super initialize.	time _ 0.0.	xsize _ 15.	ysize _ 9.	linkLength _ 1.0.	mat _ TMaterial new.	mat ambientColor:#(1 1 1 1)asFloatArray.	mat diffuseColor: #(1 1 1 1)asFloatArray.	matTxtr _ TMaterial new.	matTxtr ambientColor:#(1 1 1 1)asFloatArray.	matTxtr diffuseColor: #(1 1 1 1)asFloatArray.	self reset.	wire _ true.! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/30/2004 12:05' prior: 34761451!makeBridge: ptr	| bridge texture |	texture _ TTexture meta				new meta initializeWithFileName: 'japanese_flag.gif'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge meta texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !----SNAPSHOT----#(30 October 2004 12:20:30 pm) NOTLoadedJapan-122-Flag.image priorSource: 1206727!----STARTUP----#(27 January 2005 10:07:23 pm) as Macintosh HD:Croquet J:NOTLoadedJapan-122-Flag.image!!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 1/27/2005 22:08' prior: 34765771!computeon <- false.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 21 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 1/27/2005 22:09' prior: 34764292!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"force reset.!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 2 12 1)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219! !----SNAPSHOT----#(27 January 2005 10:10:42 pm) NOTLoadedJapan-122-Flag.image priorSource: 1214022!SoundPlayer stopPlayingAll!SoundPlayer stopPlayingAll!----SNAPSHOT----#(27 January 2005 10:16:18 pm) NOTLoadedC5-122-Flag.image priorSource: 1217599!----QUIT----#(27 January 2005 10:16:38 pm) NOTLoadedC5-122-Flag.image priorSource: 1217757!----STARTUP----#(27 January 2005 10:25:20 pm) as C:\JCroquet\NOTLoadedC5-122-Flag.image!SoundPlayer stopPlayingAll!----SNAPSHOT----#(27 January 2005 10:27:27 pm) NOTLoadedC5-122-Flag.image priorSource: 1217854!----QUIT----#(27 January 2005 10:27:56 pm) NOTLoadedC5-122-Flag.image priorSource: 1218067!----STARTUP----#(28 January 2005 12:12:48 am) as C:\JCroquet\NOTLoadedC5-122-Flag.image!----SNAPSHOT----#(28 January 2005 12:12:59 am) C5 Demo2.image priorSource: 1218164!----QUIT----#(28 January 2005 12:13:05 am) C5 Demo2.image priorSource: 1218348!----STARTUP----#(28 January 2005 11:32:46 pm) as C:\JCroquet\C5 Demo2.image!!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 1/28/2005 23:37' prior: 34655465!initializeDefaultSpace	| space tframe |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	self makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space.""	texture _ TTexture				new initializeWithFileName: 'CanadaFlag.png'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@4.0@5.	space addChild: tframe.""	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	"self makeStartupLink: space."	self makeSlime: space.	^space! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 1/29/2005 00:07' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 1/29/2005 00:08' prior: 34637825!compute	k <- -400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 1/29/2005 00:08' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(1 February 2005 8:32:28 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:34' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:34' prior: 34778968!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -4.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:34' prior: 34780445!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -5.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:34' prior: 34781922!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -35.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 45 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:35' prior: 34783399!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:35' prior: 34637825!compute	k <- -1200.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:36' prior: 34786356!compute	k <- -600.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:36' prior: 34787812!compute	k <- -1000.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:36' prior: 34789267!compute	k <- -800.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 2/1/2005 20:36' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(18 February 2005 3:51:45 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 2/18/2005 15:52' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 2/18/2005 15:53' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 2/18/2005 15:53' prior: 34795547!compute	k <- -500.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 2/18/2005 15:53' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(11 March 2005 11:22:14 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/11/2005 23:23' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 3/11/2005 23:24' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 3/11/2005 23:25' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(15 March 2005 3:49:45 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:50' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:51' prior: 34805168!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -4.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:51' prior: 34806646!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:51' prior: 34808124!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:51' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:51' prior: 34811082!compute	k <- -350.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:51' prior: 34812538!compute	k <- -750.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 3/15/2005 15:52' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(30 March 2005 6:12:05 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:13' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:13' prior: 34817336!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -6.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:13' prior: 34818814!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -0.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:14' prior: 34820292!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:14' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:14' prior: 34823250!compute	k <- -1000.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 3/30/2005 18:15' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(1 April 2005 7:31:17 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:32' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:32' prior: 34828047!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -6.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:32' prior: 34829524!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -8.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:32' prior: 34831001!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -4.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:33' prior: 34637825!compute	k <- -400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:33' prior: 34833957!compute	k <- -1000.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 18 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 4/1/2005 19:34' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(29 April 2005 12:15:40 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:17' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:17' prior: 34838755!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 42 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:17' prior: 34840233!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -10 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 43 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:17' prior: 34841709!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 42 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:18' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:18' prior: 34844664!compute	k <- -400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:18' prior: 34846120!compute	k <- -600.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 4/29/2005 12:18' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(28 May 2005 3:55:03 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 5/28/2005 15:56' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 5/28/2005 15:57' prior: 34850916!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 5/28/2005 15:57' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 5/28/2005 15:58' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(2 August 2005 11:20:13 pm) as C:\JCroquet\C5 Demo2.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/2/2005 23:20' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !----STARTUP----#(2 August 2005 11:21:22 pm) as C:\JCroquet\C5 Demo2.image!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/2/2005 23:21' prior: 33672907!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe."	cameraButton rotationAroundY:180."	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera.	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.15.	ctrlFrame innerRadius: 0.075.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !!TAvatar methodsFor: 'initialize' stamp: 'das 8/2/2005 23:23' prior: 33839881!initialize	| downMatrix |	super initialize.	sticky _ false.	doRender _ true.	carrying _ nil.	height _ 4.6.	lastDownPosition _ B3DVector3 new.	footFrame _ TGroup new.	footFrame singleParent: true.	gotoCount _ 0.	driving _ false.	controlPitch _ false.	currentSpace _ nil."	laser _ TLaser new.	laser translation:(B3DVector3 x: 0.5 y:-0.3 z:-0.2).	laser length: 0.5.	self addChild: laser."	transparency _ 1.0.	downMatrix _ B3DMatrix4x4 identity rotationAroundX: -90.	downPointer _ TRay new.	downPointer localTransform: downMatrix.	downPointer downRay: true.	self addChild: downPointer.	self fall.	pointer _ TPointer new.	camera _ TCamera new.	camera addChild: pointer.	pointer camera: camera.	pointer avatar: self.	self startScript: #showIDScript when:{self. #pointerEnter}.	^self! !!TAvatar methodsFor: 'transform' stamp: 'das 8/2/2005 23:23' prior: 51515643!pointerTransform: transform	| p0 p1 at up side m |	pointer localTransform: transform."	pointer selectedFrame ifNotNil:[		p0 _ laser globalPosition.		p1 _ pointer selectedFrame globalTransform localPointToGlobal: pointer selectedPoint.		p0 _ self globalOrientation orthoNormInverse localPointToGlobal: (p0-p1).		at _ p0 normalized.		up _ 0@1@0.		side _ (at cross: up) normalized negated.		up _ (side cross: at) normalized negated.		m _ B3DMatrix4x4 identity.		m a11: side x.		m a21: side y.		m a31: side z.		m a12: up x.		m a22: up y.		m a32: up z.		m a13: at x.		m a23: at y.		m a33: at z.		laser orientation: m.		pointer isDown ifTrue:[laser length: p0 length] ifFalse:[laser length:0.5].	] ifNil:[		laser length: 0.5.		laser orientation:pointer orientation.		].				"! !----SNAPSHOT----#(2 August 2005 11:24:14 pm) BridgeDemo.image priorSource: 1218433!!TUserCamera methodsFor: 'initialize' stamp: 'das 8/2/2005 23:26' prior: 34736891!initializeWithViewPort: vp	super initializeWithViewPort: vp.	pointer _ TPointer new.	pointer minDistance: zNear.	pointer camera: self.	self addChild: pointer.	yellowButtonPressed _ false.	redButtonPressed _ false.	doRender _ true.	remoteControl _ nil.	overlays _ OrderedCollection new.	self addOverlay: (buttonsOverlay _ TOverlayButtons new camera: self).	self addOverlay: (morphicOverlay _ vp).	"self addOverlay: (debugOverlay _ TDebugOverlay new)."	thirdPerson _ 0.0.	thirdPersonLag _ 4.0.	! !----SNAPSHOT----#(2 August 2005 11:31:21 pm) BridgeDemo.image priorSource: 1307925!----STARTUP----#(3 August 2005 12:57:14 pm) as C:\JCroquet\BridgeDemo.image!!TOverlayButtons methodsFor: 'popups' stamp: 'das 8/3/2005 13:00' prior: 34768005!makeBridge: ptr	| bridge texture |	texture _ TTexture meta				new meta initializeWithFileName: 'googleFlag.bmp'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge meta texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !SoundPlayer stopPlayingAll!----SNAPSHOT----#(3 August 2005 1:01:33 pm) BridgeDemo.image priorSource: 1308605!----QUIT----#(3 August 2005 1:01:44 pm) BridgeDemo.image priorSource: 1309328!----STARTUP----#(3 August 2005 9:05:55 pm) as C:\JCroquet\BridgeDemo.image!!TTapestry methodsFor: 'initialize' stamp: 'das 8/3/2005 21:07' prior: 34761981!release"release the tack points"	tackPoints do:[:tp | (masses at: tp) mass: 1.0.].	topLeft mass:0.0.	bottomLeft mass:0.0.	deltaTrans _ 0.003.	self root ambientSoundPlaying ifFalse:[		self root ambientSound: (self root loadAmbientSound:'totoro.mp3').		self root startAmbientSound.	].! !----SNAPSHOT----#(3 August 2005 9:07:14 pm) BridgeDemo.image priorSource: 1309412!----SNAPSHOT----#(3 August 2005 9:07:28 pm) BridgeDemo.image priorSource: 1309947!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:07' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:08' prior: 34864638!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -6.0 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:08' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:08' prior: 34867594!compute	k <- -600.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:08' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:09' prior: 34870502!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -10).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 143 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:10' prior: 34872313!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -10).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.07.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 143 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:10' prior: 34874125!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -10).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.1.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 143 1 13 1 35 1 14 1 26 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:10' prior: 34875937!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -5).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.1.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 26 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:11' prior: 34877748!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -6).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.1.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 26 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(3 August 2005 9:12:29 pm) as C:\JCroquet\BridgeDemo.image!!TTapestry methodsFor: 'compute' stamp: 'das 8/3/2005 21:14' prior: 34650346!compute	masses ifNil:[ ^ self ].	self computeNorms.	"true ifTrue:[ self addGravity:(-0.01 @ -2.0 @ 0.01).]. ""set force to the gravity"	true ifTrue:[		self addWind.		springs do:[ :s | s compute. ]. 		masses do:[ :m | m compute. ].		self addWind.		springs do:[ :s | s compute. ]. 		masses do:[ :m | m compute. ].		self addWind.		springs do:[ :s | s compute. ]. 		masses do:[ :m | m compute. ].		].	self initBounds.	self future: 10 perform: #compute.! !----SNAPSHOT----#(3 August 2005 9:14:55 pm) BridgeDemo.image priorSource: 1310031!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34882079!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 42 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34883556!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -8 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 42 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34885031!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -9 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 42 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34886506!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -10 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 43 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34887981!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:15' prior: 34889457!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -15 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 43 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:16' prior: 34890934!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:16' prior: 34892410!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ 3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 43 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:16' prior: 34893887!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:16' prior: 34895363!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -10 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 43 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:16' prior: 34637825!compute	k <- -400.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:16' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:17' prior: 34896840!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 42 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !----STARTUP----#(3 August 2005 9:19:58 pm) as C:\JCroquet\BridgeDemo.image!!TLight class methodsFor: 'instance creation' stamp: 'das 8/3/2005 21:20'!makeLight: space	| lt lt2 |	lt _ TLight new.	lt ambientColor: #(0.6 0.6 0.7 1) asFloatArray.	lt diffuseColor: #(0.6 0.6 0.7 1) asFloatArray.	lt specularColor: #(0.2 0.2 0.3 1.0) asFloatArray.	lt visible: false.	lt addRotationAroundZ: 120.	lt addRotationAroundY:-30.	lt translationX: -30 y:-32 z: -76.space addChild: lt.	lt2 _ TLight new.	lt2 ambientColor: #(0.4 0.2 0.2 1.0) asFloatArray.	lt2 diffuseColor: #(0.4 0.2 0.2 1.0) asFloatArray.	lt2 specularColor: #(0.1 0.1 0.2 1.0) asFloatArray.	lt2 visible: false.	lt2 addRotationAroundZ: -120.	lt2 addRotationAroundY:30.	lt2 translationX: -34 y:-32 z: -76.space addChild: lt2.! !!SampleTeapotMorph methodsFor: 'initialize' stamp: 'das 8/3/2005 21:20' prior: 34655465!initializeDefaultSpace	| space tframe |	"Create a new space""self makeJIVE."	space _ TSpace new.	"Make a light"	TLight makeLight: space.	"Make a floor"	self makeFloor: space fileName:'lawn.BMP'.	"Make a sky box"	tframe _ TSkyBox new initializeWithFileName: 'JUL'.	space addChild: tframe.	"Make a mirror"	tframe := self makeMirror: space."	tframe := TSpinCube new.	space addChild: tframe.""	self makeSpreadSheet: space.""	self make3Body: space.""	self makeDungeon:space.""	self makeFlash: space.""	texture _ TTexture				new initializeWithFileName: 'CanadaFlag.png'				mipmap: true				shrinkFit: false.	tframe := TTapestry new.	tframe texture: texture.	tframe translation:-5@4.0@5.	space addChild: tframe.""	tframe := TFlag new.	tframe texture: texture.	tframe translation:5@1@5.	space addChild: tframe.""	self makeUnderwater3: space."	"self makeStartupLink: space."	^space! !----SNAPSHOT----#(3 August 2005 9:20:48 pm) BridgeDemo.image priorSource: 1327472!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:21' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:21' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 8/3/2005 21:21' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TLight class methodsFor: 'instance creation' stamp: 'das 8/3/2005 21:22' prior: 34903120!makeLight: space	| lt lt2 |	lt _ TLight new.	lt ambientColor: #(0.6 0.6 0.7 1) asFloatArray.	lt diffuseColor: #(0.6 0.6 0.7 1) asFloatArray.	lt specularColor: #(0.2 0.2 0.3 1.0) asFloatArray.	lt visible: false.	lt addRotationAroundZ: 120.	lt addRotationAroundY:-30.	lt translationX: -30 y:-32 z: -76.space addChild: lt.	lt2 _ TLight new.	lt2 ambientColor: #(0.4 0.35 0.35 1.0) asFloatArray.	lt2 diffuseColor: #(0.4 0.35 0.35 1.0) asFloatArray.	lt2 specularColor: #(0.1 0.1 0.2 1.0) asFloatArray.	lt2 visible: false.	lt2 addRotationAroundZ: -120.	lt2 addRotationAroundY:30.	lt2 translationX: -34 y:-32 z: -76.space addChild: lt2.! !!TLight class methodsFor: 'instance creation' stamp: 'das 8/3/2005 21:24' prior: 34909692!makeLight: space	| lt lt2 |	lt _ TLight new.	lt ambientColor: #(0.6 0.6 0.7 1) asFloatArray.	lt diffuseColor: #(0.6 0.6 0.7 1) asFloatArray.	lt specularColor: #(0.2 0.2 0.3 1.0) asFloatArray.	lt visible: false.	lt addRotationAroundZ: 120.	lt addRotationAroundY:-30.	lt translationX: -30 y:-32 z: -76.space addChild: lt.	lt2 _ TLight new.	lt2 ambientColor: #(0.2 0.2 0.2 1.0) asFloatArray.	lt2 diffuseColor: #(0.2 0.2 0.2 1.0) asFloatArray.	lt2 specularColor: #(0.1 0.1 0.2 1.0) asFloatArray.	lt2 visible: false.	lt2 addRotationAroundZ: -120.	lt2 addRotationAroundY:30.	lt2 translationX: -34 y:-32 z: -76.space addChild: lt2.! !----STARTUP----#(3 August 2005 9:26:18 pm) as C:\JCroquet\BridgeDemo.image!!TLight class methodsFor: 'instance creation' stamp: 'das 8/3/2005 21:26' prior: 34903120!makeLight: space	| lt lt2 |	lt _ TLight new.	lt ambientColor: #(0.6 0.6 0.7 1) asFloatArray.	lt diffuseColor: #(0.6 0.6 0.7 1) asFloatArray.	lt specularColor: #(0.2 0.2 0.3 1.0) asFloatArray.	lt visible: false.	lt addRotationAroundZ: 120.	lt addRotationAroundY:-30.	lt translationX: -30 y:-32 z: -76.space addChild: lt.	lt2 _ TLight new.	lt2 ambientColor: #(0.2 0.2 0.2 1.0) asFloatArray.	lt2 diffuseColor: #(0.2 0.2 0.2 1.0) asFloatArray.	lt2 specularColor: #(0.1 0.1 0.2 1.0) asFloatArray.	lt2 visible: false.	lt2 addRotationAroundZ: -120.	lt2 addRotationAroundY:30.	lt2 translationX: -34 y:-32 z: -76.space addChild: lt2.! !----SNAPSHOT----#(3 August 2005 9:26:34 pm) BridgeDemo.image priorSource: 1350342!----STARTUP----#(4 August 2005 6:36:26 pm) as C:\JCroquet\BridgeDemo.image!TGroup subclass: #TAvatar	instanceVariableNames: 'content nickname host speaker doRender height footFrame lastDownFrame lastDownPosition gotoCount gotoTransform snapTrans sticky speedControl driving controlPitch currentSpace laser transparency downPointer pointer camera carrying cameraBehind'	classVariableNames: ''	poolDictionaries: ''	category: 'Croquet-Objects'!!TAvatar methodsFor: 'initialize' stamp: 'das 8/4/2005 18:44' prior: 34860664!initialize	| downMatrix |	super initialize.	sticky _ false.	doRender _ true.	carrying _ nil.	height _ 4.6.	lastDownPosition _ B3DVector3 new.	footFrame _ TGroup new.	footFrame singleParent: true.	gotoCount _ 0.	driving _ false.	controlPitch _ false.	currentSpace _ nil."	laser _ TLaser new.	laser translation:(B3DVector3 x: 0.5 y:-0.3 z:-0.2).	laser length: 0.5.	self addChild: laser."	transparency _ 1.0.	downMatrix _ B3DMatrix4x4 identity rotationAroundX: -90.	downPointer _ TRay new.	downPointer localTransform: downMatrix.	downPointer downRay: true.	self addChild: downPointer.	self fall.	pointer _ TPointer new.	camera _ TCamera new.	camera addChild: pointer.	pointer camera: camera.	pointer avatar: self.	cameraBehind _ false.	self startScript: #showIDScript when:{self. #pointerEnter}.	^self! !!TAvatar methodsFor: 'accessing' stamp: 'das 8/4/2005 18:44'!cameraBehind	"should be boolean"	^ cameraBehind.! !!TAvatar methodsFor: 'accessing' stamp: 'das 8/4/2005 18:44'!cameraBehind: cb	"should be either 0 or 1.0"	cameraBehind _ cb.! !!TUserCamera methodsFor: 'transform' stamp: 'das 8/4/2005 18:45' prior: 34735869!followAvatar	| at ct trans bt weight tp2 |	avatar ifNil:[^self].	avatar driving ifTrue:[avatar meta driveStep].	(avatar sticky or:[avatar cameraBehind])ifFalse:[		tp2 _ thirdPerson squared.		at_ avatar globalTransform.		ct _ self localTransform.		weight := 1.0 / (thirdPersonLag max: 1).		trans _ B3DMatrix4x4 identity. 		trans translation: (B3DVector3 x:0.0 y:0.7 z: 4)*tp2.		bt _ at composeWith: trans. "This is the target position of the camera"		trans _ ct translation + ((bt translation - ct translation) * weight)."at translation ~= ct translation ifTrue:[		self lookAt:at translation up: (B3DVector3 x:0 y:1 z:0) * tp2.].self translation: trans."		currentSpace _ avatar root.		at _ at asQuaternion.		ct _ ct asQuaternion.		ct_ct slerpTo: at at: weight.		self localTransform: (ct asMatrix4x4 translation:trans).	]ifTrue:[		currentSpace _ avatar root.		self localTransform: avatar globalTransform.	].	pointer cameraTransform: self localTransform.! !!TAvatar methodsFor: 'accessing' stamp: 'das 8/4/2005 18:47' prior: 33578280!carryingRelease: aFrame	carrying ifNotNil:[		carrying remove: aFrame ifAbsent:[]. 		carrying size = 0 ifTrue:[carrying _ nil].].! !!TAvatar methodsFor: 'render' stamp: 'das 8/4/2005 18:48' prior: 33690506!renderFrame: ogl parent: parent root: root	| ac rval tr |	ac _ ogl camera.	doRender ifTrue:["Render everyone else's avatars"		ac avatar = self ifFalse:[  ^ super renderFrame: ogl parent: parent root: root]."Only render ours if we are inside of a portal (such as a mirror) or the camera is behind the avatar"		ac inPortal ifTrue:[ "just render if we are in a portal"			transparency ~= 1.0 ifTrue:[self transparency: 1.0.].					^ super renderFrame: ogl parent: parent root: root. 		] ifFalse:[ "otherwise, check to see if we are thirdPerson or not"			ac thirdPerson ~= 0 ifTrue:[				tr _ (((self globalPosition- ac globalPosition) length-3.0)/3.0 min:1.0) max:0.0.				self transparency: tr.				carrying ifNotNil: [ self carryingDo: [:child | child transparency: 1.0.]. ].				rval _ super renderFrame: ogl parent: parent root: root.				^ rval.			] ifFalse: [				carrying ifNotNil: [ 					self transparency: 0.0.  "hide the avatar"					"show what we are carrying"					self carryingDo: [:child | child transparency: 1.0.]. 					rval _ super renderFrame: ogl parent: parent root: root.					^ rval.				].			].		].	].	^ 0.! !----QUIT----#(4 August 2005 6:52:58 pm) BridgeDemo.image priorSource: 1357473!----STARTUP----#(6 August 2005 12:04:09 pm) as C:\JCroquet\BridgeDemo.image!----SNAPSHOT----#(6 August 2005 12:04:28 pm) BridgeDemo.image priorSource: 1361676!----STARTUP----#(9 August 2005 1:35:23 pm) as C:\JCroquet\BridgeDemo.image!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:36' prior: 34858767!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.15.	ctrlFrame innerRadius: 0.075.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 33727553!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.	ctrl target: camera action: #toggleHalo.].! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 34916518!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.10.	ctrlFrame innerRadius: 0.05.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:40' prior: 34918388!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.].	ctrl target: camera action: #toggleHalo.! !----STARTUP----#(9 August 2005 1:41:59 pm) as C:\JCroquet\BridgeDemo.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 9 August 2005 at 1:41:40 pm'!"Change Set:		GoogleDemo3Date:			9 August 2005Author:			David A. SmithRemove camera and phone. Shrink the torus."!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:40' prior: 33727553!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.].	ctrl target: camera action: #toggleHalo.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 34858767!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.10.	ctrlFrame innerRadius: 0.05.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !----End fileIn of C:\JCroquet\GoogleDemo3.1.cs----!----STARTUP----#(9 August 2005 2:39:54 pm) as C:\JCroquet\BridgeDemo.image!TUserCamera allInstances!TUserCamera allInstances!TUserCamera allInstances!TUserCamera allInstances!TUserCamera allInstances!TUserCamera allInstances!TeapotMorph allInstances!SampleTeapotMorph allInstances!SampleTeapotMorph allInstances!SampleTeapotMorph allInstances!Smalltalk garbageCollect!SampleTeapotMorph allInstances!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 9 August 2005 at 1:41:40 pm'!"Change Set:		GoogleDemo3Date:			9 August 2005Author:			David A. SmithRemove camera and phone. Shrink the torus."!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:40' prior: 33727553!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.].	ctrl target: camera action: #toggleHalo.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 34858767!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.10.	ctrlFrame innerRadius: 0.05.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !----End fileIn of C:\JCroquet\GoogleDemo3.1.cs----!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 14:51'!hideIcons	snapCamera removeSelf.	phone removeSelf.! !!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame	^ frame.! !!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame2	^ frame2.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 14:54' prior: 34926293!hideIcons	snapCamera removeSelf.	phone removeSelf.	ctrl frame radius: 0.10.	ctrl frame innerRadius: 0.05.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 14:54' prior: 34926603!hideIcons	snapCamera ifNotNil:[snapCamera removeSelf.].	phone ifNotNil:[phone removeSelf.].	ctrl frame radius: 0.10.	ctrl frame innerRadius: 0.05.! !----STARTUP----#(9 August 2005 2:56:46 pm) as C:\JCroquet\BridgeDemo.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 9 August 2005 at 2:56:31 pm'!"Change Set:		GoogleDemo3Date:			9 August 2005Author:			David A. SmithRemove camera and phone. Shrink the torus."!!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame	^ frame.! !!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame2	^ frame2.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:40' prior: 33727553!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.].	ctrl target: camera action: #toggleHalo.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 14:54'!hideIcons	snapCamera ifNotNil:[snapCamera removeSelf.].	phone ifNotNil:[phone removeSelf.].	ctrl frame radius: 0.10.	ctrl frame innerRadius: 0.05.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 34858767!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.10.	ctrlFrame innerRadius: 0.05.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !"Postscript:Remove active camara and phone icons."TOverlayButtons allInstances do:[:ob | ob hideIcons.].!----End fileIn of C:\JCroquet\GoogleDemo4.1.cs----!----STARTUP----#(9 August 2005 5:17:41 pm) as C:\JCroquet\BridgeDemo.image!TOverlayButtons allInstances!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:25' prior: 52022913!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: cam zScreen negated.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:26' prior: 34930192!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:26' prior: 34930689!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -4.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:26' prior: 34931171!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -3.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:26' prior: 34931653!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -2.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:26' prior: 34932135!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -2.2.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:27' prior: 34932617!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -5.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:27' prior: 34933099!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: bnds width/cam zScreen negated y: bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34933581!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.5*bnds width/cam zScreen y: bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34934063!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.5*bnds width/cam zScreen y: 2.7*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34934541!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.5*bnds width/cam zScreen y: 2.8*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34935023!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.5*bnds width/cam zScreen y: 2.9*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34935505!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.7*bnds width/cam zScreen y: 2.9*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34935987!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.8*bnds width/cam zScreen y: 2.9*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34936469!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.9*bnds width/cam zScreen y: 2.9*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:28' prior: 34936951!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 3.0*bnds width/cam zScreen y: 3.0*bnds height/cam zScreen z: -6.0.]! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:29' prior: 34937433!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.9*bnds width/cam zScreen y: 2.9*bnds height/cam zScreen z: -6.0.]! !'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 9 August 2005 at 2:56:31 pm'!"Change Set:		GoogleDemo3Date:			9 August 2005Author:			David A. SmithRemove camera and phone. Shrink the torus."!!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame	^ frame.! !!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame2	^ frame2.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:40' prior: 33727553!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.].	ctrl target: camera action: #toggleHalo.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 14:54'!hideIcons	snapCamera ifNotNil:[snapCamera removeSelf.].	phone ifNotNil:[phone removeSelf.].	ctrl frame radius: 0.10.	ctrl frame innerRadius: 0.05.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 34858767!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.10.	ctrlFrame innerRadius: 0.05.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !"Postscript:Remove active camara and phone icons."TOverlayButtons allInstances do:[:ob | ob hideIcons.].!----End fileIn of C:\JCroquet\GoogleDemo4.1.cs----!----STARTUP----#(9 August 2005 5:34:31 pm) as C:\JCroquet\BridgeDemo.image!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 9 August 2005 at 2:56:31 pm'!"Change Set:		GoogleDemo3Date:			9 August 2005Author:			David A. SmithRemove camera and phone. Shrink the torus."!!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame	^ frame.! !!TButton methodsFor: 'accessing' stamp: 'das 8/9/2005 14:53'!frame2	^ frame2.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:40' prior: 33727553!camera: camera	phone ifNotNil:[phone target: camera action: #startChat.	phone target2: camera action2: #endChat.].	snapCamera ifNotNil:[snapCamera target: camera action: #snapshot.].	ctrl target: camera action: #toggleHalo.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 14:54'!hideIcons	snapCamera ifNotNil:[snapCamera removeSelf.].	phone ifNotNil:[phone removeSelf.].	ctrl frame radius: 0.10.	ctrl frame innerRadius: 0.05.! !!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 13:38' prior: 34858767!initialize	| tframe tframe2 receiver path light ctrlFrame |	super initialize.	path _ {FileDirectory default pathName. 'Content'. 'Widgets'}.	space _ TSpace new.	camLoc _ TGroup new.	space addChild: camLoc.	light _ TLight new.	light translationX: -10 y:0.0 z: 0.0.	light rotationAroundZ: 110.	light addRotationAroundY:-10.	camLoc addChild: light."	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, { 'phone.ASE'}) scale: 1.0.	tframe2 _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/phone.tea'		fileName:(path, {  'phone.ASE'}) scale: 1.0.	receiver _ (tframe2 find:[ :frm | frm objectName = 'receiver' ]) at: 2.	receiver translationX:-0.125 y:0 z: -0.125.	receiver rotationAroundY: 30.	phone _ TButton new initializeSwitchWithFrame: tframe frame2: tframe2.	phone translationX: -2 y: 0 z: -5.	phone persist: true.	phone spin: true.	phone local: true.	camLoc addChild: phone.	phone fullBright: true.	tframe _ TWidget createNewWithUrl:'http://www.reed.com/TeaLand/widgets/cameraSnap.tea'		fileName:(path, {  'camera.ASE'}) scale:0.4.	snapCamera _ TButton new initializeWithFrame: tframe.	snapCamera persist: true.	snapCamera translationX: -2 y: 0 z: -5.	snapCamera fullBright: true.	snapCamera spin: true.	camLoc addChild: snapCamera."	ctrlFrame _ TTorus new.	ctrlFrame radius: 0.10.	ctrlFrame innerRadius: 0.05.	ctrlFrame segments: 10.	ctrlFrame texture: (TTexture new initializeWithFileName: 'squeaklogo2.bmp').	ctrl _ TButton new initializeWithFrame: ctrlFrame.	ctrl persist: true.	ctrl spin: false.	ctrl fullBright: true.	ctrl rotationAroundX: 140.	ctrl translationX: -2.5 y: 1.8 z: -5.	camLoc addChild: ctrl."	camLoc addChild: TCrosshair new."	self makePopup.! !"Postscript:Remove active camara and phone icons."TOverlayButtons allInstances do:[:ob | ob hideIcons.].!----End fileIn of C:\JCroquet\GoogleDemo4.1.cs----!'From Jasmine-rc1 of 7 October 2004 [latest update: #118] on 9 August 2005 at 5:31:07 pm'!!TOverlayButtons methodsFor: 'initialize' stamp: 'das 8/9/2005 17:29' prior: 52022913!frustumChanged: cam	| bnds |	bnds _ cam bounds.	phone ifNotNil:[ 		phone translationX: 2.5*bnds width/cam zScreen y: 0.0 * bnds height/cam zScreen z: -6.0.].	snapCamera ifNotNil:[		snapCamera translationX: 2.5*bnds width/cam zScreen y: 2.7 * bnds height/cam zScreen z: -6.0.].	ctrl ifNotNil:[		ctrl translationX: 2.9*bnds width/cam zScreen y: 2.9*bnds height/cam zScreen z: -6.0.]! !----End fileIn of C:\JCroquet\GoogleDemo5.1.cs----!----STARTUP----#(4 October 2005 3:00:11 pm) as C:\JCroquet\BridgeDemo.image!----QUIT----#(4 October 2005 3:00:39 pm) BridgeDemo.image priorSource: 1361835!----STARTUP----#(4 October 2005 3:00:51 pm) as C:\JCroquet\BridgeDemo.image!----QUIT----#(4 October 2005 3:01:02 pm) BridgeDemo.image priorSource: 1390575!----STARTUP----#(4 October 2005 3:01:07 pm) as C:\JCroquet\BridgeDemo.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/4/2005 15:01' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !----STARTUP----#(4 October 2005 5:40:20 pm) as C:\JCroquet\BridgeDemo.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/4/2005 17:41' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/4/2005 17:41' prior: 34946976!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -4.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/4/2005 17:41' prior: 34948454!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/4/2005 17:41' prior: 34637825!compute	k <- -800.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/4/2005 17:42' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !----STARTUP----#(8 October 2005 2:29:52 pm) as C:\JCroquet\BridgeDemo.image!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:30' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:30' prior: 34954757!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -7.0 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:31' prior: 34637825!compute	k <- -700.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoSpring methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:31' prior: 34957715!compute	k <- -600.								"spring constant"	v <- mass1 location - mass2 location.	"actual length"	n <- v normalized * rest.				"rest length"	f <- (v - n ) * k.							"compute force"	mass1 addForce:f.						"add to mass1"	mass2 addForce:f negated.				"and to mass2"!]style[(8 3 17 1 15 1 1 1 38 1 13 1 31 1 11 1 27 1 13 1 16 1 8 1 12 1 16 1 14 1 12 2)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1bFBitstreamVeraSans#12.0,f1bc220220220FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c220255220! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:31' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/8/2005 14:38' prior: 34863285!makeBridge: ptr	| bridge texture |	texture _ TTexture meta				new meta initializeWithFileName: 'sopFlag.bmp'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge meta texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !----STARTUP----#(8 October 2005 2:39:23 pm) as C:\JCroquet\BridgeDemo.image!!TOverlayButtons methodsFor: 'popups' stamp: 'das 10/8/2005 14:39' prior: 34863285!makeBridge: ptr	| bridge texture |	texture _ TTexture meta				new meta initializeWithFileName: 'sopFlag.bmp'				mipmap: true				shrinkFit: false.	bridge _ TTapestry meta new.	bridge meta texture: texture.	bridge meta translationX: (bridge extent x * bridge linkLength/-2.0) y: 3.0 z: -10.0.	ptr avatar meta addChild: bridge.	bridge meta releaseToRoot.	bridge meta compute. "start the computations"	popup doKillWindow.	^bridge.! !----SNAPSHOT----#(8 October 2005 2:40:01 pm) BridgeDemo.image priorSource: 1390735!!TDemoMass methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:40' prior: 34770564!computeTest mass <> 0	Yes		t <- 0.02. 								"delta time"		accel <- force/mass. 					"compute acceleration"		velocity increaseBy: 0.9 * accel * t.		"increase velocity"		velocity multiplyBy: 0.997. 				"damp velocity"		location increaseBy: velocity * t.	 	"change location"	End.force <-  (-0.01 @ -3.5 @ 0.01).					"set gravity"!]style[(49 1 10 1 29 1 20 1 22 1 19 1 17 1 22 1 12 1 13 1 22 1 17 1 15 1 44 1 11 3)f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0bc219255219,f1FBitstreamVeraSans#12.0i,f1FBitstreamVeraSans#12.0bc219255219! !!TDemoWind methodsFor: 'as yet unclassified' stamp: 'das 10/8/2005 14:40' prior: 34768751!computeon <- true.									"turn wind on/off"Test on	Yes	scl <- 1.0.								"scale factor"	windPeriod <- 15.0.						"wind period"	windPhase <- 0.9.						"wind phase"	force <-  scl*(B3DVector3 		x: (time*Float twoPi/(windPeriod*windPhase))cos		y:  0.5*((time * Float twoPi/windPeriod) sin)		z: -8).								"compute force"	direction <- force normalized.			"compute normal"	time <- time + 0.05.					"next time"	End.!]style[(8 20 1 16 1 1 13 1 19 1 12 1 1 1 25 1 11 1 1 1 23 1 10 1 1 1 142 1 13 1 35 1 14 1 27 1 9 2 6)f1FBitstreamVeraSans#12.0b,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0b,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1FBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1iFBitstreamVeraSans#12.0,f1bFBitstreamVeraSans#12.0c215255215,f1bFBitstreamVeraSans#12.0! !